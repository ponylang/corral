name: Release

on:
  push:
    tags:
      - \d+.\d+.\d+

concurrency: release

jobs:
  # validation to assure that we should in fact continue with the release should
  # be done here. the primary reason for this step is to verify that the release
  # was started correctly by pushing a `release-X.Y.Z` tag rather than `X.Y.Z`.
  pre-artefact-creation:
    name: Tasks to run before artefact creation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          ref: "main"
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Validate CHANGELOG
        uses: ponylang/release-bot-action@0.6.1
        with:
          entrypoint: pre-artefact-changelog-check

  x86-64-unknown-linux-release:
    name: Build and upload x86-64-unknown-linux-release to Cloudsmith
    runs-on: ubuntu-latest
    needs:
      - pre-artefact-creation
    container:
      image: ponylang/shared-docker-ci-x86-64-unknown-linux-builder:release
    steps:
      - uses: actions/checkout@v1
      - name: Build and upload
        run: bash .ci-scripts/release/x86-64-unknown-linux-release.bash
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  x86-64-apple-darwin-release:
    name: Build and upload x86-64-apple-darwin-release to Cloudsmith
    runs-on: macos-latest
    needs:
      - pre-artefact-creation
    steps:
      - uses: actions/checkout@v1
      - name: install ponyc
        run: bash .ci-scripts/macOS-install-pony-tools.bash release
      - name: brew install dependencies
        run: brew install coreutils
      - name: pip install dependencies
        run: pip3 install --upgrade cloudsmith-cli
      - name: Build and upload
        run: |
          export PATH="$HOME/.local/share/ponyup/bin/:$PATH"
          bash .ci-scripts/release/x86-64-apple-darwin-release.bash
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  x86-64-pc-windows-msvc-release:
    name: Build and upload x86-64-pc-windows-msvc-release to Cloudsmith
    runs-on: windows-latest
    needs:
      - pre-artefact-creation
    steps:
      - uses: actions/checkout@v1
      - name: Build and upload
        run: |
          python.exe -m pip install --upgrade cloudsmith-cli
          Invoke-WebRequest https://dl.cloudsmith.io/public/ponylang/releases/raw/versions/latest/ponyc-x86-64-pc-windows-msvc.zip -OutFile C:\ponyc.zip;
          Expand-Archive -Path C:\ponyc.zip -DestinationPath C:\ponyc;
          $env:PATH = 'C:\ponyc\bin;' + $env:PATH;
          .\make.ps1 -Command build;
          .\make.ps1 -Command install;
          .\make.ps1 -Command package;
          $version = (Get-Content .\VERSION); cloudsmith push raw --version $version --api-key $env:CLOUDSMITH_API_KEY --summary "Pony dependency manager tool" --description "https://github.com/ponylang/corral" ponylang/releases build\corral-x86-64-pc-windows-msvc.zip
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  build-release-docker-images:
    name: Build and push release Docker images
    needs:
      - pre-artefact-creation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Docker login
        run: "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: bash .ci-scripts/release/build-docker-images-on-release.bash

  generate-documentation:
    name: Generate documentation for release
    needs:
      - pre-artefact-creation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Generate documentation and upload
        uses: docker://ponylang/library-documentation-action:0.1.6
        with:
          site_url: "https://ponylang.github.io/corral/"
          library_name: "corral"
          docs_build_dir: "build/corral-docs"
          git_user_name: "Ponylang Main Bot"
          git_user_email: "ponylang.main@gmail.com"
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  trigger-release-announcement:
    name: Trigger release announcement
    runs-on: ubuntu-latest
    needs:
      - x86-64-unknown-linux-release
      - x86-64-apple-darwin-release
      - x86-64-pc-windows-msvc-release
      - build-release-docker-images
      - generate-documentation
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "main"
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Trigger
        uses: ponylang/release-bot-action@0.6.1
        with:
          entrypoint: trigger-release-announcement
        env:
          GIT_USER_NAME: "Ponylang Main Bot"
          GIT_USER_EMAIL: "ponylang.main@gmail.com"
