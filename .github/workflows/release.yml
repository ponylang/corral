name: Release

on:
  push:
    tags:
      - \d+.\d+.\d+

jobs:
  x86-64-unknown-linux-release:
    name: Build and upload x86-64-unknown-linux-release to Cloudsmith
    runs-on: ubuntu-latest
    container:
      image: ponylang/shared-docker-ci-x86-64-unknown-linux-builder:release
    steps:
      - uses: actions/checkout@v1
      - name: Build and upload
        run: bash .ci-scripts/release/x86-64-unknown-linux-release.bash
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  x86-64-apple-darwin-release:
    name: Build and upload x86-64-apple-darwin-release to Cloudsmith
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: brew install ponyc
        run: brew install ponyc
      - name: brew install dependencies
        run: brew install coreutils python
      - name: pip install dependencies
        run: pip3 install --upgrade cloudsmith-cli
      - name: Build and upload
        run: bash .ci-scripts/release/x86-64-apple-darwin-release.bash
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  x86-64-pc-windows-msvc-release:
    name: Build and upload x86-64-pc-windows-msvc-release to Cloudsmith
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build and upload
        run: |
          python.exe -m pip install --upgrade cloudsmith-cli
          Invoke-WebRequest https://dl.cloudsmith.io/public/ponylang/releases/raw/versions/latest/ponyc-x86-64-pc-windows-msvc.zip -OutFile C:\ponyc.zip;
          Expand-Archive -Path C:\ponyc.zip -DestinationPath C:\ponyc;
          $env:PATH = 'C:\ponyc\bin;' + $env:PATH;
          .\make.ps1 -Command build;
          .\make.ps1 -Command install;
          .\make.ps1 -Command package;
          cloudsmith push raw --version (Get-Content VERSION) --apiKey "$env:CLOUDSMITH_API_KEY" --summary "$env:APPLICATION_SUMMARY" --description "https://github.com/$:env:GITHUB_REPOSITORY" ponylang/releases build/corral-x86-64-pc-windows-msvc.zip
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  build-release-docker-images:
    name: Build and push release Docker images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Docker login
        run: "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: bash .ci-scripts/release/build-docker-images-on-release.bash

  homebrew:
    name: Bump Homebrew formula
    runs-on: ubuntu-latest
    steps:
      - uses: mislav/bump-homebrew-formula-action@eb843fa04b91b8bc5d4953899e3fff15c95f347c
        with:
          formula-name: corral
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_RELEASE_TOKEN }}

  trigger-release-announcement:
    name: Trigger release announcement
    runs-on: ubuntu-latest
    container:
      image: ponylang/shared-docker-ci-release:20191107
    needs: [x86-64-unknown-linux-release, x86-64-apple-darwin-release, build-release-docker-images, homebrew]
    steps:
      - uses: actions/checkout@v1
      - name: Trigger release announcement
        run: bash .ci-scripts/release/trigger-release-announcement.bash
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
