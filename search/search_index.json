{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Packages corral corral/archive corral/bundle corral/cmd corral/mort corral/semver/range corral/semver/solver corral/semver/utils corral/semver/version corral/util corral/vcs","title":"corral"},{"location":"corral--index/","text":"No package doc string provided for corral. Public Types \u00b6 actor Main primitive CLI","title":"Package"},{"location":"corral--index/#public-types","text":"actor Main primitive CLI","title":"Public Types"},{"location":"corral-CLI/","text":"CLI \u00b6 [Source] primitive val CLI Constructors \u00b6 create \u00b6 [Source] new val create() : CLI val^ Returns \u00b6 CLI val^ Public Functions \u00b6 parse \u00b6 [Source] fun box parse( args: Array[String val] box, envs: (Array[String val] box | None val)) : (Command box | (U8 val , String val)) Parameters \u00b6 args: Array [ String val] box envs: ( Array [ String val] box | None val) Returns \u00b6 ( Command box | ( U8 val , String val)) help \u00b6 [Source] fun box help() : String val Returns \u00b6 String val spec \u00b6 [Source] fun box spec() : CommandSpec ref ? Returns \u00b6 CommandSpec ref ? eq \u00b6 [Source] fun box eq( that: CLI val) : Bool val Parameters \u00b6 that: CLI val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: CLI val) : Bool val Parameters \u00b6 that: CLI val Returns \u00b6 Bool val","title":"primitive CLI"},{"location":"corral-CLI/#cli","text":"[Source] primitive val CLI","title":"CLI"},{"location":"corral-CLI/#constructors","text":"","title":"Constructors"},{"location":"corral-CLI/#create","text":"[Source] new val create() : CLI val^","title":"create"},{"location":"corral-CLI/#returns","text":"CLI val^","title":"Returns"},{"location":"corral-CLI/#public-functions","text":"","title":"Public Functions"},{"location":"corral-CLI/#parse","text":"[Source] fun box parse( args: Array[String val] box, envs: (Array[String val] box | None val)) : (Command box | (U8 val , String val))","title":"parse"},{"location":"corral-CLI/#parameters","text":"args: Array [ String val] box envs: ( Array [ String val] box | None val)","title":"Parameters"},{"location":"corral-CLI/#returns_1","text":"( Command box | ( U8 val , String val))","title":"Returns"},{"location":"corral-CLI/#help","text":"[Source] fun box help() : String val","title":"help"},{"location":"corral-CLI/#returns_2","text":"String val","title":"Returns"},{"location":"corral-CLI/#spec","text":"[Source] fun box spec() : CommandSpec ref ?","title":"spec"},{"location":"corral-CLI/#returns_3","text":"CommandSpec ref ?","title":"Returns"},{"location":"corral-CLI/#eq","text":"[Source] fun box eq( that: CLI val) : Bool val","title":"eq"},{"location":"corral-CLI/#parameters_1","text":"that: CLI val","title":"Parameters"},{"location":"corral-CLI/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-CLI/#ne","text":"[Source] fun box ne( that: CLI val) : Bool val","title":"ne"},{"location":"corral-CLI/#parameters_2","text":"that: CLI val","title":"Parameters"},{"location":"corral-CLI/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-Main/","text":"Main \u00b6 [Source] actor tag Main Constructors \u00b6 create \u00b6 [Source] new tag create( env: Env val) : Main tag^ Parameters \u00b6 env: Env val Returns \u00b6 Main tag^ Public Functions \u00b6 runtime_override_defaults \u00b6 [Source] fun runtime_override_defaults( rto: RuntimeOptions ref) : None val Parameters \u00b6 rto: RuntimeOptions ref Returns \u00b6 None val","title":"actor Main"},{"location":"corral-Main/#main","text":"[Source] actor tag Main","title":"Main"},{"location":"corral-Main/#constructors","text":"","title":"Constructors"},{"location":"corral-Main/#create","text":"[Source] new tag create( env: Env val) : Main tag^","title":"create"},{"location":"corral-Main/#parameters","text":"env: Env val","title":"Parameters"},{"location":"corral-Main/#returns","text":"Main tag^","title":"Returns"},{"location":"corral-Main/#public-functions","text":"","title":"Public Functions"},{"location":"corral-Main/#runtime_override_defaults","text":"[Source] fun runtime_override_defaults( rto: RuntimeOptions ref) : None val","title":"runtime_override_defaults"},{"location":"corral-Main/#parameters_1","text":"rto: RuntimeOptions ref","title":"Parameters"},{"location":"corral-Main/#returns_1","text":"None val","title":"Returns"},{"location":"corral-archive--index/","text":"Corral archive format (version 1) Field Type Description version u8 archive version (currently 1) entries n/a 0 or more archive entries Archive Entry: Field Length Description type u8 1 for file, 2 for package path-size i32_le encodes variable path size (see notes) path ? path to the entry from archive root file-size i32_le encodes variable length file content (see notes) content ? content for a file entry path-size and file-size are signed and little endian encoded (i32_le) if type is not file then file-size and content are not in the entry Public Types \u00b6 class ArchiveEncoder primitive ArchiveDecoder","title":"Package"},{"location":"corral-archive--index/#public-types","text":"class ArchiveEncoder primitive ArchiveDecoder","title":"Public Types"},{"location":"corral-archive-ArchiveDecoder/","text":"ArchiveDecoder \u00b6 [Source] primitive val ArchiveDecoder Constructors \u00b6 create \u00b6 [Source] new val create() : ArchiveDecoder val^ Returns \u00b6 ArchiveDecoder val^ Public Functions \u00b6 apply \u00b6 [Source] Decodes corral archive archive into directory to fun box apply( archive: FilePath val, to: Directory ref) : None val ? Parameters \u00b6 archive: FilePath val to: Directory ref Returns \u00b6 None val ? eq \u00b6 [Source] fun box eq( that: ArchiveDecoder val) : Bool val Parameters \u00b6 that: ArchiveDecoder val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ArchiveDecoder val) : Bool val Parameters \u00b6 that: ArchiveDecoder val Returns \u00b6 Bool val","title":"primitive ArchiveDecoder"},{"location":"corral-archive-ArchiveDecoder/#archivedecoder","text":"[Source] primitive val ArchiveDecoder","title":"ArchiveDecoder"},{"location":"corral-archive-ArchiveDecoder/#constructors","text":"","title":"Constructors"},{"location":"corral-archive-ArchiveDecoder/#create","text":"[Source] new val create() : ArchiveDecoder val^","title":"create"},{"location":"corral-archive-ArchiveDecoder/#returns","text":"ArchiveDecoder val^","title":"Returns"},{"location":"corral-archive-ArchiveDecoder/#public-functions","text":"","title":"Public Functions"},{"location":"corral-archive-ArchiveDecoder/#apply","text":"[Source] Decodes corral archive archive into directory to fun box apply( archive: FilePath val, to: Directory ref) : None val ?","title":"apply"},{"location":"corral-archive-ArchiveDecoder/#parameters","text":"archive: FilePath val to: Directory ref","title":"Parameters"},{"location":"corral-archive-ArchiveDecoder/#returns_1","text":"None val ?","title":"Returns"},{"location":"corral-archive-ArchiveDecoder/#eq","text":"[Source] fun box eq( that: ArchiveDecoder val) : Bool val","title":"eq"},{"location":"corral-archive-ArchiveDecoder/#parameters_1","text":"that: ArchiveDecoder val","title":"Parameters"},{"location":"corral-archive-ArchiveDecoder/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-archive-ArchiveDecoder/#ne","text":"[Source] fun box ne( that: ArchiveDecoder val) : Bool val","title":"ne"},{"location":"corral-archive-ArchiveDecoder/#parameters_2","text":"that: ArchiveDecoder val","title":"Parameters"},{"location":"corral-archive-ArchiveDecoder/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-archive-ArchiveEncoder/","text":"ArchiveEncoder \u00b6 [Source] class ref ArchiveEncoder Constructors \u00b6 create \u00b6 [Source] Creates a new corral archive with no entries root is filesystem path root for all archive entries. If root is set to /home/pony then when adding an entry: /home/pony/corral.json new ref create( root: FilePath val, version: U8 val = 1) : ArchiveEncoder ref^ ? Parameters \u00b6 root: FilePath val version: U8 val = 1 Returns \u00b6 ArchiveEncoder ref^ ? Public Functions \u00b6 add \u00b6 [Source] Adds the contents of from to the Corral archive file to . Directories are recursively added. Symlinks are ignored fun ref add( from: FilePath val) : None val ? Parameters \u00b6 from: FilePath val Returns \u00b6 None val ? write \u00b6 [Source] Creates a new archive file at to . Throws an error if it is unable to create the archive. Removes any existing file at to Resets the archiver after writing fun ref write( to: FilePath val) : None val ? Parameters \u00b6 to: FilePath val Returns \u00b6 None val ?","title":"class ArchiveEncoder"},{"location":"corral-archive-ArchiveEncoder/#archiveencoder","text":"[Source] class ref ArchiveEncoder","title":"ArchiveEncoder"},{"location":"corral-archive-ArchiveEncoder/#constructors","text":"","title":"Constructors"},{"location":"corral-archive-ArchiveEncoder/#create","text":"[Source] Creates a new corral archive with no entries root is filesystem path root for all archive entries. If root is set to /home/pony then when adding an entry: /home/pony/corral.json new ref create( root: FilePath val, version: U8 val = 1) : ArchiveEncoder ref^ ?","title":"create"},{"location":"corral-archive-ArchiveEncoder/#parameters","text":"root: FilePath val version: U8 val = 1","title":"Parameters"},{"location":"corral-archive-ArchiveEncoder/#returns","text":"ArchiveEncoder ref^ ?","title":"Returns"},{"location":"corral-archive-ArchiveEncoder/#public-functions","text":"","title":"Public Functions"},{"location":"corral-archive-ArchiveEncoder/#add","text":"[Source] Adds the contents of from to the Corral archive file to . Directories are recursively added. Symlinks are ignored fun ref add( from: FilePath val) : None val ?","title":"add"},{"location":"corral-archive-ArchiveEncoder/#parameters_1","text":"from: FilePath val","title":"Parameters"},{"location":"corral-archive-ArchiveEncoder/#returns_1","text":"None val ?","title":"Returns"},{"location":"corral-archive-ArchiveEncoder/#write","text":"[Source] Creates a new archive file at to . Throws an error if it is unable to create the archive. Removes any existing file at to Resets the archiver after writing fun ref write( to: FilePath val) : None val ?","title":"write"},{"location":"corral-archive-ArchiveEncoder/#parameters_2","text":"to: FilePath val","title":"Parameters"},{"location":"corral-archive-ArchiveEncoder/#returns_2","text":"None val ?","title":"Returns"},{"location":"corral-bundle--index/","text":"No package doc string provided for corral/bundle. Public Types \u00b6 primitive Files primitive BundleDir class Project class Locator primitive JsonError primitive Json class Dep class BundleData class InfoData class ScriptsData class ScriptCommandData class DepData class LocksData class LockData class Bundle","title":"Package"},{"location":"corral-bundle--index/#public-types","text":"primitive Files primitive BundleDir class Project class Locator primitive JsonError primitive Json class Dep class BundleData class InfoData class ScriptsData class ScriptCommandData class DepData class LocksData class LockData class Bundle","title":"Public Types"},{"location":"corral-bundle-Bundle/","text":"Bundle \u00b6 [Source] Encapsulation of a Bundle + Lock file pair, including all file activities for those files. class ref Bundle Constructors \u00b6 create \u00b6 [Source] new iso create( dir': FilePath val, log': Logger[String val] val) : Bundle iso^ Parameters \u00b6 dir': FilePath val log': Logger [ String val] val Returns \u00b6 Bundle iso^ load \u00b6 [Source] new iso load( dir': FilePath val, log': Logger[String val] val) : Bundle iso^ ? Parameters \u00b6 dir': FilePath val log': Logger [ String val] val Returns \u00b6 Bundle iso^ ? Public fields \u00b6 let dir: FilePath val \u00b6 [Source] let log: Logger [ String val] val \u00b6 [Source] let info: InfoData ref \u00b6 [Source] let packages: Array [ String val] ref \u00b6 [Source] let deps: HashMap [ String val, Dep ref, HashEq [ String val] val] ref \u00b6 [Source] let scripts: ( ScriptsData ref | None val) \u00b6 [Source] var modified: Bool val \u00b6 [Source] Public Functions \u00b6 name \u00b6 [Source] fun box name() : String val Returns \u00b6 String val bundle_filepath \u00b6 [Source] fun box bundle_filepath() : FilePath val ? Returns \u00b6 FilePath val ? lock_filepath \u00b6 [Source] fun box lock_filepath() : FilePath val ? Returns \u00b6 FilePath val ? add_dep \u00b6 [Source] fun ref add_dep( locator: String val, version: String val, revision: String val) : Dep ref Parameters \u00b6 locator: String val version: String val revision: String val Returns \u00b6 Dep ref remove_dep \u00b6 [Source] fun ref remove_dep( locator: String val) : None val ? Parameters \u00b6 locator: String val Returns \u00b6 None val ? dep_revision \u00b6 [Source] Returns the revision for a dep from this bundle's lock. fun box dep_revision( locator: String val) : String val Parameters \u00b6 locator: String val Returns \u00b6 String val lock_revision \u00b6 [Source] Records the revision for a dep into this bundle's lock. fun ref lock_revision( locator: String val, revision: String val) : None val Parameters \u00b6 locator: String val revision: String val Returns \u00b6 None val bundle_json \u00b6 [Source] fun box bundle_json() : JsonObject ref Returns \u00b6 JsonObject ref lock_json \u00b6 [Source] fun box lock_json() : JsonObject ref Returns \u00b6 JsonObject ref save \u00b6 [Source] fun ref save() : None val ? Returns \u00b6 None val ?","title":"class Bundle"},{"location":"corral-bundle-Bundle/#bundle","text":"[Source] Encapsulation of a Bundle + Lock file pair, including all file activities for those files. class ref Bundle","title":"Bundle"},{"location":"corral-bundle-Bundle/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-Bundle/#create","text":"[Source] new iso create( dir': FilePath val, log': Logger[String val] val) : Bundle iso^","title":"create"},{"location":"corral-bundle-Bundle/#parameters","text":"dir': FilePath val log': Logger [ String val] val","title":"Parameters"},{"location":"corral-bundle-Bundle/#returns","text":"Bundle iso^","title":"Returns"},{"location":"corral-bundle-Bundle/#load","text":"[Source] new iso load( dir': FilePath val, log': Logger[String val] val) : Bundle iso^ ?","title":"load"},{"location":"corral-bundle-Bundle/#parameters_1","text":"dir': FilePath val log': Logger [ String val] val","title":"Parameters"},{"location":"corral-bundle-Bundle/#returns_1","text":"Bundle iso^ ?","title":"Returns"},{"location":"corral-bundle-Bundle/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-Bundle/#let-dir-filepath-val","text":"[Source]","title":"let dir: FilePath val"},{"location":"corral-bundle-Bundle/#let-log-loggerstring-val-val","text":"[Source]","title":"let log: Logger[String val] val"},{"location":"corral-bundle-Bundle/#let-info-infodata-ref","text":"[Source]","title":"let info: InfoData ref"},{"location":"corral-bundle-Bundle/#let-packages-arraystring-val-ref","text":"[Source]","title":"let packages: Array[String val] ref"},{"location":"corral-bundle-Bundle/#let-deps-hashmapstring-val-dep-ref-hasheqstring-val-val-ref","text":"[Source]","title":"let deps: HashMap[String val, Dep ref, HashEq[String val] val] ref"},{"location":"corral-bundle-Bundle/#let-scripts-scriptsdata-ref-none-val","text":"[Source]","title":"let scripts: (ScriptsData ref | None val)"},{"location":"corral-bundle-Bundle/#var-modified-bool-val","text":"[Source]","title":"var modified: Bool val"},{"location":"corral-bundle-Bundle/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-Bundle/#name","text":"[Source] fun box name() : String val","title":"name"},{"location":"corral-bundle-Bundle/#returns_2","text":"String val","title":"Returns"},{"location":"corral-bundle-Bundle/#bundle_filepath","text":"[Source] fun box bundle_filepath() : FilePath val ?","title":"bundle_filepath"},{"location":"corral-bundle-Bundle/#returns_3","text":"FilePath val ?","title":"Returns"},{"location":"corral-bundle-Bundle/#lock_filepath","text":"[Source] fun box lock_filepath() : FilePath val ?","title":"lock_filepath"},{"location":"corral-bundle-Bundle/#returns_4","text":"FilePath val ?","title":"Returns"},{"location":"corral-bundle-Bundle/#add_dep","text":"[Source] fun ref add_dep( locator: String val, version: String val, revision: String val) : Dep ref","title":"add_dep"},{"location":"corral-bundle-Bundle/#parameters_2","text":"locator: String val version: String val revision: String val","title":"Parameters"},{"location":"corral-bundle-Bundle/#returns_5","text":"Dep ref","title":"Returns"},{"location":"corral-bundle-Bundle/#remove_dep","text":"[Source] fun ref remove_dep( locator: String val) : None val ?","title":"remove_dep"},{"location":"corral-bundle-Bundle/#parameters_3","text":"locator: String val","title":"Parameters"},{"location":"corral-bundle-Bundle/#returns_6","text":"None val ?","title":"Returns"},{"location":"corral-bundle-Bundle/#dep_revision","text":"[Source] Returns the revision for a dep from this bundle's lock. fun box dep_revision( locator: String val) : String val","title":"dep_revision"},{"location":"corral-bundle-Bundle/#parameters_4","text":"locator: String val","title":"Parameters"},{"location":"corral-bundle-Bundle/#returns_7","text":"String val","title":"Returns"},{"location":"corral-bundle-Bundle/#lock_revision","text":"[Source] Records the revision for a dep into this bundle's lock. fun ref lock_revision( locator: String val, revision: String val) : None val","title":"lock_revision"},{"location":"corral-bundle-Bundle/#parameters_5","text":"locator: String val revision: String val","title":"Parameters"},{"location":"corral-bundle-Bundle/#returns_8","text":"None val","title":"Returns"},{"location":"corral-bundle-Bundle/#bundle_json","text":"[Source] fun box bundle_json() : JsonObject ref","title":"bundle_json"},{"location":"corral-bundle-Bundle/#returns_9","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-Bundle/#lock_json","text":"[Source] fun box lock_json() : JsonObject ref","title":"lock_json"},{"location":"corral-bundle-Bundle/#returns_10","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-Bundle/#save","text":"[Source] fun ref save() : None val ?","title":"save"},{"location":"corral-bundle-Bundle/#returns_11","text":"None val ?","title":"Returns"},{"location":"corral-bundle-BundleData/","text":"BundleData \u00b6 [Source] class ref BundleData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : BundleData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 BundleData ref^ Public fields \u00b6 let info: InfoData ref \u00b6 [Source] let packages: Array [ String val] ref \u00b6 [Source] let deps: Array [ DepData ref] ref \u00b6 [Source] let scripts: ( ScriptsData ref | None val) \u00b6 [Source]","title":"class BundleData"},{"location":"corral-bundle-BundleData/#bundledata","text":"[Source] class ref BundleData","title":"BundleData"},{"location":"corral-bundle-BundleData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-BundleData/#create","text":"[Source] new ref create( jo: JsonObject box) : BundleData ref^","title":"create"},{"location":"corral-bundle-BundleData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-BundleData/#returns","text":"BundleData ref^","title":"Returns"},{"location":"corral-bundle-BundleData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-BundleData/#let-info-infodata-ref","text":"[Source]","title":"let info: InfoData ref"},{"location":"corral-bundle-BundleData/#let-packages-arraystring-val-ref","text":"[Source]","title":"let packages: Array[String val] ref"},{"location":"corral-bundle-BundleData/#let-deps-arraydepdata-ref-ref","text":"[Source]","title":"let deps: Array[DepData ref] ref"},{"location":"corral-bundle-BundleData/#let-scripts-scriptsdata-ref-none-val","text":"[Source]","title":"let scripts: (ScriptsData ref | None val)"},{"location":"corral-bundle-BundleDir/","text":"BundleDir \u00b6 [Source] Locates project bundle directories either by direct resolving of bundle files, or searching up the directory tree until the files are found. primitive val BundleDir Constructors \u00b6 create \u00b6 [Source] new val create() : BundleDir val^ Returns \u00b6 BundleDir val^ Public Functions \u00b6 find \u00b6 [Source] fun box find( auth: AmbientAuth val, dir: String val, log: Logger[String val] val) : (FilePath val | None val) Parameters \u00b6 auth: AmbientAuth val dir: String val log: Logger [ String val] val Returns \u00b6 ( FilePath val | None val) resolve \u00b6 [Source] fun box resolve( auth: AmbientAuth val, dir: String val, log: Logger[String val] val) : (FilePath val | None val) Parameters \u00b6 auth: AmbientAuth val dir: String val log: Logger [ String val] val Returns \u00b6 ( FilePath val | None val) eq \u00b6 [Source] fun box eq( that: BundleDir val) : Bool val Parameters \u00b6 that: BundleDir val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: BundleDir val) : Bool val Parameters \u00b6 that: BundleDir val Returns \u00b6 Bool val","title":"primitive BundleDir"},{"location":"corral-bundle-BundleDir/#bundledir","text":"[Source] Locates project bundle directories either by direct resolving of bundle files, or searching up the directory tree until the files are found. primitive val BundleDir","title":"BundleDir"},{"location":"corral-bundle-BundleDir/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-BundleDir/#create","text":"[Source] new val create() : BundleDir val^","title":"create"},{"location":"corral-bundle-BundleDir/#returns","text":"BundleDir val^","title":"Returns"},{"location":"corral-bundle-BundleDir/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-BundleDir/#find","text":"[Source] fun box find( auth: AmbientAuth val, dir: String val, log: Logger[String val] val) : (FilePath val | None val)","title":"find"},{"location":"corral-bundle-BundleDir/#parameters","text":"auth: AmbientAuth val dir: String val log: Logger [ String val] val","title":"Parameters"},{"location":"corral-bundle-BundleDir/#returns_1","text":"( FilePath val | None val)","title":"Returns"},{"location":"corral-bundle-BundleDir/#resolve","text":"[Source] fun box resolve( auth: AmbientAuth val, dir: String val, log: Logger[String val] val) : (FilePath val | None val)","title":"resolve"},{"location":"corral-bundle-BundleDir/#parameters_1","text":"auth: AmbientAuth val dir: String val log: Logger [ String val] val","title":"Parameters"},{"location":"corral-bundle-BundleDir/#returns_2","text":"( FilePath val | None val)","title":"Returns"},{"location":"corral-bundle-BundleDir/#eq","text":"[Source] fun box eq( that: BundleDir val) : Bool val","title":"eq"},{"location":"corral-bundle-BundleDir/#parameters_2","text":"that: BundleDir val","title":"Parameters"},{"location":"corral-bundle-BundleDir/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-bundle-BundleDir/#ne","text":"[Source] fun box ne( that: BundleDir val) : Bool val","title":"ne"},{"location":"corral-bundle-BundleDir/#parameters_3","text":"that: BundleDir val","title":"Parameters"},{"location":"corral-bundle-BundleDir/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Dep/","text":"Dep \u00b6 [Source] Encapsulation of a dependency within a Bundle, encompassing both dep and lock data and coordinated operations. class ref Dep Constructors \u00b6 create \u00b6 [Source] new ref create( bundle': Bundle box, data': DepData box, lock': LockData ref) : Dep ref^ Parameters \u00b6 bundle': Bundle box data': DepData box lock': LockData ref Returns \u00b6 Dep ref^ Public fields \u00b6 let bundle: Bundle box \u00b6 [Source] let data: DepData box \u00b6 [Source] let lock: LockData ref \u00b6 [Source] let locator: Locator val \u00b6 [Source] Public Functions \u00b6 name \u00b6 [Source] fun box name() : String val Returns \u00b6 String val repo \u00b6 [Source] fun box repo() : String val Returns \u00b6 String val flat_repo \u00b6 [Source] fun box flat_repo() : String val Returns \u00b6 String val version \u00b6 [Source] fun box version() : String val Returns \u00b6 String val revision \u00b6 [Source] fun box revision() : String val Returns \u00b6 String val vcs \u00b6 [Source] fun box vcs() : String val Returns \u00b6 String val","title":"class Dep"},{"location":"corral-bundle-Dep/#dep","text":"[Source] Encapsulation of a dependency within a Bundle, encompassing both dep and lock data and coordinated operations. class ref Dep","title":"Dep"},{"location":"corral-bundle-Dep/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-Dep/#create","text":"[Source] new ref create( bundle': Bundle box, data': DepData box, lock': LockData ref) : Dep ref^","title":"create"},{"location":"corral-bundle-Dep/#parameters","text":"bundle': Bundle box data': DepData box lock': LockData ref","title":"Parameters"},{"location":"corral-bundle-Dep/#returns","text":"Dep ref^","title":"Returns"},{"location":"corral-bundle-Dep/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-Dep/#let-bundle-bundle-box","text":"[Source]","title":"let bundle: Bundle box"},{"location":"corral-bundle-Dep/#let-data-depdata-box","text":"[Source]","title":"let data: DepData box"},{"location":"corral-bundle-Dep/#let-lock-lockdata-ref","text":"[Source]","title":"let lock: LockData ref"},{"location":"corral-bundle-Dep/#let-locator-locator-val","text":"[Source]","title":"let locator: Locator val"},{"location":"corral-bundle-Dep/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-Dep/#name","text":"[Source] fun box name() : String val","title":"name"},{"location":"corral-bundle-Dep/#returns_1","text":"String val","title":"Returns"},{"location":"corral-bundle-Dep/#repo","text":"[Source] fun box repo() : String val","title":"repo"},{"location":"corral-bundle-Dep/#returns_2","text":"String val","title":"Returns"},{"location":"corral-bundle-Dep/#flat_repo","text":"[Source] fun box flat_repo() : String val","title":"flat_repo"},{"location":"corral-bundle-Dep/#returns_3","text":"String val","title":"Returns"},{"location":"corral-bundle-Dep/#version","text":"[Source] fun box version() : String val","title":"version"},{"location":"corral-bundle-Dep/#returns_4","text":"String val","title":"Returns"},{"location":"corral-bundle-Dep/#revision","text":"[Source] fun box revision() : String val","title":"revision"},{"location":"corral-bundle-Dep/#returns_5","text":"String val","title":"Returns"},{"location":"corral-bundle-Dep/#vcs","text":"[Source] fun box vcs() : String val","title":"vcs"},{"location":"corral-bundle-Dep/#returns_6","text":"String val","title":"Returns"},{"location":"corral-bundle-DepData/","text":"DepData \u00b6 [Source] class ref DepData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : DepData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 DepData ref^ none \u00b6 [Source] new ref none() : DepData ref^ Returns \u00b6 DepData ref^ Public fields \u00b6 var locator: String val \u00b6 [Source] var version: String val \u00b6 [Source] Public Functions \u00b6 json \u00b6 [Source] fun box json() : JsonObject ref Returns \u00b6 JsonObject ref","title":"class DepData"},{"location":"corral-bundle-DepData/#depdata","text":"[Source] class ref DepData","title":"DepData"},{"location":"corral-bundle-DepData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-DepData/#create","text":"[Source] new ref create( jo: JsonObject box) : DepData ref^","title":"create"},{"location":"corral-bundle-DepData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-DepData/#returns","text":"DepData ref^","title":"Returns"},{"location":"corral-bundle-DepData/#none","text":"[Source] new ref none() : DepData ref^","title":"none"},{"location":"corral-bundle-DepData/#returns_1","text":"DepData ref^","title":"Returns"},{"location":"corral-bundle-DepData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-DepData/#var-locator-string-val","text":"[Source]","title":"var locator: String val"},{"location":"corral-bundle-DepData/#var-version-string-val","text":"[Source]","title":"var version: String val"},{"location":"corral-bundle-DepData/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-DepData/#json","text":"[Source] fun box json() : JsonObject ref","title":"json"},{"location":"corral-bundle-DepData/#returns_2","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-Files/","text":"Files \u00b6 [Source] primitive val Files Constructors \u00b6 create \u00b6 [Source] new val create() : Files val^ Returns \u00b6 Files val^ Public Functions \u00b6 bundle_filename \u00b6 [Source] fun tag bundle_filename() : String val Returns \u00b6 String val lock_filename \u00b6 [Source] fun tag lock_filename() : String val Returns \u00b6 String val corral_dirname \u00b6 [Source] fun tag corral_dirname() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: Files val) : Bool val Parameters \u00b6 that: Files val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Files val) : Bool val Parameters \u00b6 that: Files val Returns \u00b6 Bool val","title":"primitive Files"},{"location":"corral-bundle-Files/#files","text":"[Source] primitive val Files","title":"Files"},{"location":"corral-bundle-Files/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-Files/#create","text":"[Source] new val create() : Files val^","title":"create"},{"location":"corral-bundle-Files/#returns","text":"Files val^","title":"Returns"},{"location":"corral-bundle-Files/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-Files/#bundle_filename","text":"[Source] fun tag bundle_filename() : String val","title":"bundle_filename"},{"location":"corral-bundle-Files/#returns_1","text":"String val","title":"Returns"},{"location":"corral-bundle-Files/#lock_filename","text":"[Source] fun tag lock_filename() : String val","title":"lock_filename"},{"location":"corral-bundle-Files/#returns_2","text":"String val","title":"Returns"},{"location":"corral-bundle-Files/#corral_dirname","text":"[Source] fun tag corral_dirname() : String val","title":"corral_dirname"},{"location":"corral-bundle-Files/#returns_3","text":"String val","title":"Returns"},{"location":"corral-bundle-Files/#eq","text":"[Source] fun box eq( that: Files val) : Bool val","title":"eq"},{"location":"corral-bundle-Files/#parameters","text":"that: Files val","title":"Parameters"},{"location":"corral-bundle-Files/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Files/#ne","text":"[Source] fun box ne( that: Files val) : Bool val","title":"ne"},{"location":"corral-bundle-Files/#parameters_1","text":"that: Files val","title":"Parameters"},{"location":"corral-bundle-Files/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-bundle-InfoData/","text":"InfoData \u00b6 [Source] class ref InfoData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : InfoData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 InfoData ref^ Public fields \u00b6 var name: String val \u00b6 [Source] var description: String val \u00b6 [Source] var homepage: String val \u00b6 [Source] var documentation_url: String val \u00b6 [Source] var license: String val \u00b6 [Source] var version: String val \u00b6 [Source] Public Functions \u00b6 json \u00b6 [Source] fun box json() : JsonObject ref Returns \u00b6 JsonObject ref","title":"class InfoData"},{"location":"corral-bundle-InfoData/#infodata","text":"[Source] class ref InfoData","title":"InfoData"},{"location":"corral-bundle-InfoData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-InfoData/#create","text":"[Source] new ref create( jo: JsonObject box) : InfoData ref^","title":"create"},{"location":"corral-bundle-InfoData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-InfoData/#returns","text":"InfoData ref^","title":"Returns"},{"location":"corral-bundle-InfoData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-InfoData/#var-name-string-val","text":"[Source]","title":"var name: String val"},{"location":"corral-bundle-InfoData/#var-description-string-val","text":"[Source]","title":"var description: String val"},{"location":"corral-bundle-InfoData/#var-homepage-string-val","text":"[Source]","title":"var homepage: String val"},{"location":"corral-bundle-InfoData/#var-documentation_url-string-val","text":"[Source]","title":"var documentation_url: String val"},{"location":"corral-bundle-InfoData/#var-license-string-val","text":"[Source]","title":"var license: String val"},{"location":"corral-bundle-InfoData/#var-version-string-val","text":"[Source]","title":"var version: String val"},{"location":"corral-bundle-InfoData/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-InfoData/#json","text":"[Source] fun box json() : JsonObject ref","title":"json"},{"location":"corral-bundle-InfoData/#returns_1","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-Json/","text":"Json \u00b6 [Source] primitive val Json Constructors \u00b6 create \u00b6 [Source] new val create() : Json val^ Returns \u00b6 Json val^ Public Functions \u00b6 load_object \u00b6 [Source] fun box load_object( file_path: FilePath val, log: Logger[String val] val) : (JsonObject ref | FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val | JsonError val) Parameters \u00b6 file_path: FilePath val log: Logger [ String val] val Returns \u00b6 ( JsonObject ref | FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val | JsonError val) write_object \u00b6 [Source] fun box write_object( jo: JsonObject ref, file_path: FilePath val, log: Logger[String val] val) : None val Parameters \u00b6 jo: JsonObject ref file_path: FilePath val log: Logger [ String val] val Returns \u00b6 None val string \u00b6 [Source] fun box string( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : String val Parameters \u00b6 jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val Returns \u00b6 String val set_string \u00b6 [Source] fun box set_string( jo: JsonObject ref, name: String val, value: String val) : None val Parameters \u00b6 jo: JsonObject ref name: String val value: String val Returns \u00b6 None val string_must \u00b6 [Source] fun box string_must( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : String val ? Parameters \u00b6 jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val Returns \u00b6 String val ? array \u00b6 [Source] fun box array( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : JsonArray box Parameters \u00b6 jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val Returns \u00b6 JsonArray box objekt \u00b6 [Source] fun box objekt( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : JsonObject box Parameters \u00b6 jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val Returns \u00b6 JsonObject box eq \u00b6 [Source] fun box eq( that: Json val) : Bool val Parameters \u00b6 that: Json val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Json val) : Bool val Parameters \u00b6 that: Json val Returns \u00b6 Bool val","title":"primitive Json"},{"location":"corral-bundle-Json/#json","text":"[Source] primitive val Json","title":"Json"},{"location":"corral-bundle-Json/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-Json/#create","text":"[Source] new val create() : Json val^","title":"create"},{"location":"corral-bundle-Json/#returns","text":"Json val^","title":"Returns"},{"location":"corral-bundle-Json/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-Json/#load_object","text":"[Source] fun box load_object( file_path: FilePath val, log: Logger[String val] val) : (JsonObject ref | FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val | JsonError val)","title":"load_object"},{"location":"corral-bundle-Json/#parameters","text":"file_path: FilePath val log: Logger [ String val] val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_1","text":"( JsonObject ref | FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val | JsonError val)","title":"Returns"},{"location":"corral-bundle-Json/#write_object","text":"[Source] fun box write_object( jo: JsonObject ref, file_path: FilePath val, log: Logger[String val] val) : None val","title":"write_object"},{"location":"corral-bundle-Json/#parameters_1","text":"jo: JsonObject ref file_path: FilePath val log: Logger [ String val] val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_2","text":"None val","title":"Returns"},{"location":"corral-bundle-Json/#string","text":"[Source] fun box string( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : String val","title":"string"},{"location":"corral-bundle-Json/#parameters_2","text":"jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_3","text":"String val","title":"Returns"},{"location":"corral-bundle-Json/#set_string","text":"[Source] fun box set_string( jo: JsonObject ref, name: String val, value: String val) : None val","title":"set_string"},{"location":"corral-bundle-Json/#parameters_3","text":"jo: JsonObject ref name: String val value: String val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_4","text":"None val","title":"Returns"},{"location":"corral-bundle-Json/#string_must","text":"[Source] fun box string_must( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : String val ?","title":"string_must"},{"location":"corral-bundle-Json/#parameters_4","text":"jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_5","text":"String val ?","title":"Returns"},{"location":"corral-bundle-Json/#array","text":"[Source] fun box array( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : JsonArray box","title":"array"},{"location":"corral-bundle-Json/#parameters_5","text":"jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_6","text":"JsonArray box","title":"Returns"},{"location":"corral-bundle-Json/#objekt","text":"[Source] fun box objekt( jt: (F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box), name: String val) : JsonObject box","title":"objekt"},{"location":"corral-bundle-Json/#parameters_6","text":"jt: ( F64 box | I64 box | Bool box | None box | String box | JsonArray box | JsonObject box) name: String val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_7","text":"JsonObject box","title":"Returns"},{"location":"corral-bundle-Json/#eq","text":"[Source] fun box eq( that: Json val) : Bool val","title":"eq"},{"location":"corral-bundle-Json/#parameters_7","text":"that: Json val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_8","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Json/#ne","text":"[Source] fun box ne( that: Json val) : Bool val","title":"ne"},{"location":"corral-bundle-Json/#parameters_8","text":"that: Json val","title":"Parameters"},{"location":"corral-bundle-Json/#returns_9","text":"Bool val","title":"Returns"},{"location":"corral-bundle-JsonError/","text":"JsonError \u00b6 [Source] primitive val JsonError Constructors \u00b6 create \u00b6 [Source] new val create() : JsonError val^ Returns \u00b6 JsonError val^ Public Functions \u00b6 eq \u00b6 [Source] fun box eq( that: JsonError val) : Bool val Parameters \u00b6 that: JsonError val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: JsonError val) : Bool val Parameters \u00b6 that: JsonError val Returns \u00b6 Bool val","title":"primitive JsonError"},{"location":"corral-bundle-JsonError/#jsonerror","text":"[Source] primitive val JsonError","title":"JsonError"},{"location":"corral-bundle-JsonError/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-JsonError/#create","text":"[Source] new val create() : JsonError val^","title":"create"},{"location":"corral-bundle-JsonError/#returns","text":"JsonError val^","title":"Returns"},{"location":"corral-bundle-JsonError/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-JsonError/#eq","text":"[Source] fun box eq( that: JsonError val) : Bool val","title":"eq"},{"location":"corral-bundle-JsonError/#parameters","text":"that: JsonError val","title":"Parameters"},{"location":"corral-bundle-JsonError/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-bundle-JsonError/#ne","text":"[Source] fun box ne( that: JsonError val) : Bool val","title":"ne"},{"location":"corral-bundle-JsonError/#parameters_1","text":"that: JsonError val","title":"Parameters"},{"location":"corral-bundle-JsonError/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/","text":"Locator \u00b6 [Source] Encapsulation of the bundle dependency's locator string, parsed into distinct fields. locator := repo_path[.vcs_suffix][/bundle_path] class val Locator is ComparableMixin[Locator val] ref, Hashable ref, Stringable box Implements \u00b6 ComparableMixin [ Locator val] ref Hashable ref Stringable box Constructors \u00b6 create \u00b6 [Source] new val create( loc: String val) : Locator val^ Parameters \u00b6 loc: String val Returns \u00b6 Locator val^ Public fields \u00b6 let repo_path: String val \u00b6 [Source] let vcs_suffix: String val \u00b6 [Source] let bundle_path: String val \u00b6 [Source] Public Functions \u00b6 path \u00b6 [Source] Returns a unique name for this locator without the vcs suffix. fun box path() : String val Returns \u00b6 String val flat_name \u00b6 [Source] fun box flat_name() : String val Returns \u00b6 String val string \u00b6 [Source] Returns the full string for of this locator. fun box string() : String iso^ Returns \u00b6 String iso^ compare \u00b6 [Source] fun box compare( that: Locator box) : (Less val | Equal val | Greater val) Parameters \u00b6 that: Locator box Returns \u00b6 ( Less val | Equal val | Greater val) hash \u00b6 [Source] fun box hash() : USize val Returns \u00b6 USize val is_vcs \u00b6 [Source] fun box is_vcs() : Bool val Returns \u00b6 Bool val is_local \u00b6 [Source] fun box is_local() : Bool val Returns \u00b6 Bool val is_remote_vcs \u00b6 [Source] fun box is_remote_vcs() : Bool val Returns \u00b6 Bool val is_local_vcs \u00b6 [Source] fun box is_local_vcs() : Bool val Returns \u00b6 Bool val is_local_direct \u00b6 [Source] fun box is_local_direct() : Bool val Returns \u00b6 Bool val lt \u00b6 fun box lt( that: Locator val) : Bool val Parameters \u00b6 that: Locator val Returns \u00b6 Bool val le \u00b6 fun box le( that: Locator val) : Bool val Parameters \u00b6 that: Locator val Returns \u00b6 Bool val gt \u00b6 fun box gt( that: Locator val) : Bool val Parameters \u00b6 that: Locator val Returns \u00b6 Bool val ge \u00b6 fun box ge( that: Locator val) : Bool val Parameters \u00b6 that: Locator val Returns \u00b6 Bool val eq \u00b6 fun box eq( that: Locator val) : Bool val Parameters \u00b6 that: Locator val Returns \u00b6 Bool val ne \u00b6 fun box ne( that: Locator val) : Bool val Parameters \u00b6 that: Locator val Returns \u00b6 Bool val","title":"class Locator"},{"location":"corral-bundle-Locator/#locator","text":"[Source] Encapsulation of the bundle dependency's locator string, parsed into distinct fields. locator := repo_path[.vcs_suffix][/bundle_path] class val Locator is ComparableMixin[Locator val] ref, Hashable ref, Stringable box","title":"Locator"},{"location":"corral-bundle-Locator/#implements","text":"ComparableMixin [ Locator val] ref Hashable ref Stringable box","title":"Implements"},{"location":"corral-bundle-Locator/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-Locator/#create","text":"[Source] new val create( loc: String val) : Locator val^","title":"create"},{"location":"corral-bundle-Locator/#parameters","text":"loc: String val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns","text":"Locator val^","title":"Returns"},{"location":"corral-bundle-Locator/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-Locator/#let-repo_path-string-val","text":"[Source]","title":"let repo_path: String val"},{"location":"corral-bundle-Locator/#let-vcs_suffix-string-val","text":"[Source]","title":"let vcs_suffix: String val"},{"location":"corral-bundle-Locator/#let-bundle_path-string-val","text":"[Source]","title":"let bundle_path: String val"},{"location":"corral-bundle-Locator/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-Locator/#path","text":"[Source] Returns a unique name for this locator without the vcs suffix. fun box path() : String val","title":"path"},{"location":"corral-bundle-Locator/#returns_1","text":"String val","title":"Returns"},{"location":"corral-bundle-Locator/#flat_name","text":"[Source] fun box flat_name() : String val","title":"flat_name"},{"location":"corral-bundle-Locator/#returns_2","text":"String val","title":"Returns"},{"location":"corral-bundle-Locator/#string","text":"[Source] Returns the full string for of this locator. fun box string() : String iso^","title":"string"},{"location":"corral-bundle-Locator/#returns_3","text":"String iso^","title":"Returns"},{"location":"corral-bundle-Locator/#compare","text":"[Source] fun box compare( that: Locator box) : (Less val | Equal val | Greater val)","title":"compare"},{"location":"corral-bundle-Locator/#parameters_1","text":"that: Locator box","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_4","text":"( Less val | Equal val | Greater val)","title":"Returns"},{"location":"corral-bundle-Locator/#hash","text":"[Source] fun box hash() : USize val","title":"hash"},{"location":"corral-bundle-Locator/#returns_5","text":"USize val","title":"Returns"},{"location":"corral-bundle-Locator/#is_vcs","text":"[Source] fun box is_vcs() : Bool val","title":"is_vcs"},{"location":"corral-bundle-Locator/#returns_6","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#is_local","text":"[Source] fun box is_local() : Bool val","title":"is_local"},{"location":"corral-bundle-Locator/#returns_7","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#is_remote_vcs","text":"[Source] fun box is_remote_vcs() : Bool val","title":"is_remote_vcs"},{"location":"corral-bundle-Locator/#returns_8","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#is_local_vcs","text":"[Source] fun box is_local_vcs() : Bool val","title":"is_local_vcs"},{"location":"corral-bundle-Locator/#returns_9","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#is_local_direct","text":"[Source] fun box is_local_direct() : Bool val","title":"is_local_direct"},{"location":"corral-bundle-Locator/#returns_10","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#lt","text":"fun box lt( that: Locator val) : Bool val","title":"lt"},{"location":"corral-bundle-Locator/#parameters_2","text":"that: Locator val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_11","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#le","text":"fun box le( that: Locator val) : Bool val","title":"le"},{"location":"corral-bundle-Locator/#parameters_3","text":"that: Locator val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_12","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#gt","text":"fun box gt( that: Locator val) : Bool val","title":"gt"},{"location":"corral-bundle-Locator/#parameters_4","text":"that: Locator val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_13","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#ge","text":"fun box ge( that: Locator val) : Bool val","title":"ge"},{"location":"corral-bundle-Locator/#parameters_5","text":"that: Locator val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_14","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#eq","text":"fun box eq( that: Locator val) : Bool val","title":"eq"},{"location":"corral-bundle-Locator/#parameters_6","text":"that: Locator val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_15","text":"Bool val","title":"Returns"},{"location":"corral-bundle-Locator/#ne","text":"fun box ne( that: Locator val) : Bool val","title":"ne"},{"location":"corral-bundle-Locator/#parameters_7","text":"that: Locator val","title":"Parameters"},{"location":"corral-bundle-Locator/#returns_16","text":"Bool val","title":"Returns"},{"location":"corral-bundle-LockData/","text":"LockData \u00b6 [Source] class ref LockData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : LockData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 LockData ref^ none \u00b6 [Source] new ref none() : LockData ref^ Returns \u00b6 LockData ref^ Public fields \u00b6 var locator: String val \u00b6 [Source] var revision: String val \u00b6 [Source] Public Functions \u00b6 json \u00b6 [Source] fun box json() : JsonObject ref Returns \u00b6 JsonObject ref","title":"class LockData"},{"location":"corral-bundle-LockData/#lockdata","text":"[Source] class ref LockData","title":"LockData"},{"location":"corral-bundle-LockData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-LockData/#create","text":"[Source] new ref create( jo: JsonObject box) : LockData ref^","title":"create"},{"location":"corral-bundle-LockData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-LockData/#returns","text":"LockData ref^","title":"Returns"},{"location":"corral-bundle-LockData/#none","text":"[Source] new ref none() : LockData ref^","title":"none"},{"location":"corral-bundle-LockData/#returns_1","text":"LockData ref^","title":"Returns"},{"location":"corral-bundle-LockData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-LockData/#var-locator-string-val","text":"[Source]","title":"var locator: String val"},{"location":"corral-bundle-LockData/#var-revision-string-val","text":"[Source]","title":"var revision: String val"},{"location":"corral-bundle-LockData/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-LockData/#json","text":"[Source] fun box json() : JsonObject ref","title":"json"},{"location":"corral-bundle-LockData/#returns_2","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-LocksData/","text":"LocksData \u00b6 [Source] class ref LocksData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : LocksData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 LocksData ref^ Public fields \u00b6 let locks: Array [ LockData ref] ref \u00b6 [Source] Public Functions \u00b6 json \u00b6 [Source] fun box json() : JsonObject ref Returns \u00b6 JsonObject ref","title":"class LocksData"},{"location":"corral-bundle-LocksData/#locksdata","text":"[Source] class ref LocksData","title":"LocksData"},{"location":"corral-bundle-LocksData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-LocksData/#create","text":"[Source] new ref create( jo: JsonObject box) : LocksData ref^","title":"create"},{"location":"corral-bundle-LocksData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-LocksData/#returns","text":"LocksData ref^","title":"Returns"},{"location":"corral-bundle-LocksData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-LocksData/#let-locks-arraylockdata-ref-ref","text":"[Source]","title":"let locks: Array[LockData ref] ref"},{"location":"corral-bundle-LocksData/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-LocksData/#json","text":"[Source] fun box json() : JsonObject ref","title":"json"},{"location":"corral-bundle-LocksData/#returns_1","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-Project/","text":"Project \u00b6 [Source] Project assists with the performing operations on bundles and deps of a project. class val Project Constructors \u00b6 create \u00b6 [Source] new val create( auth': AmbientAuth val, log': Logger[String val] val, dir': FilePath val) : Project val^ Parameters \u00b6 auth': AmbientAuth val log': Logger [ String val] val dir': FilePath val Returns \u00b6 Project val^ Public fields \u00b6 let auth: AmbientAuth val \u00b6 [Source] let log: Logger [ String val] val \u00b6 [Source] let dir: FilePath val \u00b6 [Source] Public Functions \u00b6 load_bundle \u00b6 [Source] fun val load_bundle() : (Bundle iso^ | String val) Returns \u00b6 ( Bundle iso^ | String val) create_bundle \u00b6 [Source] fun box create_bundle() : (Bundle iso^ | String val) Returns \u00b6 ( Bundle iso^ | String val) corral_dirpath \u00b6 [Source] fun box corral_dirpath() : FilePath val ? Returns \u00b6 FilePath val ? dep_workspace_root \u00b6 [Source] Returns the VCS workspace root for a given dep. Not used for local-direct deps. fun box dep_workspace_root( locator: Locator val) : FilePath val ? Parameters \u00b6 locator: Locator val Returns \u00b6 FilePath val ? dep_bundle_root \u00b6 [Source] fun box dep_bundle_root( locator: Locator val) : FilePath val ? Parameters \u00b6 locator: Locator val Returns \u00b6 FilePath val ? transitive_deps \u00b6 [Source] Return all immediate and transitive deps, with no duplicates. fun box transitive_deps( base_bundle: Bundle box) : HashMap[Locator val, Dep box, HashEq[Locator val] val] box Parameters \u00b6 base_bundle: Bundle box Returns \u00b6 HashMap [ Locator val, Dep box, HashEq [ Locator val] val] box","title":"class Project"},{"location":"corral-bundle-Project/#project","text":"[Source] Project assists with the performing operations on bundles and deps of a project. class val Project","title":"Project"},{"location":"corral-bundle-Project/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-Project/#create","text":"[Source] new val create( auth': AmbientAuth val, log': Logger[String val] val, dir': FilePath val) : Project val^","title":"create"},{"location":"corral-bundle-Project/#parameters","text":"auth': AmbientAuth val log': Logger [ String val] val dir': FilePath val","title":"Parameters"},{"location":"corral-bundle-Project/#returns","text":"Project val^","title":"Returns"},{"location":"corral-bundle-Project/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-Project/#let-auth-ambientauth-val","text":"[Source]","title":"let auth: AmbientAuth val"},{"location":"corral-bundle-Project/#let-log-loggerstring-val-val","text":"[Source]","title":"let log: Logger[String val] val"},{"location":"corral-bundle-Project/#let-dir-filepath-val","text":"[Source]","title":"let dir: FilePath val"},{"location":"corral-bundle-Project/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-Project/#load_bundle","text":"[Source] fun val load_bundle() : (Bundle iso^ | String val)","title":"load_bundle"},{"location":"corral-bundle-Project/#returns_1","text":"( Bundle iso^ | String val)","title":"Returns"},{"location":"corral-bundle-Project/#create_bundle","text":"[Source] fun box create_bundle() : (Bundle iso^ | String val)","title":"create_bundle"},{"location":"corral-bundle-Project/#returns_2","text":"( Bundle iso^ | String val)","title":"Returns"},{"location":"corral-bundle-Project/#corral_dirpath","text":"[Source] fun box corral_dirpath() : FilePath val ?","title":"corral_dirpath"},{"location":"corral-bundle-Project/#returns_3","text":"FilePath val ?","title":"Returns"},{"location":"corral-bundle-Project/#dep_workspace_root","text":"[Source] Returns the VCS workspace root for a given dep. Not used for local-direct deps. fun box dep_workspace_root( locator: Locator val) : FilePath val ?","title":"dep_workspace_root"},{"location":"corral-bundle-Project/#parameters_1","text":"locator: Locator val","title":"Parameters"},{"location":"corral-bundle-Project/#returns_4","text":"FilePath val ?","title":"Returns"},{"location":"corral-bundle-Project/#dep_bundle_root","text":"[Source] fun box dep_bundle_root( locator: Locator val) : FilePath val ?","title":"dep_bundle_root"},{"location":"corral-bundle-Project/#parameters_2","text":"locator: Locator val","title":"Parameters"},{"location":"corral-bundle-Project/#returns_5","text":"FilePath val ?","title":"Returns"},{"location":"corral-bundle-Project/#transitive_deps","text":"[Source] Return all immediate and transitive deps, with no duplicates. fun box transitive_deps( base_bundle: Bundle box) : HashMap[Locator val, Dep box, HashEq[Locator val] val] box","title":"transitive_deps"},{"location":"corral-bundle-Project/#parameters_3","text":"base_bundle: Bundle box","title":"Parameters"},{"location":"corral-bundle-Project/#returns_6","text":"HashMap [ Locator val, Dep box, HashEq [ Locator val] val] box","title":"Returns"},{"location":"corral-bundle-ScriptCommandData/","text":"ScriptCommandData \u00b6 [Source] class ref ScriptCommandData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : ScriptCommandData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 ScriptCommandData ref^ Public fields \u00b6 var post_fetch_or_update: String val \u00b6 [Source] Public Functions \u00b6 json \u00b6 [Source] fun box json() : JsonObject ref Returns \u00b6 JsonObject ref","title":"class ScriptCommandData"},{"location":"corral-bundle-ScriptCommandData/#scriptcommanddata","text":"[Source] class ref ScriptCommandData","title":"ScriptCommandData"},{"location":"corral-bundle-ScriptCommandData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-ScriptCommandData/#create","text":"[Source] new ref create( jo: JsonObject box) : ScriptCommandData ref^","title":"create"},{"location":"corral-bundle-ScriptCommandData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-ScriptCommandData/#returns","text":"ScriptCommandData ref^","title":"Returns"},{"location":"corral-bundle-ScriptCommandData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-ScriptCommandData/#var-post_fetch_or_update-string-val","text":"[Source]","title":"var post_fetch_or_update: String val"},{"location":"corral-bundle-ScriptCommandData/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-ScriptCommandData/#json","text":"[Source] fun box json() : JsonObject ref","title":"json"},{"location":"corral-bundle-ScriptCommandData/#returns_1","text":"JsonObject ref","title":"Returns"},{"location":"corral-bundle-ScriptsData/","text":"ScriptsData \u00b6 [Source] class ref ScriptsData Constructors \u00b6 create \u00b6 [Source] new ref create( jo: JsonObject box) : ScriptsData ref^ Parameters \u00b6 jo: JsonObject box Returns \u00b6 ScriptsData ref^ Public fields \u00b6 var windows: ( ScriptCommandData ref | None val) \u00b6 [Source] var posix: ( ScriptCommandData ref | None val) \u00b6 [Source] Public Functions \u00b6 json \u00b6 [Source] fun box json() : JsonObject ref Returns \u00b6 JsonObject ref","title":"class ScriptsData"},{"location":"corral-bundle-ScriptsData/#scriptsdata","text":"[Source] class ref ScriptsData","title":"ScriptsData"},{"location":"corral-bundle-ScriptsData/#constructors","text":"","title":"Constructors"},{"location":"corral-bundle-ScriptsData/#create","text":"[Source] new ref create( jo: JsonObject box) : ScriptsData ref^","title":"create"},{"location":"corral-bundle-ScriptsData/#parameters","text":"jo: JsonObject box","title":"Parameters"},{"location":"corral-bundle-ScriptsData/#returns","text":"ScriptsData ref^","title":"Returns"},{"location":"corral-bundle-ScriptsData/#public-fields","text":"","title":"Public fields"},{"location":"corral-bundle-ScriptsData/#var-windows-scriptcommanddata-ref-none-val","text":"[Source]","title":"var windows: (ScriptCommandData ref | None val)"},{"location":"corral-bundle-ScriptsData/#var-posix-scriptcommanddata-ref-none-val","text":"[Source]","title":"var posix: (ScriptCommandData ref | None val)"},{"location":"corral-bundle-ScriptsData/#public-functions","text":"","title":"Public Functions"},{"location":"corral-bundle-ScriptsData/#json","text":"[Source] fun box json() : JsonObject ref","title":"json"},{"location":"corral-bundle-ScriptsData/#returns_1","text":"JsonObject ref","title":"Returns"},{"location":"corral-cmd--index/","text":"No package doc string provided for corral/cmd. Public Types \u00b6 primitive PostFetchScript interface CmdResultReceiver primitive NoOpResultReceiver primitive RepoForDep primitive Executor class Context primitive Constraints class CmdVersion class CmdUpdate trait CmdType class CmdRun class CmdRemove class CmdPack class CmdList class CmdInit class CmdInfo class CmdClean class CmdAdd actor Main","title":"Package"},{"location":"corral-cmd--index/#public-types","text":"primitive PostFetchScript interface CmdResultReceiver primitive NoOpResultReceiver primitive RepoForDep primitive Executor class Context primitive Constraints class CmdVersion class CmdUpdate trait CmdType class CmdRun class CmdRemove class CmdPack class CmdList class CmdInit class CmdInfo class CmdClean class CmdAdd actor Main","title":"Public Types"},{"location":"corral-cmd-CmdAdd/","text":"CmdAdd \u00b6 [Source] class ref CmdAdd is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdAdd ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdAdd ref^ Public fields \u00b6 let locator: String val \u00b6 [Source] let version: String val \u00b6 [Source] let revision: String val \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdAdd"},{"location":"corral-cmd-CmdAdd/#cmdadd","text":"[Source] class ref CmdAdd is CmdType ref","title":"CmdAdd"},{"location":"corral-cmd-CmdAdd/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdAdd/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdAdd/#create","text":"[Source] new ref create( cmd: Command box) : CmdAdd ref^","title":"create"},{"location":"corral-cmd-CmdAdd/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdAdd/#returns","text":"CmdAdd ref^","title":"Returns"},{"location":"corral-cmd-CmdAdd/#public-fields","text":"","title":"Public fields"},{"location":"corral-cmd-CmdAdd/#let-locator-string-val","text":"[Source]","title":"let locator: String val"},{"location":"corral-cmd-CmdAdd/#let-version-string-val","text":"[Source]","title":"let version: String val"},{"location":"corral-cmd-CmdAdd/#let-revision-string-val","text":"[Source]","title":"let revision: String val"},{"location":"corral-cmd-CmdAdd/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdAdd/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdAdd/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdAdd/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdAdd/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdAdd/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdAdd/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdAdd/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdClean/","text":"CmdClean \u00b6 [Source] class ref CmdClean is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdClean ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdClean ref^ Public fields \u00b6 let clean_repos: Bool val \u00b6 [Source] let clean_corral: Bool val \u00b6 [Source] Public Functions \u00b6 requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdClean"},{"location":"corral-cmd-CmdClean/#cmdclean","text":"[Source] class ref CmdClean is CmdType ref","title":"CmdClean"},{"location":"corral-cmd-CmdClean/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdClean/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdClean/#create","text":"[Source] new ref create( cmd: Command box) : CmdClean ref^","title":"create"},{"location":"corral-cmd-CmdClean/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdClean/#returns","text":"CmdClean ref^","title":"Returns"},{"location":"corral-cmd-CmdClean/#public-fields","text":"","title":"Public fields"},{"location":"corral-cmd-CmdClean/#let-clean_repos-bool-val","text":"[Source]","title":"let clean_repos: Bool val"},{"location":"corral-cmd-CmdClean/#let-clean_corral-bool-val","text":"[Source]","title":"let clean_corral: Bool val"},{"location":"corral-cmd-CmdClean/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdClean/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdClean/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdClean/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdClean/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdClean/#returns_2","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdClean/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdClean/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdInfo/","text":"CmdInfo \u00b6 [Source] class ref CmdInfo is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdInfo ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdInfo ref^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdInfo"},{"location":"corral-cmd-CmdInfo/#cmdinfo","text":"[Source] class ref CmdInfo is CmdType ref","title":"CmdInfo"},{"location":"corral-cmd-CmdInfo/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdInfo/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdInfo/#create","text":"[Source] new ref create( cmd: Command box) : CmdInfo ref^","title":"create"},{"location":"corral-cmd-CmdInfo/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdInfo/#returns","text":"CmdInfo ref^","title":"Returns"},{"location":"corral-cmd-CmdInfo/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdInfo/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdInfo/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdInfo/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdInfo/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdInfo/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdInfo/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdInfo/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdInit/","text":"CmdInit \u00b6 [Source] class ref CmdInit is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdInit ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdInit ref^ Public Functions \u00b6 requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val","title":"class CmdInit"},{"location":"corral-cmd-CmdInit/#cmdinit","text":"[Source] class ref CmdInit is CmdType ref","title":"CmdInit"},{"location":"corral-cmd-CmdInit/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdInit/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdInit/#create","text":"[Source] new ref create( cmd: Command box) : CmdInit ref^","title":"create"},{"location":"corral-cmd-CmdInit/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdInit/#returns","text":"CmdInit ref^","title":"Returns"},{"location":"corral-cmd-CmdInit/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdInit/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdInit/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdInit/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdInit/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdInit/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdInit/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdInit/#returns_3","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdList/","text":"CmdList \u00b6 [Source] class ref CmdList is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdList ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdList ref^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdList"},{"location":"corral-cmd-CmdList/#cmdlist","text":"[Source] class ref CmdList is CmdType ref","title":"CmdList"},{"location":"corral-cmd-CmdList/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdList/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdList/#create","text":"[Source] new ref create( cmd: Command box) : CmdList ref^","title":"create"},{"location":"corral-cmd-CmdList/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdList/#returns","text":"CmdList ref^","title":"Returns"},{"location":"corral-cmd-CmdList/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdList/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdList/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdList/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdList/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdList/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdList/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdList/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdPack/","text":"CmdPack \u00b6 [Source] class ref CmdPack is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdPack ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdPack ref^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdPack"},{"location":"corral-cmd-CmdPack/#cmdpack","text":"[Source] class ref CmdPack is CmdType ref","title":"CmdPack"},{"location":"corral-cmd-CmdPack/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdPack/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdPack/#create","text":"[Source] new ref create( cmd: Command box) : CmdPack ref^","title":"create"},{"location":"corral-cmd-CmdPack/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdPack/#returns","text":"CmdPack ref^","title":"Returns"},{"location":"corral-cmd-CmdPack/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdPack/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdPack/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdPack/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdPack/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdPack/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdPack/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdPack/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdRemove/","text":"CmdRemove \u00b6 [Source] class ref CmdRemove is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdRemove ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdRemove ref^ Public fields \u00b6 let locator: String val \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdRemove"},{"location":"corral-cmd-CmdRemove/#cmdremove","text":"[Source] class ref CmdRemove is CmdType ref","title":"CmdRemove"},{"location":"corral-cmd-CmdRemove/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdRemove/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdRemove/#create","text":"[Source] new ref create( cmd: Command box) : CmdRemove ref^","title":"create"},{"location":"corral-cmd-CmdRemove/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdRemove/#returns","text":"CmdRemove ref^","title":"Returns"},{"location":"corral-cmd-CmdRemove/#public-fields","text":"","title":"Public fields"},{"location":"corral-cmd-CmdRemove/#let-locator-string-val","text":"[Source]","title":"let locator: String val"},{"location":"corral-cmd-CmdRemove/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdRemove/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdRemove/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdRemove/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdRemove/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdRemove/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdRemove/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdRemove/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdResultReceiver/","text":"CmdResultReceiver \u00b6 [Source] interface tag CmdResultReceiver Public Behaviours \u00b6 cmd_completed \u00b6 [Source] be cmd_completed()","title":"interface CmdResultReceiver"},{"location":"corral-cmd-CmdResultReceiver/#cmdresultreceiver","text":"[Source] interface tag CmdResultReceiver","title":"CmdResultReceiver"},{"location":"corral-cmd-CmdResultReceiver/#public-behaviours","text":"","title":"Public Behaviours"},{"location":"corral-cmd-CmdResultReceiver/#cmd_completed","text":"[Source] be cmd_completed()","title":"cmd_completed"},{"location":"corral-cmd-CmdRun/","text":"CmdRun \u00b6 [Source] class ref CmdRun is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdRun ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdRun ref^ Public fields \u00b6 let args: Array [ String val] val \u00b6 [Source] Public Functions \u00b6 requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdRun"},{"location":"corral-cmd-CmdRun/#cmdrun","text":"[Source] class ref CmdRun is CmdType ref","title":"CmdRun"},{"location":"corral-cmd-CmdRun/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdRun/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdRun/#create","text":"[Source] new ref create( cmd: Command box) : CmdRun ref^","title":"create"},{"location":"corral-cmd-CmdRun/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdRun/#returns","text":"CmdRun ref^","title":"Returns"},{"location":"corral-cmd-CmdRun/#public-fields","text":"","title":"Public fields"},{"location":"corral-cmd-CmdRun/#let-args-arraystring-val-val","text":"[Source]","title":"let args: Array[String val] val"},{"location":"corral-cmd-CmdRun/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdRun/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdRun/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdRun/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdRun/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdRun/#returns_2","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdRun/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdRun/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdType/","text":"CmdType \u00b6 [Source] trait ref CmdType Public Functions \u00b6 requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 [Source] fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val apply \u00b6 [Source] fun ref apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, results_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val results_receiver: CmdResultReceiver tag Returns \u00b6 None val","title":"trait CmdType"},{"location":"corral-cmd-CmdType/#cmdtype","text":"[Source] trait ref CmdType","title":"CmdType"},{"location":"corral-cmd-CmdType/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdType/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdType/#returns","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdType/#requires_no_bundle","text":"[Source] fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdType/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdType/#apply","text":"[Source] fun ref apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, results_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdType/#parameters","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val results_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdType/#returns_2","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdUpdate/","text":"CmdUpdate \u00b6 [Source] class ref CmdUpdate is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdUpdate ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdUpdate ref^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, results_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val results_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_bundle \u00b6 fun box requires_bundle() : Bool val Returns \u00b6 Bool val requires_no_bundle \u00b6 fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdUpdate"},{"location":"corral-cmd-CmdUpdate/#cmdupdate","text":"[Source] class ref CmdUpdate is CmdType ref","title":"CmdUpdate"},{"location":"corral-cmd-CmdUpdate/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdUpdate/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdUpdate/#create","text":"[Source] new ref create( cmd: Command box) : CmdUpdate ref^","title":"create"},{"location":"corral-cmd-CmdUpdate/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdUpdate/#returns","text":"CmdUpdate ref^","title":"Returns"},{"location":"corral-cmd-CmdUpdate/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdUpdate/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, results_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdUpdate/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val results_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdUpdate/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdUpdate/#requires_bundle","text":"fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdUpdate/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdUpdate/#requires_no_bundle","text":"fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdUpdate/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdVersion/","text":"CmdVersion \u00b6 [Source] class ref CmdVersion is CmdType ref Implements \u00b6 CmdType ref Constructors \u00b6 create \u00b6 [Source] new ref create( cmd: Command box) : CmdVersion ref^ Parameters \u00b6 cmd: Command box Returns \u00b6 CmdVersion ref^ Public Functions \u00b6 requires_bundle \u00b6 [Source] fun box requires_bundle() : Bool val Returns \u00b6 Bool val apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val Parameters \u00b6 ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag Returns \u00b6 None val requires_no_bundle \u00b6 fun box requires_no_bundle() : Bool val Returns \u00b6 Bool val","title":"class CmdVersion"},{"location":"corral-cmd-CmdVersion/#cmdversion","text":"[Source] class ref CmdVersion is CmdType ref","title":"CmdVersion"},{"location":"corral-cmd-CmdVersion/#implements","text":"CmdType ref","title":"Implements"},{"location":"corral-cmd-CmdVersion/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-CmdVersion/#create","text":"[Source] new ref create( cmd: Command box) : CmdVersion ref^","title":"create"},{"location":"corral-cmd-CmdVersion/#parameters","text":"cmd: Command box","title":"Parameters"},{"location":"corral-cmd-CmdVersion/#returns","text":"CmdVersion ref^","title":"Returns"},{"location":"corral-cmd-CmdVersion/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-CmdVersion/#requires_bundle","text":"[Source] fun box requires_bundle() : Bool val","title":"requires_bundle"},{"location":"corral-cmd-CmdVersion/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-cmd-CmdVersion/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project val, vcs_builder: VCSBuilder val, result_receiver: CmdResultReceiver tag) : None val","title":"apply"},{"location":"corral-cmd-CmdVersion/#parameters_1","text":"ctx: Context val project: Project val vcs_builder: VCSBuilder val result_receiver: CmdResultReceiver tag","title":"Parameters"},{"location":"corral-cmd-CmdVersion/#returns_2","text":"None val","title":"Returns"},{"location":"corral-cmd-CmdVersion/#requires_no_bundle","text":"fun box requires_no_bundle() : Bool val","title":"requires_no_bundle"},{"location":"corral-cmd-CmdVersion/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-Constraints/","text":"Constraints \u00b6 [Source] primitive val Constraints Constructors \u00b6 create \u00b6 [Source] new val create() : Constraints val^ Returns \u00b6 Constraints val^ Public Functions \u00b6 resolve_version \u00b6 [Source] Returns the best revision given a version string and an array of tag choices. If version is a tag, hash or other non-constraint, then return that. fun box resolve_version( version: String val, tags: Array[String val] val, log: Logger[String val] val) : String val Parameters \u00b6 version: String val tags: Array [ String val] val log: Logger [ String val] val Returns \u00b6 String val best_revision \u00b6 [Source] Returns the best choice of possible: a lock revision, a fallback dep revision, and a version. TODO https://github.com/ponylang/corral/issues/59 fun box best_revision( lrevision: String val, drevision: String val, version: String val) : String val Parameters \u00b6 lrevision: String val drevision: String val version: String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: Constraints val) : Bool val Parameters \u00b6 that: Constraints val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Constraints val) : Bool val Parameters \u00b6 that: Constraints val Returns \u00b6 Bool val","title":"primitive Constraints"},{"location":"corral-cmd-Constraints/#constraints","text":"[Source] primitive val Constraints","title":"Constraints"},{"location":"corral-cmd-Constraints/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-Constraints/#create","text":"[Source] new val create() : Constraints val^","title":"create"},{"location":"corral-cmd-Constraints/#returns","text":"Constraints val^","title":"Returns"},{"location":"corral-cmd-Constraints/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-Constraints/#resolve_version","text":"[Source] Returns the best revision given a version string and an array of tag choices. If version is a tag, hash or other non-constraint, then return that. fun box resolve_version( version: String val, tags: Array[String val] val, log: Logger[String val] val) : String val","title":"resolve_version"},{"location":"corral-cmd-Constraints/#parameters","text":"version: String val tags: Array [ String val] val log: Logger [ String val] val","title":"Parameters"},{"location":"corral-cmd-Constraints/#returns_1","text":"String val","title":"Returns"},{"location":"corral-cmd-Constraints/#best_revision","text":"[Source] Returns the best choice of possible: a lock revision, a fallback dep revision, and a version. TODO https://github.com/ponylang/corral/issues/59 fun box best_revision( lrevision: String val, drevision: String val, version: String val) : String val","title":"best_revision"},{"location":"corral-cmd-Constraints/#parameters_1","text":"lrevision: String val drevision: String val version: String val","title":"Parameters"},{"location":"corral-cmd-Constraints/#returns_2","text":"String val","title":"Returns"},{"location":"corral-cmd-Constraints/#eq","text":"[Source] fun box eq( that: Constraints val) : Bool val","title":"eq"},{"location":"corral-cmd-Constraints/#parameters_2","text":"that: Constraints val","title":"Parameters"},{"location":"corral-cmd-Constraints/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-Constraints/#ne","text":"[Source] fun box ne( that: Constraints val) : Bool val","title":"ne"},{"location":"corral-cmd-Constraints/#parameters_3","text":"that: Constraints val","title":"Parameters"},{"location":"corral-cmd-Constraints/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-cmd-Context/","text":"Context \u00b6 [Source] Context holds options and environment for all commands. class val Context Constructors \u00b6 create \u00b6 [Source] new val create( env': Env val, log': Logger[String val] val, uout': Logger[String val] val, nothing': Bool val, repo_cache': FilePath val) : Context val^ Parameters \u00b6 env': Env val log': Logger [ String val] val uout': Logger [ String val] val nothing': Bool val repo_cache': FilePath val Returns \u00b6 Context val^ Public fields \u00b6 let env: Env val \u00b6 [Source] let log: Logger [ String val] val \u00b6 [Source] let uout: Logger [ String val] val \u00b6 [Source] let nothing: Bool val \u00b6 [Source] let repo_cache: FilePath val \u00b6 [Source]","title":"class Context"},{"location":"corral-cmd-Context/#context","text":"[Source] Context holds options and environment for all commands. class val Context","title":"Context"},{"location":"corral-cmd-Context/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-Context/#create","text":"[Source] new val create( env': Env val, log': Logger[String val] val, uout': Logger[String val] val, nothing': Bool val, repo_cache': FilePath val) : Context val^","title":"create"},{"location":"corral-cmd-Context/#parameters","text":"env': Env val log': Logger [ String val] val uout': Logger [ String val] val nothing': Bool val repo_cache': FilePath val","title":"Parameters"},{"location":"corral-cmd-Context/#returns","text":"Context val^","title":"Returns"},{"location":"corral-cmd-Context/#public-fields","text":"","title":"Public fields"},{"location":"corral-cmd-Context/#let-env-env-val","text":"[Source]","title":"let env: Env val"},{"location":"corral-cmd-Context/#let-log-loggerstring-val-val","text":"[Source]","title":"let log: Logger[String val] val"},{"location":"corral-cmd-Context/#let-uout-loggerstring-val-val","text":"[Source]","title":"let uout: Logger[String val] val"},{"location":"corral-cmd-Context/#let-nothing-bool-val","text":"[Source]","title":"let nothing: Bool val"},{"location":"corral-cmd-Context/#let-repo_cache-filepath-val","text":"[Source]","title":"let repo_cache: FilePath val"},{"location":"corral-cmd-Executor/","text":"Executor \u00b6 [Source] Executor handles all the work of setting up the working environment and running commands. It resolves directories, creates the Project and Context objects, and then runs the given command. primitive val Executor Constructors \u00b6 create \u00b6 [Source] new val create() : Executor val^ Returns \u00b6 Executor val^ Public Functions \u00b6 execute \u00b6 [Source] fun box execute( command: CmdType ref, env: Env val, log: Logger[String val] val, uout: Logger[String val] val, nothing: Bool val, bundle_dir_arg: String val) : None val Parameters \u00b6 command: CmdType ref env: Env val log: Logger [ String val] val uout: Logger [ String val] val nothing: Bool val bundle_dir_arg: String val Returns \u00b6 None val eq \u00b6 [Source] fun box eq( that: Executor val) : Bool val Parameters \u00b6 that: Executor val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Executor val) : Bool val Parameters \u00b6 that: Executor val Returns \u00b6 Bool val","title":"primitive Executor"},{"location":"corral-cmd-Executor/#executor","text":"[Source] Executor handles all the work of setting up the working environment and running commands. It resolves directories, creates the Project and Context objects, and then runs the given command. primitive val Executor","title":"Executor"},{"location":"corral-cmd-Executor/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-Executor/#create","text":"[Source] new val create() : Executor val^","title":"create"},{"location":"corral-cmd-Executor/#returns","text":"Executor val^","title":"Returns"},{"location":"corral-cmd-Executor/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-Executor/#execute","text":"[Source] fun box execute( command: CmdType ref, env: Env val, log: Logger[String val] val, uout: Logger[String val] val, nothing: Bool val, bundle_dir_arg: String val) : None val","title":"execute"},{"location":"corral-cmd-Executor/#parameters","text":"command: CmdType ref env: Env val log: Logger [ String val] val uout: Logger [ String val] val nothing: Bool val bundle_dir_arg: String val","title":"Parameters"},{"location":"corral-cmd-Executor/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-Executor/#eq","text":"[Source] fun box eq( that: Executor val) : Bool val","title":"eq"},{"location":"corral-cmd-Executor/#parameters_1","text":"that: Executor val","title":"Parameters"},{"location":"corral-cmd-Executor/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-Executor/#ne","text":"[Source] fun box ne( that: Executor val) : Bool val","title":"ne"},{"location":"corral-cmd-Executor/#parameters_2","text":"that: Executor val","title":"Parameters"},{"location":"corral-cmd-Executor/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-Main/","text":"Main \u00b6 [Source] actor tag Main is TestList ref Implements \u00b6 TestList ref Constructors \u00b6 create \u00b6 [Source] new tag create( env: Env val) : Main tag^ Parameters \u00b6 env: Env val Returns \u00b6 Main tag^ make \u00b6 [Source] new tag make() : Main tag^ Returns \u00b6 Main tag^ Public Functions \u00b6 tests \u00b6 [Source] fun tag tests( test: PonyTest tag) : None val Parameters \u00b6 test: PonyTest tag Returns \u00b6 None val runtime_override_defaults \u00b6 [Source] fun runtime_override_defaults( rto: RuntimeOptions ref) : None val Parameters \u00b6 rto: RuntimeOptions ref Returns \u00b6 None val","title":"actor Main"},{"location":"corral-cmd-Main/#main","text":"[Source] actor tag Main is TestList ref","title":"Main"},{"location":"corral-cmd-Main/#implements","text":"TestList ref","title":"Implements"},{"location":"corral-cmd-Main/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-Main/#create","text":"[Source] new tag create( env: Env val) : Main tag^","title":"create"},{"location":"corral-cmd-Main/#parameters","text":"env: Env val","title":"Parameters"},{"location":"corral-cmd-Main/#returns","text":"Main tag^","title":"Returns"},{"location":"corral-cmd-Main/#make","text":"[Source] new tag make() : Main tag^","title":"make"},{"location":"corral-cmd-Main/#returns_1","text":"Main tag^","title":"Returns"},{"location":"corral-cmd-Main/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-Main/#tests","text":"[Source] fun tag tests( test: PonyTest tag) : None val","title":"tests"},{"location":"corral-cmd-Main/#parameters_1","text":"test: PonyTest tag","title":"Parameters"},{"location":"corral-cmd-Main/#returns_2","text":"None val","title":"Returns"},{"location":"corral-cmd-Main/#runtime_override_defaults","text":"[Source] fun runtime_override_defaults( rto: RuntimeOptions ref) : None val","title":"runtime_override_defaults"},{"location":"corral-cmd-Main/#parameters_2","text":"rto: RuntimeOptions ref","title":"Parameters"},{"location":"corral-cmd-Main/#returns_3","text":"None val","title":"Returns"},{"location":"corral-cmd-NoOpResultReceiver/","text":"NoOpResultReceiver \u00b6 [Source] primitive val NoOpResultReceiver Constructors \u00b6 create \u00b6 [Source] new val create() : NoOpResultReceiver val^ Returns \u00b6 NoOpResultReceiver val^ Public Functions \u00b6 cmd_completed \u00b6 [Source] fun tag cmd_completed() : None val Returns \u00b6 None val eq \u00b6 [Source] fun box eq( that: NoOpResultReceiver val) : Bool val Parameters \u00b6 that: NoOpResultReceiver val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: NoOpResultReceiver val) : Bool val Parameters \u00b6 that: NoOpResultReceiver val Returns \u00b6 Bool val","title":"primitive NoOpResultReceiver"},{"location":"corral-cmd-NoOpResultReceiver/#noopresultreceiver","text":"[Source] primitive val NoOpResultReceiver","title":"NoOpResultReceiver"},{"location":"corral-cmd-NoOpResultReceiver/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-NoOpResultReceiver/#create","text":"[Source] new val create() : NoOpResultReceiver val^","title":"create"},{"location":"corral-cmd-NoOpResultReceiver/#returns","text":"NoOpResultReceiver val^","title":"Returns"},{"location":"corral-cmd-NoOpResultReceiver/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-NoOpResultReceiver/#cmd_completed","text":"[Source] fun tag cmd_completed() : None val","title":"cmd_completed"},{"location":"corral-cmd-NoOpResultReceiver/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-NoOpResultReceiver/#eq","text":"[Source] fun box eq( that: NoOpResultReceiver val) : Bool val","title":"eq"},{"location":"corral-cmd-NoOpResultReceiver/#parameters","text":"that: NoOpResultReceiver val","title":"Parameters"},{"location":"corral-cmd-NoOpResultReceiver/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-NoOpResultReceiver/#ne","text":"[Source] fun box ne( that: NoOpResultReceiver val) : Bool val","title":"ne"},{"location":"corral-cmd-NoOpResultReceiver/#parameters_1","text":"that: NoOpResultReceiver val","title":"Parameters"},{"location":"corral-cmd-NoOpResultReceiver/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-PostFetchScript/","text":"PostFetchScript \u00b6 [Source] primitive val PostFetchScript Constructors \u00b6 create \u00b6 [Source] new val create() : PostFetchScript val^ Returns \u00b6 PostFetchScript val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, repo: Repo val) : None val Parameters \u00b6 ctx: Context val repo: Repo val Returns \u00b6 None val eq \u00b6 [Source] fun box eq( that: PostFetchScript val) : Bool val Parameters \u00b6 that: PostFetchScript val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: PostFetchScript val) : Bool val Parameters \u00b6 that: PostFetchScript val Returns \u00b6 Bool val","title":"primitive PostFetchScript"},{"location":"corral-cmd-PostFetchScript/#postfetchscript","text":"[Source] primitive val PostFetchScript","title":"PostFetchScript"},{"location":"corral-cmd-PostFetchScript/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-PostFetchScript/#create","text":"[Source] new val create() : PostFetchScript val^","title":"create"},{"location":"corral-cmd-PostFetchScript/#returns","text":"PostFetchScript val^","title":"Returns"},{"location":"corral-cmd-PostFetchScript/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-PostFetchScript/#apply","text":"[Source] fun box apply( ctx: Context val, repo: Repo val) : None val","title":"apply"},{"location":"corral-cmd-PostFetchScript/#parameters","text":"ctx: Context val repo: Repo val","title":"Parameters"},{"location":"corral-cmd-PostFetchScript/#returns_1","text":"None val","title":"Returns"},{"location":"corral-cmd-PostFetchScript/#eq","text":"[Source] fun box eq( that: PostFetchScript val) : Bool val","title":"eq"},{"location":"corral-cmd-PostFetchScript/#parameters_1","text":"that: PostFetchScript val","title":"Parameters"},{"location":"corral-cmd-PostFetchScript/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-PostFetchScript/#ne","text":"[Source] fun box ne( that: PostFetchScript val) : Bool val","title":"ne"},{"location":"corral-cmd-PostFetchScript/#parameters_2","text":"that: PostFetchScript val","title":"Parameters"},{"location":"corral-cmd-PostFetchScript/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-cmd-RepoForDep/","text":"RepoForDep \u00b6 [Source] primitive val RepoForDep Constructors \u00b6 create \u00b6 [Source] new val create() : RepoForDep val^ Returns \u00b6 RepoForDep val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( ctx: Context val, project: Project box, dep: Dep box) : Repo val ? Parameters \u00b6 ctx: Context val project: Project box dep: Dep box Returns \u00b6 Repo val ? eq \u00b6 [Source] fun box eq( that: RepoForDep val) : Bool val Parameters \u00b6 that: RepoForDep val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: RepoForDep val) : Bool val Parameters \u00b6 that: RepoForDep val Returns \u00b6 Bool val","title":"primitive RepoForDep"},{"location":"corral-cmd-RepoForDep/#repofordep","text":"[Source] primitive val RepoForDep","title":"RepoForDep"},{"location":"corral-cmd-RepoForDep/#constructors","text":"","title":"Constructors"},{"location":"corral-cmd-RepoForDep/#create","text":"[Source] new val create() : RepoForDep val^","title":"create"},{"location":"corral-cmd-RepoForDep/#returns","text":"RepoForDep val^","title":"Returns"},{"location":"corral-cmd-RepoForDep/#public-functions","text":"","title":"Public Functions"},{"location":"corral-cmd-RepoForDep/#apply","text":"[Source] fun box apply( ctx: Context val, project: Project box, dep: Dep box) : Repo val ?","title":"apply"},{"location":"corral-cmd-RepoForDep/#parameters","text":"ctx: Context val project: Project box dep: Dep box","title":"Parameters"},{"location":"corral-cmd-RepoForDep/#returns_1","text":"Repo val ?","title":"Returns"},{"location":"corral-cmd-RepoForDep/#eq","text":"[Source] fun box eq( that: RepoForDep val) : Bool val","title":"eq"},{"location":"corral-cmd-RepoForDep/#parameters_1","text":"that: RepoForDep val","title":"Parameters"},{"location":"corral-cmd-RepoForDep/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-cmd-RepoForDep/#ne","text":"[Source] fun box ne( that: RepoForDep val) : Bool val","title":"ne"},{"location":"corral-cmd-RepoForDep/#parameters_2","text":"that: RepoForDep val","title":"Parameters"},{"location":"corral-cmd-RepoForDep/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-mort--index/","text":"No package doc string provided for corral/mort. Public Types \u00b6 primitive Unreachable","title":"Package"},{"location":"corral-mort--index/#public-types","text":"primitive Unreachable","title":"Public Types"},{"location":"corral-mort-Unreachable/","text":"Unreachable \u00b6 [Source] To be used in places that the compiler can't prove is unreachable but we are certain is unreachable and if we reach it, we'd be silently hiding a bug. primitive val Unreachable Constructors \u00b6 create \u00b6 [Source] new val create() : Unreachable val^ Returns \u00b6 Unreachable val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( loc: SourceLoc val = __loc) : None val Parameters \u00b6 loc: SourceLoc val = __loc Returns \u00b6 None val eq \u00b6 [Source] fun box eq( that: Unreachable val) : Bool val Parameters \u00b6 that: Unreachable val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Unreachable val) : Bool val Parameters \u00b6 that: Unreachable val Returns \u00b6 Bool val","title":"primitive Unreachable"},{"location":"corral-mort-Unreachable/#unreachable","text":"[Source] To be used in places that the compiler can't prove is unreachable but we are certain is unreachable and if we reach it, we'd be silently hiding a bug. primitive val Unreachable","title":"Unreachable"},{"location":"corral-mort-Unreachable/#constructors","text":"","title":"Constructors"},{"location":"corral-mort-Unreachable/#create","text":"[Source] new val create() : Unreachable val^","title":"create"},{"location":"corral-mort-Unreachable/#returns","text":"Unreachable val^","title":"Returns"},{"location":"corral-mort-Unreachable/#public-functions","text":"","title":"Public Functions"},{"location":"corral-mort-Unreachable/#apply","text":"[Source] fun box apply( loc: SourceLoc val = __loc) : None val","title":"apply"},{"location":"corral-mort-Unreachable/#parameters","text":"loc: SourceLoc val = __loc","title":"Parameters"},{"location":"corral-mort-Unreachable/#returns_1","text":"None val","title":"Returns"},{"location":"corral-mort-Unreachable/#eq","text":"[Source] fun box eq( that: Unreachable val) : Bool val","title":"eq"},{"location":"corral-mort-Unreachable/#parameters_1","text":"that: Unreachable val","title":"Parameters"},{"location":"corral-mort-Unreachable/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-mort-Unreachable/#ne","text":"[Source] fun box ne( that: Unreachable val) : Bool val","title":"ne"},{"location":"corral-mort-Unreachable/#parameters_2","text":"that: Unreachable val","title":"Parameters"},{"location":"corral-mort-Unreachable/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-range--index/","text":"No package doc string provided for corral/semver/range. Public Types \u00b6 primitive RangeBoundsAreEqual type RangeBound class Range","title":"Package"},{"location":"corral-semver-range--index/#public-types","text":"primitive RangeBoundsAreEqual type RangeBound class Range","title":"Public Types"},{"location":"corral-semver-range-Range/","text":"Range \u00b6 [Source] class ref Range is Equatable[Range ref] ref, Stringable box Implements \u00b6 Equatable [ Range ref] ref Stringable box Constructors \u00b6 create \u00b6 [Source] new ref create( from': (Version box | None box), to': (Version box | None box), from_inc': Bool val = true, to_inc': Bool val = true) : Range ref^ Parameters \u00b6 from': ( Version box | None box) to': ( Version box | None box) from_inc': Bool val = true to_inc': Bool val = true Returns \u00b6 Range ref^ Public fields \u00b6 let from: ( Version box | None box) \u00b6 [Source] let to: ( Version box | None box) \u00b6 [Source] let from_inc: Bool val \u00b6 [Source] let to_inc: Bool val \u00b6 [Source] Public Functions \u00b6 contains \u00b6 [Source] fun box contains( v: Version ref) : Bool val Parameters \u00b6 v: Version ref Returns \u00b6 Bool val eq \u00b6 [Source] fun box eq( that: Range box) : Bool val Parameters \u00b6 that: Range box Returns \u00b6 Bool val merge \u00b6 [Source] fun box merge( that: Range ref) : Range ref Parameters \u00b6 that: Range ref Returns \u00b6 Range ref overlaps \u00b6 [Source] fun box overlaps( that: Range ref) : Bool val Parameters \u00b6 that: Range ref Returns \u00b6 Bool val string \u00b6 [Source] fun box string() : String iso^ Returns \u00b6 String iso^ ne \u00b6 [Source] fun box ne( that: Range box) : Bool val Parameters \u00b6 that: Range box Returns \u00b6 Bool val","title":"class Range"},{"location":"corral-semver-range-Range/#range","text":"[Source] class ref Range is Equatable[Range ref] ref, Stringable box","title":"Range"},{"location":"corral-semver-range-Range/#implements","text":"Equatable [ Range ref] ref Stringable box","title":"Implements"},{"location":"corral-semver-range-Range/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-range-Range/#create","text":"[Source] new ref create( from': (Version box | None box), to': (Version box | None box), from_inc': Bool val = true, to_inc': Bool val = true) : Range ref^","title":"create"},{"location":"corral-semver-range-Range/#parameters","text":"from': ( Version box | None box) to': ( Version box | None box) from_inc': Bool val = true to_inc': Bool val = true","title":"Parameters"},{"location":"corral-semver-range-Range/#returns","text":"Range ref^","title":"Returns"},{"location":"corral-semver-range-Range/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-range-Range/#let-from-version-box-none-box","text":"[Source]","title":"let from: (Version box | None box)"},{"location":"corral-semver-range-Range/#let-to-version-box-none-box","text":"[Source]","title":"let to: (Version box | None box)"},{"location":"corral-semver-range-Range/#let-from_inc-bool-val","text":"[Source]","title":"let from_inc: Bool val"},{"location":"corral-semver-range-Range/#let-to_inc-bool-val","text":"[Source]","title":"let to_inc: Bool val"},{"location":"corral-semver-range-Range/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-range-Range/#contains","text":"[Source] fun box contains( v: Version ref) : Bool val","title":"contains"},{"location":"corral-semver-range-Range/#parameters_1","text":"v: Version ref","title":"Parameters"},{"location":"corral-semver-range-Range/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-range-Range/#eq","text":"[Source] fun box eq( that: Range box) : Bool val","title":"eq"},{"location":"corral-semver-range-Range/#parameters_2","text":"that: Range box","title":"Parameters"},{"location":"corral-semver-range-Range/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-range-Range/#merge","text":"[Source] fun box merge( that: Range ref) : Range ref","title":"merge"},{"location":"corral-semver-range-Range/#parameters_3","text":"that: Range ref","title":"Parameters"},{"location":"corral-semver-range-Range/#returns_3","text":"Range ref","title":"Returns"},{"location":"corral-semver-range-Range/#overlaps","text":"[Source] fun box overlaps( that: Range ref) : Bool val","title":"overlaps"},{"location":"corral-semver-range-Range/#parameters_4","text":"that: Range ref","title":"Parameters"},{"location":"corral-semver-range-Range/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-semver-range-Range/#string","text":"[Source] fun box string() : String iso^","title":"string"},{"location":"corral-semver-range-Range/#returns_5","text":"String iso^","title":"Returns"},{"location":"corral-semver-range-Range/#ne","text":"[Source] fun box ne( that: Range box) : Bool val","title":"ne"},{"location":"corral-semver-range-Range/#parameters_5","text":"that: Range box","title":"Parameters"},{"location":"corral-semver-range-Range/#returns_6","text":"Bool val","title":"Returns"},{"location":"corral-semver-range-RangeBound/","text":"RangeBound \u00b6 [Source] type RangeBound is (Version ref | None val) Type Alias For \u00b6 ( Version ref | None val)","title":"type RangeBound"},{"location":"corral-semver-range-RangeBound/#rangebound","text":"[Source] type RangeBound is (Version ref | None val)","title":"RangeBound"},{"location":"corral-semver-range-RangeBound/#type-alias-for","text":"( Version ref | None val)","title":"Type Alias For"},{"location":"corral-semver-range-RangeBoundsAreEqual/","text":"RangeBoundsAreEqual \u00b6 [Source] primitive val RangeBoundsAreEqual Constructors \u00b6 create \u00b6 [Source] new val create() : RangeBoundsAreEqual val^ Returns \u00b6 RangeBoundsAreEqual val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( vrb1: (Version box | None box), vrb2: (Version box | None box)) : Bool val Parameters \u00b6 vrb1: ( Version box | None box) vrb2: ( Version box | None box) Returns \u00b6 Bool val eq \u00b6 [Source] fun box eq( that: RangeBoundsAreEqual val) : Bool val Parameters \u00b6 that: RangeBoundsAreEqual val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: RangeBoundsAreEqual val) : Bool val Parameters \u00b6 that: RangeBoundsAreEqual val Returns \u00b6 Bool val","title":"primitive RangeBoundsAreEqual"},{"location":"corral-semver-range-RangeBoundsAreEqual/#rangeboundsareequal","text":"[Source] primitive val RangeBoundsAreEqual","title":"RangeBoundsAreEqual"},{"location":"corral-semver-range-RangeBoundsAreEqual/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-range-RangeBoundsAreEqual/#create","text":"[Source] new val create() : RangeBoundsAreEqual val^","title":"create"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns","text":"RangeBoundsAreEqual val^","title":"Returns"},{"location":"corral-semver-range-RangeBoundsAreEqual/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-range-RangeBoundsAreEqual/#apply","text":"[Source] fun box apply( vrb1: (Version box | None box), vrb2: (Version box | None box)) : Bool val","title":"apply"},{"location":"corral-semver-range-RangeBoundsAreEqual/#parameters","text":"vrb1: ( Version box | None box) vrb2: ( Version box | None box)","title":"Parameters"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-range-RangeBoundsAreEqual/#eq","text":"[Source] fun box eq( that: RangeBoundsAreEqual val) : Bool val","title":"eq"},{"location":"corral-semver-range-RangeBoundsAreEqual/#parameters_1","text":"that: RangeBoundsAreEqual val","title":"Parameters"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-range-RangeBoundsAreEqual/#ne","text":"[Source] fun box ne( that: RangeBoundsAreEqual val) : Bool val","title":"ne"},{"location":"corral-semver-range-RangeBoundsAreEqual/#parameters_2","text":"that: RangeBoundsAreEqual val","title":"Parameters"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver--index/","text":"No package doc string provided for corral/semver/solver. Public Types \u00b6 class Solver class Result class InMemArtifactSource class Constraint interface ArtifactSource class Artifact","title":"Package"},{"location":"corral-semver-solver--index/#public-types","text":"class Solver class Result class InMemArtifactSource class Constraint interface ArtifactSource class Artifact","title":"Public Types"},{"location":"corral-semver-solver-Artifact/","text":"Artifact \u00b6 [Source] class ref Artifact is ComparableMixin[Artifact ref] ref, Hashable ref, Stringable box Implements \u00b6 ComparableMixin [ Artifact ref] ref Hashable ref Stringable box Constructors \u00b6 create \u00b6 [Source] new ref create( name': String val, version': Version ref, depends_on': Array[Constraint ref] ref = qualify) : Artifact ref^ Parameters \u00b6 name': String val version': Version ref depends_on': Array [ Constraint ref] ref = qualify Returns \u00b6 Artifact ref^ Public fields \u00b6 let name: String val \u00b6 [Source] let version: Version ref \u00b6 [Source] let depends_on: Array [ Constraint ref] ref \u00b6 [Source] Public Functions \u00b6 compare \u00b6 [Source] fun box compare( that: Artifact box) : (Less val | Equal val | Greater val) Parameters \u00b6 that: Artifact box Returns \u00b6 ( Less val | Equal val | Greater val) hash \u00b6 [Source] fun box hash() : USize val Returns \u00b6 USize val string \u00b6 [Source] fun box string() : String iso^ Returns \u00b6 String iso^ lt \u00b6 fun box lt( that: Artifact box) : Bool val Parameters \u00b6 that: Artifact box Returns \u00b6 Bool val le \u00b6 fun box le( that: Artifact box) : Bool val Parameters \u00b6 that: Artifact box Returns \u00b6 Bool val gt \u00b6 fun box gt( that: Artifact box) : Bool val Parameters \u00b6 that: Artifact box Returns \u00b6 Bool val ge \u00b6 fun box ge( that: Artifact box) : Bool val Parameters \u00b6 that: Artifact box Returns \u00b6 Bool val eq \u00b6 fun box eq( that: Artifact box) : Bool val Parameters \u00b6 that: Artifact box Returns \u00b6 Bool val ne \u00b6 fun box ne( that: Artifact box) : Bool val Parameters \u00b6 that: Artifact box Returns \u00b6 Bool val","title":"class Artifact"},{"location":"corral-semver-solver-Artifact/#artifact","text":"[Source] class ref Artifact is ComparableMixin[Artifact ref] ref, Hashable ref, Stringable box","title":"Artifact"},{"location":"corral-semver-solver-Artifact/#implements","text":"ComparableMixin [ Artifact ref] ref Hashable ref Stringable box","title":"Implements"},{"location":"corral-semver-solver-Artifact/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-solver-Artifact/#create","text":"[Source] new ref create( name': String val, version': Version ref, depends_on': Array[Constraint ref] ref = qualify) : Artifact ref^","title":"create"},{"location":"corral-semver-solver-Artifact/#parameters","text":"name': String val version': Version ref depends_on': Array [ Constraint ref] ref = qualify","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns","text":"Artifact ref^","title":"Returns"},{"location":"corral-semver-solver-Artifact/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-solver-Artifact/#let-name-string-val","text":"[Source]","title":"let name: String val"},{"location":"corral-semver-solver-Artifact/#let-version-version-ref","text":"[Source]","title":"let version: Version ref"},{"location":"corral-semver-solver-Artifact/#let-depends_on-arrayconstraint-ref-ref","text":"[Source]","title":"let depends_on: Array[Constraint ref] ref"},{"location":"corral-semver-solver-Artifact/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-solver-Artifact/#compare","text":"[Source] fun box compare( that: Artifact box) : (Less val | Equal val | Greater val)","title":"compare"},{"location":"corral-semver-solver-Artifact/#parameters_1","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_1","text":"( Less val | Equal val | Greater val)","title":"Returns"},{"location":"corral-semver-solver-Artifact/#hash","text":"[Source] fun box hash() : USize val","title":"hash"},{"location":"corral-semver-solver-Artifact/#returns_2","text":"USize val","title":"Returns"},{"location":"corral-semver-solver-Artifact/#string","text":"[Source] fun box string() : String iso^","title":"string"},{"location":"corral-semver-solver-Artifact/#returns_3","text":"String iso^","title":"Returns"},{"location":"corral-semver-solver-Artifact/#lt","text":"fun box lt( that: Artifact box) : Bool val","title":"lt"},{"location":"corral-semver-solver-Artifact/#parameters_2","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-Artifact/#le","text":"fun box le( that: Artifact box) : Bool val","title":"le"},{"location":"corral-semver-solver-Artifact/#parameters_3","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-Artifact/#gt","text":"fun box gt( that: Artifact box) : Bool val","title":"gt"},{"location":"corral-semver-solver-Artifact/#parameters_4","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_6","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-Artifact/#ge","text":"fun box ge( that: Artifact box) : Bool val","title":"ge"},{"location":"corral-semver-solver-Artifact/#parameters_5","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_7","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-Artifact/#eq","text":"fun box eq( that: Artifact box) : Bool val","title":"eq"},{"location":"corral-semver-solver-Artifact/#parameters_6","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_8","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-Artifact/#ne","text":"fun box ne( that: Artifact box) : Bool val","title":"ne"},{"location":"corral-semver-solver-Artifact/#parameters_7","text":"that: Artifact box","title":"Parameters"},{"location":"corral-semver-solver-Artifact/#returns_9","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-ArtifactSource/","text":"ArtifactSource \u00b6 [Source] interface ref ArtifactSource Public Functions \u00b6 all_versions_of \u00b6 [Source] fun ref all_versions_of( name: String val) : Iterator[Artifact ref] ref Parameters \u00b6 name: String val Returns \u00b6 Iterator [ Artifact ref] ref","title":"interface ArtifactSource"},{"location":"corral-semver-solver-ArtifactSource/#artifactsource","text":"[Source] interface ref ArtifactSource","title":"ArtifactSource"},{"location":"corral-semver-solver-ArtifactSource/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-solver-ArtifactSource/#all_versions_of","text":"[Source] fun ref all_versions_of( name: String val) : Iterator[Artifact ref] ref","title":"all_versions_of"},{"location":"corral-semver-solver-ArtifactSource/#parameters","text":"name: String val","title":"Parameters"},{"location":"corral-semver-solver-ArtifactSource/#returns","text":"Iterator [ Artifact ref] ref","title":"Returns"},{"location":"corral-semver-solver-Constraint/","text":"Constraint \u00b6 [Source] class ref Constraint is Stringable box Implements \u00b6 Stringable box Constructors \u00b6 create \u00b6 [Source] new ref create( artifact_name': String val, range': Range ref) : Constraint ref^ Parameters \u00b6 artifact_name': String val range': Range ref Returns \u00b6 Constraint ref^ Public fields \u00b6 let artifact_name: String val \u00b6 [Source] let range: Range ref \u00b6 [Source] Public Functions \u00b6 string \u00b6 [Source] fun box string() : String iso^ Returns \u00b6 String iso^","title":"class Constraint"},{"location":"corral-semver-solver-Constraint/#constraint","text":"[Source] class ref Constraint is Stringable box","title":"Constraint"},{"location":"corral-semver-solver-Constraint/#implements","text":"Stringable box","title":"Implements"},{"location":"corral-semver-solver-Constraint/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-solver-Constraint/#create","text":"[Source] new ref create( artifact_name': String val, range': Range ref) : Constraint ref^","title":"create"},{"location":"corral-semver-solver-Constraint/#parameters","text":"artifact_name': String val range': Range ref","title":"Parameters"},{"location":"corral-semver-solver-Constraint/#returns","text":"Constraint ref^","title":"Returns"},{"location":"corral-semver-solver-Constraint/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-solver-Constraint/#let-artifact_name-string-val","text":"[Source]","title":"let artifact_name: String val"},{"location":"corral-semver-solver-Constraint/#let-range-range-ref","text":"[Source]","title":"let range: Range ref"},{"location":"corral-semver-solver-Constraint/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-solver-Constraint/#string","text":"[Source] fun box string() : String iso^","title":"string"},{"location":"corral-semver-solver-Constraint/#returns_1","text":"String iso^","title":"Returns"},{"location":"corral-semver-solver-InMemArtifactSource/","text":"InMemArtifactSource \u00b6 [Source] class ref InMemArtifactSource is ArtifactSource ref Implements \u00b6 ArtifactSource ref Constructors \u00b6 create \u00b6 [Source] new iso create() : InMemArtifactSource iso^ Returns \u00b6 InMemArtifactSource iso^ Public fields \u00b6 let artifact_sets_by_name: HashMap [ String val, HashSet [ Artifact ref, HashEq [ Artifact ref] val] ref, HashEq [ String val] val] ref \u00b6 [Source] Public Functions \u00b6 add \u00b6 [Source] fun ref add( a: Artifact ref) : None val Parameters \u00b6 a: Artifact ref Returns \u00b6 None val all_versions_of \u00b6 [Source] fun ref all_versions_of( name: String val) : Iterator[Artifact ref] ref Parameters \u00b6 name: String val Returns \u00b6 Iterator [ Artifact ref] ref","title":"class InMemArtifactSource"},{"location":"corral-semver-solver-InMemArtifactSource/#inmemartifactsource","text":"[Source] class ref InMemArtifactSource is ArtifactSource ref","title":"InMemArtifactSource"},{"location":"corral-semver-solver-InMemArtifactSource/#implements","text":"ArtifactSource ref","title":"Implements"},{"location":"corral-semver-solver-InMemArtifactSource/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-solver-InMemArtifactSource/#create","text":"[Source] new iso create() : InMemArtifactSource iso^","title":"create"},{"location":"corral-semver-solver-InMemArtifactSource/#returns","text":"InMemArtifactSource iso^","title":"Returns"},{"location":"corral-semver-solver-InMemArtifactSource/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-solver-InMemArtifactSource/#let-artifact_sets_by_name-hashmapstring-val-hashsetartifact-ref-hasheqartifact-ref-val-ref-hasheqstring-val-val-ref","text":"[Source]","title":"let artifact_sets_by_name: HashMap[String val, HashSet[Artifact ref, HashEq[Artifact ref] val] ref, HashEq[String val] val] ref"},{"location":"corral-semver-solver-InMemArtifactSource/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-solver-InMemArtifactSource/#add","text":"[Source] fun ref add( a: Artifact ref) : None val","title":"add"},{"location":"corral-semver-solver-InMemArtifactSource/#parameters","text":"a: Artifact ref","title":"Parameters"},{"location":"corral-semver-solver-InMemArtifactSource/#returns_1","text":"None val","title":"Returns"},{"location":"corral-semver-solver-InMemArtifactSource/#all_versions_of","text":"[Source] fun ref all_versions_of( name: String val) : Iterator[Artifact ref] ref","title":"all_versions_of"},{"location":"corral-semver-solver-InMemArtifactSource/#parameters_1","text":"name: String val","title":"Parameters"},{"location":"corral-semver-solver-InMemArtifactSource/#returns_2","text":"Iterator [ Artifact ref] ref","title":"Returns"},{"location":"corral-semver-solver-Result/","text":"Result \u00b6 [Source] class ref Result Constructors \u00b6 create \u00b6 [Source] new ref create( solution': Array[Artifact ref] ref = qualify, err': String val = \"\") : Result ref^ Parameters \u00b6 solution': Array [ Artifact ref] ref = qualify err': String val = \"\" Returns \u00b6 Result ref^ Public fields \u00b6 let solution: Array [ Artifact ref] ref \u00b6 [Source] let err: String val \u00b6 [Source] Public Functions \u00b6 is_err \u00b6 [Source] fun box is_err() : Bool val Returns \u00b6 Bool val","title":"class Result"},{"location":"corral-semver-solver-Result/#result","text":"[Source] class ref Result","title":"Result"},{"location":"corral-semver-solver-Result/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-solver-Result/#create","text":"[Source] new ref create( solution': Array[Artifact ref] ref = qualify, err': String val = \"\") : Result ref^","title":"create"},{"location":"corral-semver-solver-Result/#parameters","text":"solution': Array [ Artifact ref] ref = qualify err': String val = \"\"","title":"Parameters"},{"location":"corral-semver-solver-Result/#returns","text":"Result ref^","title":"Returns"},{"location":"corral-semver-solver-Result/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-solver-Result/#let-solution-arrayartifact-ref-ref","text":"[Source]","title":"let solution: Array[Artifact ref] ref"},{"location":"corral-semver-solver-Result/#let-err-string-val","text":"[Source]","title":"let err: String val"},{"location":"corral-semver-solver-Result/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-solver-Result/#is_err","text":"[Source] fun box is_err() : Bool val","title":"is_err"},{"location":"corral-semver-solver-Result/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-solver-Solver/","text":"Solver \u00b6 [Source] class ref Solver Constructors \u00b6 create \u00b6 [Source] new ref create( source': ArtifactSource ref) : Solver ref^ Parameters \u00b6 source': ArtifactSource ref Returns \u00b6 Solver ref^ Public fields \u00b6 let source: ArtifactSource ref \u00b6 [Source] Public Functions \u00b6 solve \u00b6 [Source] fun ref solve( constraints: Iterator[Constraint ref] ref) : Result ref Parameters \u00b6 constraints: Iterator [ Constraint ref] ref Returns \u00b6 Result ref","title":"class Solver"},{"location":"corral-semver-solver-Solver/#solver","text":"[Source] class ref Solver","title":"Solver"},{"location":"corral-semver-solver-Solver/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-solver-Solver/#create","text":"[Source] new ref create( source': ArtifactSource ref) : Solver ref^","title":"create"},{"location":"corral-semver-solver-Solver/#parameters","text":"source': ArtifactSource ref","title":"Parameters"},{"location":"corral-semver-solver-Solver/#returns","text":"Solver ref^","title":"Returns"},{"location":"corral-semver-solver-Solver/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-solver-Solver/#let-source-artifactsource-ref","text":"[Source]","title":"let source: ArtifactSource ref"},{"location":"corral-semver-solver-Solver/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-solver-Solver/#solve","text":"[Source] fun ref solve( constraints: Iterator[Constraint ref] ref) : Result ref","title":"solve"},{"location":"corral-semver-solver-Solver/#parameters_1","text":"constraints: Iterator [ Constraint ref] ref","title":"Parameters"},{"location":"corral-semver-solver-Solver/#returns_1","text":"Result ref","title":"Returns"},{"location":"corral-semver-utils--index/","text":"No package doc string provided for corral/semver/utils. Public Types \u00b6 primitive Strings class EmptyIterator class ZipIterator interface ComparableMixin","title":"Package"},{"location":"corral-semver-utils--index/#public-types","text":"primitive Strings class EmptyIterator class ZipIterator interface ComparableMixin","title":"Public Types"},{"location":"corral-semver-utils-ComparableMixin/","text":"ComparableMixin[A: Comparable [A] #read] \u00b6 [Source] interface ref ComparableMixin[A: Comparable[A] #read] is Comparable[A] ref Implements \u00b6 Comparable [A] ref Public Functions \u00b6 compare \u00b6 [Source] fun box compare( that: box->A) : (Less val | Equal val | Greater val) Parameters \u00b6 that: box->A Returns \u00b6 ( Less val | Equal val | Greater val) lt \u00b6 [Source] fun box lt( that: box->A) : Bool val Parameters \u00b6 that: box->A Returns \u00b6 Bool val le \u00b6 [Source] fun box le( that: box->A) : Bool val Parameters \u00b6 that: box->A Returns \u00b6 Bool val gt \u00b6 [Source] fun box gt( that: box->A) : Bool val Parameters \u00b6 that: box->A Returns \u00b6 Bool val ge \u00b6 [Source] fun box ge( that: box->A) : Bool val Parameters \u00b6 that: box->A Returns \u00b6 Bool val eq \u00b6 [Source] fun box eq( that: box->A) : Bool val Parameters \u00b6 that: box->A Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: box->A) : Bool val Parameters \u00b6 that: box->A Returns \u00b6 Bool val","title":"interface ComparableMixin"},{"location":"corral-semver-utils-ComparableMixin/#comparablemixina-comparablea-read","text":"[Source] interface ref ComparableMixin[A: Comparable[A] #read] is Comparable[A] ref","title":"ComparableMixin[A: Comparable[A] #read]"},{"location":"corral-semver-utils-ComparableMixin/#implements","text":"Comparable [A] ref","title":"Implements"},{"location":"corral-semver-utils-ComparableMixin/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-utils-ComparableMixin/#compare","text":"[Source] fun box compare( that: box->A) : (Less val | Equal val | Greater val)","title":"compare"},{"location":"corral-semver-utils-ComparableMixin/#parameters","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns","text":"( Less val | Equal val | Greater val)","title":"Returns"},{"location":"corral-semver-utils-ComparableMixin/#lt","text":"[Source] fun box lt( that: box->A) : Bool val","title":"lt"},{"location":"corral-semver-utils-ComparableMixin/#parameters_1","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ComparableMixin/#le","text":"[Source] fun box le( that: box->A) : Bool val","title":"le"},{"location":"corral-semver-utils-ComparableMixin/#parameters_2","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ComparableMixin/#gt","text":"[Source] fun box gt( that: box->A) : Bool val","title":"gt"},{"location":"corral-semver-utils-ComparableMixin/#parameters_3","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ComparableMixin/#ge","text":"[Source] fun box ge( that: box->A) : Bool val","title":"ge"},{"location":"corral-semver-utils-ComparableMixin/#parameters_4","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ComparableMixin/#eq","text":"[Source] fun box eq( that: box->A) : Bool val","title":"eq"},{"location":"corral-semver-utils-ComparableMixin/#parameters_5","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ComparableMixin/#ne","text":"[Source] fun box ne( that: box->A) : Bool val","title":"ne"},{"location":"corral-semver-utils-ComparableMixin/#parameters_6","text":"that: box->A","title":"Parameters"},{"location":"corral-semver-utils-ComparableMixin/#returns_6","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-EmptyIterator/","text":"EmptyIterator[A: A] \u00b6 [Source] class ref EmptyIterator[A: A] is Iterator[A] ref Implements \u00b6 Iterator [A] ref Constructors \u00b6 create \u00b6 [Source] new iso create() : EmptyIterator[A] iso^ Returns \u00b6 EmptyIterator [A] iso^ Public Functions \u00b6 has_next \u00b6 [Source] fun ref has_next() : Bool val Returns \u00b6 Bool val next \u00b6 [Source] fun ref next() : A ? Returns \u00b6 A ?","title":"class EmptyIterator"},{"location":"corral-semver-utils-EmptyIterator/#emptyiteratora-a","text":"[Source] class ref EmptyIterator[A: A] is Iterator[A] ref","title":"EmptyIterator[A: A]"},{"location":"corral-semver-utils-EmptyIterator/#implements","text":"Iterator [A] ref","title":"Implements"},{"location":"corral-semver-utils-EmptyIterator/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-utils-EmptyIterator/#create","text":"[Source] new iso create() : EmptyIterator[A] iso^","title":"create"},{"location":"corral-semver-utils-EmptyIterator/#returns","text":"EmptyIterator [A] iso^","title":"Returns"},{"location":"corral-semver-utils-EmptyIterator/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-utils-EmptyIterator/#has_next","text":"[Source] fun ref has_next() : Bool val","title":"has_next"},{"location":"corral-semver-utils-EmptyIterator/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-EmptyIterator/#next","text":"[Source] fun ref next() : A ?","title":"next"},{"location":"corral-semver-utils-EmptyIterator/#returns_2","text":"A ?","title":"Returns"},{"location":"corral-semver-utils-Strings/","text":"Strings \u00b6 [Source] primitive val Strings Constructors \u00b6 create \u00b6 [Source] new val create() : Strings val^ Returns \u00b6 Strings val^ Public Functions \u00b6 contains_only \u00b6 [Source] fun box contains_only( s: String val, bytes: HashSet[U8 val, HashEq[U8 val] val] ref) : Bool val Parameters \u00b6 s: String val bytes: HashSet [ U8 val, HashEq [ U8 val] val] ref Returns \u00b6 Bool val eq \u00b6 [Source] fun box eq( that: Strings val) : Bool val Parameters \u00b6 that: Strings val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Strings val) : Bool val Parameters \u00b6 that: Strings val Returns \u00b6 Bool val","title":"primitive Strings"},{"location":"corral-semver-utils-Strings/#strings","text":"[Source] primitive val Strings","title":"Strings"},{"location":"corral-semver-utils-Strings/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-utils-Strings/#create","text":"[Source] new val create() : Strings val^","title":"create"},{"location":"corral-semver-utils-Strings/#returns","text":"Strings val^","title":"Returns"},{"location":"corral-semver-utils-Strings/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-utils-Strings/#contains_only","text":"[Source] fun box contains_only( s: String val, bytes: HashSet[U8 val, HashEq[U8 val] val] ref) : Bool val","title":"contains_only"},{"location":"corral-semver-utils-Strings/#parameters","text":"s: String val bytes: HashSet [ U8 val, HashEq [ U8 val] val] ref","title":"Parameters"},{"location":"corral-semver-utils-Strings/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-Strings/#eq","text":"[Source] fun box eq( that: Strings val) : Bool val","title":"eq"},{"location":"corral-semver-utils-Strings/#parameters_1","text":"that: Strings val","title":"Parameters"},{"location":"corral-semver-utils-Strings/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-Strings/#ne","text":"[Source] fun box ne( that: Strings val) : Bool val","title":"ne"},{"location":"corral-semver-utils-Strings/#parameters_2","text":"that: Strings val","title":"Parameters"},{"location":"corral-semver-utils-Strings/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ZipIterator/","text":"ZipIterator[A: A, B: B] \u00b6 [Source] class ref ZipIterator[A: A, B: B] is Iterator[(A , B)] ref Implements \u00b6 Iterator [(A , B)] ref Constructors \u00b6 create \u00b6 [Source] new ref create( ia': Iterator[A] ref, ib': Iterator[B] ref) : ZipIterator[A, B] ref^ Parameters \u00b6 ia': Iterator [A] ref ib': Iterator [B] ref Returns \u00b6 ZipIterator [A, B] ref^ Public fields \u00b6 let ia: Iterator [A] ref \u00b6 [Source] let ib: Iterator [B] ref \u00b6 [Source] Public Functions \u00b6 has_next \u00b6 [Source] fun ref has_next() : Bool val Returns \u00b6 Bool val next \u00b6 [Source] fun ref next() : (A , B) ? Returns \u00b6 (A , B) ?","title":"class ZipIterator"},{"location":"corral-semver-utils-ZipIterator/#zipiteratora-a-b-b","text":"[Source] class ref ZipIterator[A: A, B: B] is Iterator[(A , B)] ref","title":"ZipIterator[A: A, B: B]"},{"location":"corral-semver-utils-ZipIterator/#implements","text":"Iterator [(A , B)] ref","title":"Implements"},{"location":"corral-semver-utils-ZipIterator/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-utils-ZipIterator/#create","text":"[Source] new ref create( ia': Iterator[A] ref, ib': Iterator[B] ref) : ZipIterator[A, B] ref^","title":"create"},{"location":"corral-semver-utils-ZipIterator/#parameters","text":"ia': Iterator [A] ref ib': Iterator [B] ref","title":"Parameters"},{"location":"corral-semver-utils-ZipIterator/#returns","text":"ZipIterator [A, B] ref^","title":"Returns"},{"location":"corral-semver-utils-ZipIterator/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-utils-ZipIterator/#let-ia-iteratora-ref","text":"[Source]","title":"let ia: Iterator[A] ref"},{"location":"corral-semver-utils-ZipIterator/#let-ib-iteratorb-ref","text":"[Source]","title":"let ib: Iterator[B] ref"},{"location":"corral-semver-utils-ZipIterator/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-utils-ZipIterator/#has_next","text":"[Source] fun ref has_next() : Bool val","title":"has_next"},{"location":"corral-semver-utils-ZipIterator/#returns_1","text":"Bool val","title":"Returns"},{"location":"corral-semver-utils-ZipIterator/#next","text":"[Source] fun ref next() : (A , B) ?","title":"next"},{"location":"corral-semver-utils-ZipIterator/#returns_2","text":"(A , B) ?","title":"Returns"},{"location":"corral-semver-version--index/","text":"No package doc string provided for corral/semver/version. Public Types \u00b6 class Version primitive ValidateFields type PreReleaseField primitive ParseVersion primitive Consts primitive CompareVersions","title":"Package"},{"location":"corral-semver-version--index/#public-types","text":"class Version primitive ValidateFields type PreReleaseField primitive ParseVersion primitive Consts primitive CompareVersions","title":"Public Types"},{"location":"corral-semver-version-CompareVersions/","text":"CompareVersions \u00b6 [Source] primitive val CompareVersions Constructors \u00b6 create \u00b6 [Source] new val create() : CompareVersions val^ Returns \u00b6 CompareVersions val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( v1: Version box, v2: Version box) : (Less val | Equal val | Greater val) Parameters \u00b6 v1: Version box v2: Version box Returns \u00b6 ( Less val | Equal val | Greater val) eq \u00b6 [Source] fun box eq( that: CompareVersions val) : Bool val Parameters \u00b6 that: CompareVersions val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: CompareVersions val) : Bool val Parameters \u00b6 that: CompareVersions val Returns \u00b6 Bool val","title":"primitive CompareVersions"},{"location":"corral-semver-version-CompareVersions/#compareversions","text":"[Source] primitive val CompareVersions","title":"CompareVersions"},{"location":"corral-semver-version-CompareVersions/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-version-CompareVersions/#create","text":"[Source] new val create() : CompareVersions val^","title":"create"},{"location":"corral-semver-version-CompareVersions/#returns","text":"CompareVersions val^","title":"Returns"},{"location":"corral-semver-version-CompareVersions/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-version-CompareVersions/#apply","text":"[Source] fun box apply( v1: Version box, v2: Version box) : (Less val | Equal val | Greater val)","title":"apply"},{"location":"corral-semver-version-CompareVersions/#parameters","text":"v1: Version box v2: Version box","title":"Parameters"},{"location":"corral-semver-version-CompareVersions/#returns_1","text":"( Less val | Equal val | Greater val)","title":"Returns"},{"location":"corral-semver-version-CompareVersions/#eq","text":"[Source] fun box eq( that: CompareVersions val) : Bool val","title":"eq"},{"location":"corral-semver-version-CompareVersions/#parameters_1","text":"that: CompareVersions val","title":"Parameters"},{"location":"corral-semver-version-CompareVersions/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-CompareVersions/#ne","text":"[Source] fun box ne( that: CompareVersions val) : Bool val","title":"ne"},{"location":"corral-semver-version-CompareVersions/#parameters_2","text":"that: CompareVersions val","title":"Parameters"},{"location":"corral-semver-version-CompareVersions/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Consts/","text":"Consts \u00b6 [Source] primitive val Consts Constructors \u00b6 create \u00b6 [Source] new val create() : Consts val^ Returns \u00b6 Consts val^ Public Functions \u00b6 alphas \u00b6 [Source] fun box alphas() : HashSet[U8 val, HashEq[U8 val] val] ref Returns \u00b6 HashSet [ U8 val, HashEq [ U8 val] val] ref nums \u00b6 [Source] fun box nums() : HashSet[U8 val, HashEq[U8 val] val] ref Returns \u00b6 HashSet [ U8 val, HashEq [ U8 val] val] ref alphanums \u00b6 [Source] fun box alphanums() : HashSet[U8 val, HashEq[U8 val] val] ref Returns \u00b6 HashSet [ U8 val, HashEq [ U8 val] val] ref eq \u00b6 [Source] fun box eq( that: Consts val) : Bool val Parameters \u00b6 that: Consts val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Consts val) : Bool val Parameters \u00b6 that: Consts val Returns \u00b6 Bool val","title":"primitive Consts"},{"location":"corral-semver-version-Consts/#consts","text":"[Source] primitive val Consts","title":"Consts"},{"location":"corral-semver-version-Consts/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-version-Consts/#create","text":"[Source] new val create() : Consts val^","title":"create"},{"location":"corral-semver-version-Consts/#returns","text":"Consts val^","title":"Returns"},{"location":"corral-semver-version-Consts/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-version-Consts/#alphas","text":"[Source] fun box alphas() : HashSet[U8 val, HashEq[U8 val] val] ref","title":"alphas"},{"location":"corral-semver-version-Consts/#returns_1","text":"HashSet [ U8 val, HashEq [ U8 val] val] ref","title":"Returns"},{"location":"corral-semver-version-Consts/#nums","text":"[Source] fun box nums() : HashSet[U8 val, HashEq[U8 val] val] ref","title":"nums"},{"location":"corral-semver-version-Consts/#returns_2","text":"HashSet [ U8 val, HashEq [ U8 val] val] ref","title":"Returns"},{"location":"corral-semver-version-Consts/#alphanums","text":"[Source] fun box alphanums() : HashSet[U8 val, HashEq[U8 val] val] ref","title":"alphanums"},{"location":"corral-semver-version-Consts/#returns_3","text":"HashSet [ U8 val, HashEq [ U8 val] val] ref","title":"Returns"},{"location":"corral-semver-version-Consts/#eq","text":"[Source] fun box eq( that: Consts val) : Bool val","title":"eq"},{"location":"corral-semver-version-Consts/#parameters","text":"that: Consts val","title":"Parameters"},{"location":"corral-semver-version-Consts/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Consts/#ne","text":"[Source] fun box ne( that: Consts val) : Bool val","title":"ne"},{"location":"corral-semver-version-Consts/#parameters_1","text":"that: Consts val","title":"Parameters"},{"location":"corral-semver-version-Consts/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-ParseVersion/","text":"ParseVersion \u00b6 [Source] primitive val ParseVersion Constructors \u00b6 create \u00b6 [Source] new val create() : ParseVersion val^ Returns \u00b6 ParseVersion val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( s: String val) : Version ref Parameters \u00b6 s: String val Returns \u00b6 Version ref eq \u00b6 [Source] fun box eq( that: ParseVersion val) : Bool val Parameters \u00b6 that: ParseVersion val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ParseVersion val) : Bool val Parameters \u00b6 that: ParseVersion val Returns \u00b6 Bool val","title":"primitive ParseVersion"},{"location":"corral-semver-version-ParseVersion/#parseversion","text":"[Source] primitive val ParseVersion","title":"ParseVersion"},{"location":"corral-semver-version-ParseVersion/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-version-ParseVersion/#create","text":"[Source] new val create() : ParseVersion val^","title":"create"},{"location":"corral-semver-version-ParseVersion/#returns","text":"ParseVersion val^","title":"Returns"},{"location":"corral-semver-version-ParseVersion/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-version-ParseVersion/#apply","text":"[Source] fun box apply( s: String val) : Version ref","title":"apply"},{"location":"corral-semver-version-ParseVersion/#parameters","text":"s: String val","title":"Parameters"},{"location":"corral-semver-version-ParseVersion/#returns_1","text":"Version ref","title":"Returns"},{"location":"corral-semver-version-ParseVersion/#eq","text":"[Source] fun box eq( that: ParseVersion val) : Bool val","title":"eq"},{"location":"corral-semver-version-ParseVersion/#parameters_1","text":"that: ParseVersion val","title":"Parameters"},{"location":"corral-semver-version-ParseVersion/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-ParseVersion/#ne","text":"[Source] fun box ne( that: ParseVersion val) : Bool val","title":"ne"},{"location":"corral-semver-version-ParseVersion/#parameters_2","text":"that: ParseVersion val","title":"Parameters"},{"location":"corral-semver-version-ParseVersion/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-PreReleaseField/","text":"PreReleaseField \u00b6 [Source] type PreReleaseField is (String val | U64 val) Type Alias For \u00b6 ( String val | U64 val)","title":"type PreReleaseField"},{"location":"corral-semver-version-PreReleaseField/#prereleasefield","text":"[Source] type PreReleaseField is (String val | U64 val)","title":"PreReleaseField"},{"location":"corral-semver-version-PreReleaseField/#type-alias-for","text":"( String val | U64 val)","title":"Type Alias For"},{"location":"corral-semver-version-ValidateFields/","text":"ValidateFields \u00b6 [Source] primitive val ValidateFields Constructors \u00b6 create \u00b6 [Source] new val create() : ValidateFields val^ Returns \u00b6 ValidateFields val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( pr: Array[(String val | U64 val)] ref, build: Array[String val] ref) : Array[String val] ref Parameters \u00b6 pr: Array [( String val | U64 val)] ref build: Array [ String val] ref Returns \u00b6 Array [ String val] ref eq \u00b6 [Source] fun box eq( that: ValidateFields val) : Bool val Parameters \u00b6 that: ValidateFields val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ValidateFields val) : Bool val Parameters \u00b6 that: ValidateFields val Returns \u00b6 Bool val","title":"primitive ValidateFields"},{"location":"corral-semver-version-ValidateFields/#validatefields","text":"[Source] primitive val ValidateFields","title":"ValidateFields"},{"location":"corral-semver-version-ValidateFields/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-version-ValidateFields/#create","text":"[Source] new val create() : ValidateFields val^","title":"create"},{"location":"corral-semver-version-ValidateFields/#returns","text":"ValidateFields val^","title":"Returns"},{"location":"corral-semver-version-ValidateFields/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-version-ValidateFields/#apply","text":"[Source] fun box apply( pr: Array[(String val | U64 val)] ref, build: Array[String val] ref) : Array[String val] ref","title":"apply"},{"location":"corral-semver-version-ValidateFields/#parameters","text":"pr: Array [( String val | U64 val)] ref build: Array [ String val] ref","title":"Parameters"},{"location":"corral-semver-version-ValidateFields/#returns_1","text":"Array [ String val] ref","title":"Returns"},{"location":"corral-semver-version-ValidateFields/#eq","text":"[Source] fun box eq( that: ValidateFields val) : Bool val","title":"eq"},{"location":"corral-semver-version-ValidateFields/#parameters_1","text":"that: ValidateFields val","title":"Parameters"},{"location":"corral-semver-version-ValidateFields/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-ValidateFields/#ne","text":"[Source] fun box ne( that: ValidateFields val) : Bool val","title":"ne"},{"location":"corral-semver-version-ValidateFields/#parameters_2","text":"that: ValidateFields val","title":"Parameters"},{"location":"corral-semver-version-ValidateFields/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/","text":"Version \u00b6 [Source] class ref Version is ComparableMixin[Version ref] ref, Hashable ref, Stringable box Implements \u00b6 ComparableMixin [ Version ref] ref Hashable ref Stringable box Constructors \u00b6 create \u00b6 [Source] new ref create( major': U64 val, minor': U64 val = 0, patch': U64 val = 0, pr_fields': Array[(String val | U64 val)] ref = qualify, build_fields': Array[String val] ref = qualify) : Version ref^ Parameters \u00b6 major': U64 val minor': U64 val = 0 patch': U64 val = 0 pr_fields': Array [( String val | U64 val)] ref = qualify build_fields': Array [ String val] ref = qualify Returns \u00b6 Version ref^ Public fields \u00b6 var major: U64 val \u00b6 [Source] var minor: U64 val \u00b6 [Source] var patch: U64 val \u00b6 [Source] let pr_fields: Array [( String val | U64 val)] ref \u00b6 [Source] let build_fields: Array [ String val] ref \u00b6 [Source] let errors: Array [ String val] ref \u00b6 [Source] Public Functions \u00b6 compare \u00b6 [Source] fun box compare( that: Version box) : (Less val | Equal val | Greater val) Parameters \u00b6 that: Version box Returns \u00b6 ( Less val | Equal val | Greater val) hash \u00b6 [Source] fun box hash() : USize val Returns \u00b6 USize val is_valid \u00b6 [Source] fun box is_valid() : Bool val Returns \u00b6 Bool val string \u00b6 [Source] fun box string() : String iso^ Returns \u00b6 String iso^ major_minor_patch_string \u00b6 [Source] fun box major_minor_patch_string() : String val Returns \u00b6 String val pre_release_string \u00b6 [Source] fun box pre_release_string() : String val Returns \u00b6 String val build_string \u00b6 [Source] fun box build_string() : String val Returns \u00b6 String val lt \u00b6 [Source] fun box lt( that: Version box) : Bool val Parameters \u00b6 that: Version box Returns \u00b6 Bool val le \u00b6 [Source] fun box le( that: Version box) : Bool val Parameters \u00b6 that: Version box Returns \u00b6 Bool val gt \u00b6 [Source] fun box gt( that: Version box) : Bool val Parameters \u00b6 that: Version box Returns \u00b6 Bool val ge \u00b6 [Source] fun box ge( that: Version box) : Bool val Parameters \u00b6 that: Version box Returns \u00b6 Bool val eq \u00b6 [Source] fun box eq( that: Version box) : Bool val Parameters \u00b6 that: Version box Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Version box) : Bool val Parameters \u00b6 that: Version box Returns \u00b6 Bool val","title":"class Version"},{"location":"corral-semver-version-Version/#version","text":"[Source] class ref Version is ComparableMixin[Version ref] ref, Hashable ref, Stringable box","title":"Version"},{"location":"corral-semver-version-Version/#implements","text":"ComparableMixin [ Version ref] ref Hashable ref Stringable box","title":"Implements"},{"location":"corral-semver-version-Version/#constructors","text":"","title":"Constructors"},{"location":"corral-semver-version-Version/#create","text":"[Source] new ref create( major': U64 val, minor': U64 val = 0, patch': U64 val = 0, pr_fields': Array[(String val | U64 val)] ref = qualify, build_fields': Array[String val] ref = qualify) : Version ref^","title":"create"},{"location":"corral-semver-version-Version/#parameters","text":"major': U64 val minor': U64 val = 0 patch': U64 val = 0 pr_fields': Array [( String val | U64 val)] ref = qualify build_fields': Array [ String val] ref = qualify","title":"Parameters"},{"location":"corral-semver-version-Version/#returns","text":"Version ref^","title":"Returns"},{"location":"corral-semver-version-Version/#public-fields","text":"","title":"Public fields"},{"location":"corral-semver-version-Version/#var-major-u64-val","text":"[Source]","title":"var major: U64 val"},{"location":"corral-semver-version-Version/#var-minor-u64-val","text":"[Source]","title":"var minor: U64 val"},{"location":"corral-semver-version-Version/#var-patch-u64-val","text":"[Source]","title":"var patch: U64 val"},{"location":"corral-semver-version-Version/#let-pr_fields-arraystring-val-u64-val-ref","text":"[Source]","title":"let pr_fields: Array[(String val | U64 val)] ref"},{"location":"corral-semver-version-Version/#let-build_fields-arraystring-val-ref","text":"[Source]","title":"let build_fields: Array[String val] ref"},{"location":"corral-semver-version-Version/#let-errors-arraystring-val-ref","text":"[Source]","title":"let errors: Array[String val] ref"},{"location":"corral-semver-version-Version/#public-functions","text":"","title":"Public Functions"},{"location":"corral-semver-version-Version/#compare","text":"[Source] fun box compare( that: Version box) : (Less val | Equal val | Greater val)","title":"compare"},{"location":"corral-semver-version-Version/#parameters_1","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_1","text":"( Less val | Equal val | Greater val)","title":"Returns"},{"location":"corral-semver-version-Version/#hash","text":"[Source] fun box hash() : USize val","title":"hash"},{"location":"corral-semver-version-Version/#returns_2","text":"USize val","title":"Returns"},{"location":"corral-semver-version-Version/#is_valid","text":"[Source] fun box is_valid() : Bool val","title":"is_valid"},{"location":"corral-semver-version-Version/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/#string","text":"[Source] fun box string() : String iso^","title":"string"},{"location":"corral-semver-version-Version/#returns_4","text":"String iso^","title":"Returns"},{"location":"corral-semver-version-Version/#major_minor_patch_string","text":"[Source] fun box major_minor_patch_string() : String val","title":"major_minor_patch_string"},{"location":"corral-semver-version-Version/#returns_5","text":"String val","title":"Returns"},{"location":"corral-semver-version-Version/#pre_release_string","text":"[Source] fun box pre_release_string() : String val","title":"pre_release_string"},{"location":"corral-semver-version-Version/#returns_6","text":"String val","title":"Returns"},{"location":"corral-semver-version-Version/#build_string","text":"[Source] fun box build_string() : String val","title":"build_string"},{"location":"corral-semver-version-Version/#returns_7","text":"String val","title":"Returns"},{"location":"corral-semver-version-Version/#lt","text":"[Source] fun box lt( that: Version box) : Bool val","title":"lt"},{"location":"corral-semver-version-Version/#parameters_2","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_8","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/#le","text":"[Source] fun box le( that: Version box) : Bool val","title":"le"},{"location":"corral-semver-version-Version/#parameters_3","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_9","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/#gt","text":"[Source] fun box gt( that: Version box) : Bool val","title":"gt"},{"location":"corral-semver-version-Version/#parameters_4","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_10","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/#ge","text":"[Source] fun box ge( that: Version box) : Bool val","title":"ge"},{"location":"corral-semver-version-Version/#parameters_5","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_11","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/#eq","text":"[Source] fun box eq( that: Version box) : Bool val","title":"eq"},{"location":"corral-semver-version-Version/#parameters_6","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_12","text":"Bool val","title":"Returns"},{"location":"corral-semver-version-Version/#ne","text":"[Source] fun box ne( that: Version box) : Bool val","title":"ne"},{"location":"corral-semver-version-Version/#parameters_7","text":"that: Version box","title":"Parameters"},{"location":"corral-semver-version-Version/#returns_13","text":"Bool val","title":"Returns"},{"location":"corral-util--index/","text":"No package doc string provided for corral/util. Public Types \u00b6 primitive DebugLevel primitive SimpleLogFormatter primitive Copy class Program class Action class ActionResult primitive Runner","title":"Package"},{"location":"corral-util--index/#public-types","text":"primitive DebugLevel primitive SimpleLogFormatter primitive Copy class Program class Action class ActionResult primitive Runner","title":"Public Types"},{"location":"corral-util-Action/","text":"Action \u00b6 [Source] An Action encapsulates one specific executable action with a Program, cli args and env vars. class val Action Constructors \u00b6 create \u00b6 [Source] new val create( prog': Program val, args': Array[String val] val, vars': Array[String val] val = recover, cwd': (FilePath val | None val) = reference) : Action val^ Parameters \u00b6 prog': Program val args': Array [ String val] val vars': Array [ String val] val = recover cwd': ( FilePath val | None val) = reference Returns \u00b6 Action val^ Public fields \u00b6 let prog: Program val \u00b6 [Source] let args: Array [ String val] val \u00b6 [Source] let vars: Array [ String val] val \u00b6 [Source] let cwd: ( FilePath val | None val) \u00b6 [Source]","title":"class Action"},{"location":"corral-util-Action/#action","text":"[Source] An Action encapsulates one specific executable action with a Program, cli args and env vars. class val Action","title":"Action"},{"location":"corral-util-Action/#constructors","text":"","title":"Constructors"},{"location":"corral-util-Action/#create","text":"[Source] new val create( prog': Program val, args': Array[String val] val, vars': Array[String val] val = recover, cwd': (FilePath val | None val) = reference) : Action val^","title":"create"},{"location":"corral-util-Action/#parameters","text":"prog': Program val args': Array [ String val] val vars': Array [ String val] val = recover cwd': ( FilePath val | None val) = reference","title":"Parameters"},{"location":"corral-util-Action/#returns","text":"Action val^","title":"Returns"},{"location":"corral-util-Action/#public-fields","text":"","title":"Public fields"},{"location":"corral-util-Action/#let-prog-program-val","text":"[Source]","title":"let prog: Program val"},{"location":"corral-util-Action/#let-args-arraystring-val-val","text":"[Source]","title":"let args: Array[String val] val"},{"location":"corral-util-Action/#let-vars-arraystring-val-val","text":"[Source]","title":"let vars: Array[String val] val"},{"location":"corral-util-Action/#let-cwd-filepath-val-none-val","text":"[Source]","title":"let cwd: (FilePath val | None val)"},{"location":"corral-util-ActionResult/","text":"ActionResult \u00b6 [Source] The results of an Action which includes its exit code, out and err streams as Strings, and and error message if the Action failed. class val ActionResult Constructors \u00b6 ok \u00b6 [Source] new val ok( exit_status': (Exited val | Signaled val), stdout': String val, stderr': String val) : ActionResult val^ Parameters \u00b6 exit_status': ( Exited val | Signaled val) stdout': String val stderr': String val Returns \u00b6 ActionResult val^ fail \u00b6 [Source] new val fail( errmsg': String val, exit_status': (Exited val | Signaled val) = call) : ActionResult val^ Parameters \u00b6 errmsg': String val exit_status': ( Exited val | Signaled val) = call Returns \u00b6 ActionResult val^ Public fields \u00b6 let exit_status: ( Exited val | Signaled val) \u00b6 [Source] let stdout: String val \u00b6 [Source] let stderr: String val \u00b6 [Source] let errmsg: String val \u00b6 [Source] Public Functions \u00b6 exit_code \u00b6 [Source] fun val exit_code() : I32 val Returns \u00b6 I32 val print_to \u00b6 [Source] fun val print_to( out: OutStream tag) : None val Parameters \u00b6 out: OutStream tag Returns \u00b6 None val successful \u00b6 [Source] fun box successful() : Bool val Returns \u00b6 Bool val","title":"class ActionResult"},{"location":"corral-util-ActionResult/#actionresult","text":"[Source] The results of an Action which includes its exit code, out and err streams as Strings, and and error message if the Action failed. class val ActionResult","title":"ActionResult"},{"location":"corral-util-ActionResult/#constructors","text":"","title":"Constructors"},{"location":"corral-util-ActionResult/#ok","text":"[Source] new val ok( exit_status': (Exited val | Signaled val), stdout': String val, stderr': String val) : ActionResult val^","title":"ok"},{"location":"corral-util-ActionResult/#parameters","text":"exit_status': ( Exited val | Signaled val) stdout': String val stderr': String val","title":"Parameters"},{"location":"corral-util-ActionResult/#returns","text":"ActionResult val^","title":"Returns"},{"location":"corral-util-ActionResult/#fail","text":"[Source] new val fail( errmsg': String val, exit_status': (Exited val | Signaled val) = call) : ActionResult val^","title":"fail"},{"location":"corral-util-ActionResult/#parameters_1","text":"errmsg': String val exit_status': ( Exited val | Signaled val) = call","title":"Parameters"},{"location":"corral-util-ActionResult/#returns_1","text":"ActionResult val^","title":"Returns"},{"location":"corral-util-ActionResult/#public-fields","text":"","title":"Public fields"},{"location":"corral-util-ActionResult/#let-exit_status-exited-val-signaled-val","text":"[Source]","title":"let exit_status: (Exited val | Signaled val)"},{"location":"corral-util-ActionResult/#let-stdout-string-val","text":"[Source]","title":"let stdout: String val"},{"location":"corral-util-ActionResult/#let-stderr-string-val","text":"[Source]","title":"let stderr: String val"},{"location":"corral-util-ActionResult/#let-errmsg-string-val","text":"[Source]","title":"let errmsg: String val"},{"location":"corral-util-ActionResult/#public-functions","text":"","title":"Public Functions"},{"location":"corral-util-ActionResult/#exit_code","text":"[Source] fun val exit_code() : I32 val","title":"exit_code"},{"location":"corral-util-ActionResult/#returns_2","text":"I32 val","title":"Returns"},{"location":"corral-util-ActionResult/#print_to","text":"[Source] fun val print_to( out: OutStream tag) : None val","title":"print_to"},{"location":"corral-util-ActionResult/#parameters_2","text":"out: OutStream tag","title":"Parameters"},{"location":"corral-util-ActionResult/#returns_3","text":"None val","title":"Returns"},{"location":"corral-util-ActionResult/#successful","text":"[Source] fun box successful() : Bool val","title":"successful"},{"location":"corral-util-ActionResult/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-util-Copy/","text":"Copy \u00b6 [Source] primitive val Copy Constructors \u00b6 create \u00b6 [Source] new val create() : Copy val^ Returns \u00b6 Copy val^ Public Functions \u00b6 tree \u00b6 [Source] Copy the dir_name tree from from_root to under to_root . fun box tree( from_root: FilePath val, to_root: FilePath val, dir_name: String val) : None val ? Parameters \u00b6 from_root: FilePath val to_root: FilePath val dir_name: String val Returns \u00b6 None val ? file \u00b6 [Source] fun box file( from_path: FilePath val, to_path: FilePath val) : (FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val) Parameters \u00b6 from_path: FilePath val to_path: FilePath val Returns \u00b6 ( FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val) eq \u00b6 [Source] fun box eq( that: Copy val) : Bool val Parameters \u00b6 that: Copy val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Copy val) : Bool val Parameters \u00b6 that: Copy val Returns \u00b6 Bool val","title":"primitive Copy"},{"location":"corral-util-Copy/#copy","text":"[Source] primitive val Copy","title":"Copy"},{"location":"corral-util-Copy/#constructors","text":"","title":"Constructors"},{"location":"corral-util-Copy/#create","text":"[Source] new val create() : Copy val^","title":"create"},{"location":"corral-util-Copy/#returns","text":"Copy val^","title":"Returns"},{"location":"corral-util-Copy/#public-functions","text":"","title":"Public Functions"},{"location":"corral-util-Copy/#tree","text":"[Source] Copy the dir_name tree from from_root to under to_root . fun box tree( from_root: FilePath val, to_root: FilePath val, dir_name: String val) : None val ?","title":"tree"},{"location":"corral-util-Copy/#parameters","text":"from_root: FilePath val to_root: FilePath val dir_name: String val","title":"Parameters"},{"location":"corral-util-Copy/#returns_1","text":"None val ?","title":"Returns"},{"location":"corral-util-Copy/#file","text":"[Source] fun box file( from_path: FilePath val, to_path: FilePath val) : (FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val)","title":"file"},{"location":"corral-util-Copy/#parameters_1","text":"from_path: FilePath val to_path: FilePath val","title":"Parameters"},{"location":"corral-util-Copy/#returns_2","text":"( FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val)","title":"Returns"},{"location":"corral-util-Copy/#eq","text":"[Source] fun box eq( that: Copy val) : Bool val","title":"eq"},{"location":"corral-util-Copy/#parameters_2","text":"that: Copy val","title":"Parameters"},{"location":"corral-util-Copy/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-util-Copy/#ne","text":"[Source] fun box ne( that: Copy val) : Bool val","title":"ne"},{"location":"corral-util-Copy/#parameters_3","text":"that: Copy val","title":"Parameters"},{"location":"corral-util-Copy/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-util-DebugLevel/","text":"DebugLevel \u00b6 [Source] primitive val DebugLevel Constructors \u00b6 create \u00b6 [Source] new val create() : DebugLevel val^ Returns \u00b6 DebugLevel val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( lvl: U64 val) : (Fine val | Info val | Warn val | Error val) Parameters \u00b6 lvl: U64 val Returns \u00b6 ( Fine val | Info val | Warn val | Error val) eq \u00b6 [Source] fun box eq( that: DebugLevel val) : Bool val Parameters \u00b6 that: DebugLevel val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: DebugLevel val) : Bool val Parameters \u00b6 that: DebugLevel val Returns \u00b6 Bool val","title":"primitive DebugLevel"},{"location":"corral-util-DebugLevel/#debuglevel","text":"[Source] primitive val DebugLevel","title":"DebugLevel"},{"location":"corral-util-DebugLevel/#constructors","text":"","title":"Constructors"},{"location":"corral-util-DebugLevel/#create","text":"[Source] new val create() : DebugLevel val^","title":"create"},{"location":"corral-util-DebugLevel/#returns","text":"DebugLevel val^","title":"Returns"},{"location":"corral-util-DebugLevel/#public-functions","text":"","title":"Public Functions"},{"location":"corral-util-DebugLevel/#apply","text":"[Source] fun box apply( lvl: U64 val) : (Fine val | Info val | Warn val | Error val)","title":"apply"},{"location":"corral-util-DebugLevel/#parameters","text":"lvl: U64 val","title":"Parameters"},{"location":"corral-util-DebugLevel/#returns_1","text":"( Fine val | Info val | Warn val | Error val)","title":"Returns"},{"location":"corral-util-DebugLevel/#eq","text":"[Source] fun box eq( that: DebugLevel val) : Bool val","title":"eq"},{"location":"corral-util-DebugLevel/#parameters_1","text":"that: DebugLevel val","title":"Parameters"},{"location":"corral-util-DebugLevel/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-util-DebugLevel/#ne","text":"[Source] fun box ne( that: DebugLevel val) : Bool val","title":"ne"},{"location":"corral-util-DebugLevel/#parameters_2","text":"that: DebugLevel val","title":"Parameters"},{"location":"corral-util-DebugLevel/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-util-Program/","text":"Program \u00b6 [Source] A Program encapsulates an executable program and authority to execute it. class val Program Constructors \u00b6 create \u00b6 [Source] new val create( env: Env val, name: String val) : Program val^ ? Parameters \u00b6 env: Env val name: String val Returns \u00b6 Program val^ ? Public fields \u00b6 let auth: AmbientAuth val \u00b6 [Source] let path: FilePath val \u00b6 [Source] Public Functions \u00b6 first_existing \u00b6 [Source] fun tag first_existing( auth': AmbientAuth val, binpath: String val, name: String val) : FilePath val ? Parameters \u00b6 auth': AmbientAuth val binpath: String val name: String val Returns \u00b6 FilePath val ?","title":"class Program"},{"location":"corral-util-Program/#program","text":"[Source] A Program encapsulates an executable program and authority to execute it. class val Program","title":"Program"},{"location":"corral-util-Program/#constructors","text":"","title":"Constructors"},{"location":"corral-util-Program/#create","text":"[Source] new val create( env: Env val, name: String val) : Program val^ ?","title":"create"},{"location":"corral-util-Program/#parameters","text":"env: Env val name: String val","title":"Parameters"},{"location":"corral-util-Program/#returns","text":"Program val^ ?","title":"Returns"},{"location":"corral-util-Program/#public-fields","text":"","title":"Public fields"},{"location":"corral-util-Program/#let-auth-ambientauth-val","text":"[Source]","title":"let auth: AmbientAuth val"},{"location":"corral-util-Program/#let-path-filepath-val","text":"[Source]","title":"let path: FilePath val"},{"location":"corral-util-Program/#public-functions","text":"","title":"Public Functions"},{"location":"corral-util-Program/#first_existing","text":"[Source] fun tag first_existing( auth': AmbientAuth val, binpath: String val, name: String val) : FilePath val ?","title":"first_existing"},{"location":"corral-util-Program/#parameters_1","text":"auth': AmbientAuth val binpath: String val name: String val","title":"Parameters"},{"location":"corral-util-Program/#returns_1","text":"FilePath val ?","title":"Returns"},{"location":"corral-util-Runner/","text":"Runner \u00b6 [Source] Run an Action using ProcessMonitor, and pass the resulting ActionResult to a given lambda. primitive val Runner Constructors \u00b6 create \u00b6 [Source] new val create() : Runner val^ Returns \u00b6 Runner val^ Public Functions \u00b6 run \u00b6 [Source] fun box run( action: Action val, result: {(ActionResult)} iso) : None val Parameters \u00b6 action: Action val result: {(ActionResult)} iso Returns \u00b6 None val eq \u00b6 [Source] fun box eq( that: Runner val) : Bool val Parameters \u00b6 that: Runner val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Runner val) : Bool val Parameters \u00b6 that: Runner val Returns \u00b6 Bool val","title":"primitive Runner"},{"location":"corral-util-Runner/#runner","text":"[Source] Run an Action using ProcessMonitor, and pass the resulting ActionResult to a given lambda. primitive val Runner","title":"Runner"},{"location":"corral-util-Runner/#constructors","text":"","title":"Constructors"},{"location":"corral-util-Runner/#create","text":"[Source] new val create() : Runner val^","title":"create"},{"location":"corral-util-Runner/#returns","text":"Runner val^","title":"Returns"},{"location":"corral-util-Runner/#public-functions","text":"","title":"Public Functions"},{"location":"corral-util-Runner/#run","text":"[Source] fun box run( action: Action val, result: {(ActionResult)} iso) : None val","title":"run"},{"location":"corral-util-Runner/#parameters","text":"action: Action val result: {(ActionResult)} iso","title":"Parameters"},{"location":"corral-util-Runner/#returns_1","text":"None val","title":"Returns"},{"location":"corral-util-Runner/#eq","text":"[Source] fun box eq( that: Runner val) : Bool val","title":"eq"},{"location":"corral-util-Runner/#parameters_1","text":"that: Runner val","title":"Parameters"},{"location":"corral-util-Runner/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-util-Runner/#ne","text":"[Source] fun box ne( that: Runner val) : Bool val","title":"ne"},{"location":"corral-util-Runner/#parameters_2","text":"that: Runner val","title":"Parameters"},{"location":"corral-util-Runner/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-util-SimpleLogFormatter/","text":"SimpleLogFormatter \u00b6 [Source] primitive val SimpleLogFormatter is LogFormatter val Implements \u00b6 LogFormatter val Constructors \u00b6 create \u00b6 [Source] new val create() : SimpleLogFormatter val^ Returns \u00b6 SimpleLogFormatter val^ Public Functions \u00b6 apply \u00b6 [Source] fun box apply( msg: String val, loc: SourceLoc val) : String val Parameters \u00b6 msg: String val loc: SourceLoc val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: SimpleLogFormatter val) : Bool val Parameters \u00b6 that: SimpleLogFormatter val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: SimpleLogFormatter val) : Bool val Parameters \u00b6 that: SimpleLogFormatter val Returns \u00b6 Bool val","title":"primitive SimpleLogFormatter"},{"location":"corral-util-SimpleLogFormatter/#simplelogformatter","text":"[Source] primitive val SimpleLogFormatter is LogFormatter val","title":"SimpleLogFormatter"},{"location":"corral-util-SimpleLogFormatter/#implements","text":"LogFormatter val","title":"Implements"},{"location":"corral-util-SimpleLogFormatter/#constructors","text":"","title":"Constructors"},{"location":"corral-util-SimpleLogFormatter/#create","text":"[Source] new val create() : SimpleLogFormatter val^","title":"create"},{"location":"corral-util-SimpleLogFormatter/#returns","text":"SimpleLogFormatter val^","title":"Returns"},{"location":"corral-util-SimpleLogFormatter/#public-functions","text":"","title":"Public Functions"},{"location":"corral-util-SimpleLogFormatter/#apply","text":"[Source] fun box apply( msg: String val, loc: SourceLoc val) : String val","title":"apply"},{"location":"corral-util-SimpleLogFormatter/#parameters","text":"msg: String val loc: SourceLoc val","title":"Parameters"},{"location":"corral-util-SimpleLogFormatter/#returns_1","text":"String val","title":"Returns"},{"location":"corral-util-SimpleLogFormatter/#eq","text":"[Source] fun box eq( that: SimpleLogFormatter val) : Bool val","title":"eq"},{"location":"corral-util-SimpleLogFormatter/#parameters_1","text":"that: SimpleLogFormatter val","title":"Parameters"},{"location":"corral-util-SimpleLogFormatter/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-util-SimpleLogFormatter/#ne","text":"[Source] fun box ne( that: SimpleLogFormatter val) : Bool val","title":"ne"},{"location":"corral-util-SimpleLogFormatter/#parameters_2","text":"that: SimpleLogFormatter val","title":"Parameters"},{"location":"corral-util-SimpleLogFormatter/#returns_3","text":"Bool val","title":"Returns"},{"location":"corral-vcs--index/","text":"No package doc string provided for corral/vcs. Public Types \u00b6 interface VCSBuilder class CorralVCSBuilder class Repo interface VCS interface RepoOperation interface RepoOperationResultReceiver interface TagListReceiver class TagQueryPrinter primitive SvnVCS primitive NoneVCS class NoOperation class NoOperationRcv class NoReceiver primitive HgVCS class GitVCS class GitSyncRepo class GitQueryTags class GitCheckoutRepo primitive BzrVCS","title":"Package"},{"location":"corral-vcs--index/#public-types","text":"interface VCSBuilder class CorralVCSBuilder class Repo interface VCS interface RepoOperation interface RepoOperationResultReceiver interface TagListReceiver class TagQueryPrinter primitive SvnVCS primitive NoneVCS class NoOperation class NoOperationRcv class NoReceiver primitive HgVCS class GitVCS class GitSyncRepo class GitQueryTags class GitCheckoutRepo primitive BzrVCS","title":"Public Types"},{"location":"corral-vcs-BzrVCS/","text":"BzrVCS \u00b6 [Source] Placeholder for Bazaar VCS primitive val BzrVCS is VCS val Implements \u00b6 VCS val Constructors \u00b6 create \u00b6 [Source] new val create() : BzrVCS val^ Returns \u00b6 BzrVCS val^ Public Functions \u00b6 sync_op \u00b6 [Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val tag_query_op \u00b6 [Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val Returns \u00b6 RepoOperation val checkout_op \u00b6 [Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val eq \u00b6 [Source] fun box eq( that: BzrVCS val) : Bool val Parameters \u00b6 that: BzrVCS val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: BzrVCS val) : Bool val Parameters \u00b6 that: BzrVCS val Returns \u00b6 Bool val","title":"primitive BzrVCS"},{"location":"corral-vcs-BzrVCS/#bzrvcs","text":"[Source] Placeholder for Bazaar VCS primitive val BzrVCS is VCS val","title":"BzrVCS"},{"location":"corral-vcs-BzrVCS/#implements","text":"VCS val","title":"Implements"},{"location":"corral-vcs-BzrVCS/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-BzrVCS/#create","text":"[Source] new val create() : BzrVCS val^","title":"create"},{"location":"corral-vcs-BzrVCS/#returns","text":"BzrVCS val^","title":"Returns"},{"location":"corral-vcs-BzrVCS/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-BzrVCS/#sync_op","text":"[Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"sync_op"},{"location":"corral-vcs-BzrVCS/#parameters","text":"resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-BzrVCS/#returns_1","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-BzrVCS/#tag_query_op","text":"[Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val","title":"tag_query_op"},{"location":"corral-vcs-BzrVCS/#parameters_1","text":"resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-BzrVCS/#returns_2","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-BzrVCS/#checkout_op","text":"[Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"checkout_op"},{"location":"corral-vcs-BzrVCS/#parameters_2","text":"rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-BzrVCS/#returns_3","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-BzrVCS/#eq","text":"[Source] fun box eq( that: BzrVCS val) : Bool val","title":"eq"},{"location":"corral-vcs-BzrVCS/#parameters_3","text":"that: BzrVCS val","title":"Parameters"},{"location":"corral-vcs-BzrVCS/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-vcs-BzrVCS/#ne","text":"[Source] fun box ne( that: BzrVCS val) : Bool val","title":"ne"},{"location":"corral-vcs-BzrVCS/#parameters_4","text":"that: BzrVCS val","title":"Parameters"},{"location":"corral-vcs-BzrVCS/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-vcs-CorralVCSBuilder/","text":"CorralVCSBuilder \u00b6 [Source] class val CorralVCSBuilder Constructors \u00b6 create \u00b6 [Source] new val create( env: Env val) : CorralVCSBuilder val^ Parameters \u00b6 env: Env val Returns \u00b6 CorralVCSBuilder val^ Public Functions \u00b6 apply \u00b6 [Source] Returns a VCS instance for any given VCS by name. fun val apply( kind: String val) : VCS val ? Parameters \u00b6 kind: String val Returns \u00b6 VCS val ?","title":"class CorralVCSBuilder"},{"location":"corral-vcs-CorralVCSBuilder/#corralvcsbuilder","text":"[Source] class val CorralVCSBuilder","title":"CorralVCSBuilder"},{"location":"corral-vcs-CorralVCSBuilder/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-CorralVCSBuilder/#create","text":"[Source] new val create( env: Env val) : CorralVCSBuilder val^","title":"create"},{"location":"corral-vcs-CorralVCSBuilder/#parameters","text":"env: Env val","title":"Parameters"},{"location":"corral-vcs-CorralVCSBuilder/#returns","text":"CorralVCSBuilder val^","title":"Returns"},{"location":"corral-vcs-CorralVCSBuilder/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-CorralVCSBuilder/#apply","text":"[Source] Returns a VCS instance for any given VCS by name. fun val apply( kind: String val) : VCS val ?","title":"apply"},{"location":"corral-vcs-CorralVCSBuilder/#parameters_1","text":"kind: String val","title":"Parameters"},{"location":"corral-vcs-CorralVCSBuilder/#returns_1","text":"VCS val ?","title":"Returns"},{"location":"corral-vcs-GitCheckoutRepo/","text":"GitCheckoutRepo \u00b6 [Source] class val GitCheckoutRepo is RepoOperation val Implements \u00b6 RepoOperation val Constructors \u00b6 create \u00b6 [Source] new val create( git': GitVCS val, rev': String val, resultReceiver': RepoOperationResultReceiver tag, next': RepoOperation val) : GitCheckoutRepo val^ Parameters \u00b6 git': GitVCS val rev': String val resultReceiver': RepoOperationResultReceiver tag next': RepoOperation val Returns \u00b6 GitCheckoutRepo val^ Public fields \u00b6 let git: GitVCS val \u00b6 [Source] let rev: String val \u00b6 [Source] let next: RepoOperation val \u00b6 [Source] let resultReceiver: RepoOperationResultReceiver tag \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun val apply( repo: Repo val) : None val Parameters \u00b6 repo: Repo val Returns \u00b6 None val","title":"class GitCheckoutRepo"},{"location":"corral-vcs-GitCheckoutRepo/#gitcheckoutrepo","text":"[Source] class val GitCheckoutRepo is RepoOperation val","title":"GitCheckoutRepo"},{"location":"corral-vcs-GitCheckoutRepo/#implements","text":"RepoOperation val","title":"Implements"},{"location":"corral-vcs-GitCheckoutRepo/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-GitCheckoutRepo/#create","text":"[Source] new val create( git': GitVCS val, rev': String val, resultReceiver': RepoOperationResultReceiver tag, next': RepoOperation val) : GitCheckoutRepo val^","title":"create"},{"location":"corral-vcs-GitCheckoutRepo/#parameters","text":"git': GitVCS val rev': String val resultReceiver': RepoOperationResultReceiver tag next': RepoOperation val","title":"Parameters"},{"location":"corral-vcs-GitCheckoutRepo/#returns","text":"GitCheckoutRepo val^","title":"Returns"},{"location":"corral-vcs-GitCheckoutRepo/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-GitCheckoutRepo/#let-git-gitvcs-val","text":"[Source]","title":"let git: GitVCS val"},{"location":"corral-vcs-GitCheckoutRepo/#let-rev-string-val","text":"[Source]","title":"let rev: String val"},{"location":"corral-vcs-GitCheckoutRepo/#let-next-repooperation-val","text":"[Source]","title":"let next: RepoOperation val"},{"location":"corral-vcs-GitCheckoutRepo/#let-resultreceiver-repooperationresultreceiver-tag","text":"[Source]","title":"let resultReceiver: RepoOperationResultReceiver tag"},{"location":"corral-vcs-GitCheckoutRepo/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-GitCheckoutRepo/#apply","text":"[Source] fun val apply( repo: Repo val) : None val","title":"apply"},{"location":"corral-vcs-GitCheckoutRepo/#parameters_1","text":"repo: Repo val","title":"Parameters"},{"location":"corral-vcs-GitCheckoutRepo/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-GitQueryTags/","text":"GitQueryTags \u00b6 [Source] class val GitQueryTags is RepoOperation val Implements \u00b6 RepoOperation val Constructors \u00b6 create \u00b6 [Source] new val create( git': GitVCS val, resultReceiver': RepoOperationResultReceiver tag, next': TagListReceiver val) : GitQueryTags val^ Parameters \u00b6 git': GitVCS val resultReceiver': RepoOperationResultReceiver tag next': TagListReceiver val Returns \u00b6 GitQueryTags val^ Public fields \u00b6 let git: GitVCS val \u00b6 [Source] let next: TagListReceiver val \u00b6 [Source] let resultReceiver: RepoOperationResultReceiver tag \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun val apply( repo: Repo val) : None val Parameters \u00b6 repo: Repo val Returns \u00b6 None val parse_tags \u00b6 [Source] fun val parse_tags( stdout: String val) : Array[String val] iso^ Parameters \u00b6 stdout: String val Returns \u00b6 Array [ String val] iso^","title":"class GitQueryTags"},{"location":"corral-vcs-GitQueryTags/#gitquerytags","text":"[Source] class val GitQueryTags is RepoOperation val","title":"GitQueryTags"},{"location":"corral-vcs-GitQueryTags/#implements","text":"RepoOperation val","title":"Implements"},{"location":"corral-vcs-GitQueryTags/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-GitQueryTags/#create","text":"[Source] new val create( git': GitVCS val, resultReceiver': RepoOperationResultReceiver tag, next': TagListReceiver val) : GitQueryTags val^","title":"create"},{"location":"corral-vcs-GitQueryTags/#parameters","text":"git': GitVCS val resultReceiver': RepoOperationResultReceiver tag next': TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-GitQueryTags/#returns","text":"GitQueryTags val^","title":"Returns"},{"location":"corral-vcs-GitQueryTags/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-GitQueryTags/#let-git-gitvcs-val","text":"[Source]","title":"let git: GitVCS val"},{"location":"corral-vcs-GitQueryTags/#let-next-taglistreceiver-val","text":"[Source]","title":"let next: TagListReceiver val"},{"location":"corral-vcs-GitQueryTags/#let-resultreceiver-repooperationresultreceiver-tag","text":"[Source]","title":"let resultReceiver: RepoOperationResultReceiver tag"},{"location":"corral-vcs-GitQueryTags/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-GitQueryTags/#apply","text":"[Source] fun val apply( repo: Repo val) : None val","title":"apply"},{"location":"corral-vcs-GitQueryTags/#parameters_1","text":"repo: Repo val","title":"Parameters"},{"location":"corral-vcs-GitQueryTags/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-GitQueryTags/#parse_tags","text":"[Source] fun val parse_tags( stdout: String val) : Array[String val] iso^","title":"parse_tags"},{"location":"corral-vcs-GitQueryTags/#parameters_2","text":"stdout: String val","title":"Parameters"},{"location":"corral-vcs-GitQueryTags/#returns_2","text":"Array [ String val] iso^","title":"Returns"},{"location":"corral-vcs-GitSyncRepo/","text":"GitSyncRepo \u00b6 [Source] class val GitSyncRepo is RepoOperation val Implements \u00b6 RepoOperation val Constructors \u00b6 create \u00b6 [Source] new val create( git': GitVCS val, resultReceiver': RepoOperationResultReceiver tag, next': RepoOperation val) : GitSyncRepo val^ Parameters \u00b6 git': GitVCS val resultReceiver': RepoOperationResultReceiver tag next': RepoOperation val Returns \u00b6 GitSyncRepo val^ Public fields \u00b6 let git: GitVCS val \u00b6 [Source] let next: RepoOperation val \u00b6 [Source] let resultReceiver: RepoOperationResultReceiver tag \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun val apply( repo: Repo val) : None val Parameters \u00b6 repo: Repo val Returns \u00b6 None val","title":"class GitSyncRepo"},{"location":"corral-vcs-GitSyncRepo/#gitsyncrepo","text":"[Source] class val GitSyncRepo is RepoOperation val","title":"GitSyncRepo"},{"location":"corral-vcs-GitSyncRepo/#implements","text":"RepoOperation val","title":"Implements"},{"location":"corral-vcs-GitSyncRepo/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-GitSyncRepo/#create","text":"[Source] new val create( git': GitVCS val, resultReceiver': RepoOperationResultReceiver tag, next': RepoOperation val) : GitSyncRepo val^","title":"create"},{"location":"corral-vcs-GitSyncRepo/#parameters","text":"git': GitVCS val resultReceiver': RepoOperationResultReceiver tag next': RepoOperation val","title":"Parameters"},{"location":"corral-vcs-GitSyncRepo/#returns","text":"GitSyncRepo val^","title":"Returns"},{"location":"corral-vcs-GitSyncRepo/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-GitSyncRepo/#let-git-gitvcs-val","text":"[Source]","title":"let git: GitVCS val"},{"location":"corral-vcs-GitSyncRepo/#let-next-repooperation-val","text":"[Source]","title":"let next: RepoOperation val"},{"location":"corral-vcs-GitSyncRepo/#let-resultreceiver-repooperationresultreceiver-tag","text":"[Source]","title":"let resultReceiver: RepoOperationResultReceiver tag"},{"location":"corral-vcs-GitSyncRepo/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-GitSyncRepo/#apply","text":"[Source] fun val apply( repo: Repo val) : None val","title":"apply"},{"location":"corral-vcs-GitSyncRepo/#parameters_1","text":"repo: Repo val","title":"Parameters"},{"location":"corral-vcs-GitSyncRepo/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-GitVCS/","text":"GitVCS \u00b6 [Source] Git implementation of VCS class val GitVCS is VCS val Implements \u00b6 VCS val Constructors \u00b6 create \u00b6 [Source] new val create( env': Env val) : GitVCS val^ ? Parameters \u00b6 env': Env val Returns \u00b6 GitVCS val^ ? Public fields \u00b6 let env: Env val \u00b6 [Source] let prog: Program val \u00b6 [Source] Public Functions \u00b6 sync_op \u00b6 [Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val tag_query_op \u00b6 [Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val Returns \u00b6 RepoOperation val checkout_op \u00b6 [Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val","title":"class GitVCS"},{"location":"corral-vcs-GitVCS/#gitvcs","text":"[Source] Git implementation of VCS class val GitVCS is VCS val","title":"GitVCS"},{"location":"corral-vcs-GitVCS/#implements","text":"VCS val","title":"Implements"},{"location":"corral-vcs-GitVCS/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-GitVCS/#create","text":"[Source] new val create( env': Env val) : GitVCS val^ ?","title":"create"},{"location":"corral-vcs-GitVCS/#parameters","text":"env': Env val","title":"Parameters"},{"location":"corral-vcs-GitVCS/#returns","text":"GitVCS val^ ?","title":"Returns"},{"location":"corral-vcs-GitVCS/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-GitVCS/#let-env-env-val","text":"[Source]","title":"let env: Env val"},{"location":"corral-vcs-GitVCS/#let-prog-program-val","text":"[Source]","title":"let prog: Program val"},{"location":"corral-vcs-GitVCS/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-GitVCS/#sync_op","text":"[Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"sync_op"},{"location":"corral-vcs-GitVCS/#parameters_1","text":"resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-GitVCS/#returns_1","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-GitVCS/#tag_query_op","text":"[Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val","title":"tag_query_op"},{"location":"corral-vcs-GitVCS/#parameters_2","text":"resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-GitVCS/#returns_2","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-GitVCS/#checkout_op","text":"[Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"checkout_op"},{"location":"corral-vcs-GitVCS/#parameters_3","text":"rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-GitVCS/#returns_3","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-HgVCS/","text":"HgVCS \u00b6 [Source] Placeholder for Mercurial VCS primitive val HgVCS is VCS val Implements \u00b6 VCS val Constructors \u00b6 create \u00b6 [Source] new val create() : HgVCS val^ Returns \u00b6 HgVCS val^ Public Functions \u00b6 sync_op \u00b6 [Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val tag_query_op \u00b6 [Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val Returns \u00b6 RepoOperation val checkout_op \u00b6 [Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val eq \u00b6 [Source] fun box eq( that: HgVCS val) : Bool val Parameters \u00b6 that: HgVCS val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: HgVCS val) : Bool val Parameters \u00b6 that: HgVCS val Returns \u00b6 Bool val","title":"primitive HgVCS"},{"location":"corral-vcs-HgVCS/#hgvcs","text":"[Source] Placeholder for Mercurial VCS primitive val HgVCS is VCS val","title":"HgVCS"},{"location":"corral-vcs-HgVCS/#implements","text":"VCS val","title":"Implements"},{"location":"corral-vcs-HgVCS/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-HgVCS/#create","text":"[Source] new val create() : HgVCS val^","title":"create"},{"location":"corral-vcs-HgVCS/#returns","text":"HgVCS val^","title":"Returns"},{"location":"corral-vcs-HgVCS/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-HgVCS/#sync_op","text":"[Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"sync_op"},{"location":"corral-vcs-HgVCS/#parameters","text":"resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-HgVCS/#returns_1","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-HgVCS/#tag_query_op","text":"[Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val","title":"tag_query_op"},{"location":"corral-vcs-HgVCS/#parameters_1","text":"resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-HgVCS/#returns_2","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-HgVCS/#checkout_op","text":"[Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"checkout_op"},{"location":"corral-vcs-HgVCS/#parameters_2","text":"rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-HgVCS/#returns_3","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-HgVCS/#eq","text":"[Source] fun box eq( that: HgVCS val) : Bool val","title":"eq"},{"location":"corral-vcs-HgVCS/#parameters_3","text":"that: HgVCS val","title":"Parameters"},{"location":"corral-vcs-HgVCS/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-vcs-HgVCS/#ne","text":"[Source] fun box ne( that: HgVCS val) : Bool val","title":"ne"},{"location":"corral-vcs-HgVCS/#parameters_4","text":"that: HgVCS val","title":"Parameters"},{"location":"corral-vcs-HgVCS/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-vcs-NoOperation/","text":"NoOperation \u00b6 [Source] NoOperation is a no-op RepoOperation that chains to next RepoOperation. class val NoOperation is RepoOperation val Implements \u00b6 RepoOperation val Constructors \u00b6 create \u00b6 [Source] new val create( next': RepoOperation val) : NoOperation val^ Parameters \u00b6 next': RepoOperation val Returns \u00b6 NoOperation val^ Public fields \u00b6 let next: RepoOperation val \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun val apply( repo: Repo val) : None val Parameters \u00b6 repo: Repo val Returns \u00b6 None val","title":"class NoOperation"},{"location":"corral-vcs-NoOperation/#nooperation","text":"[Source] NoOperation is a no-op RepoOperation that chains to next RepoOperation. class val NoOperation is RepoOperation val","title":"NoOperation"},{"location":"corral-vcs-NoOperation/#implements","text":"RepoOperation val","title":"Implements"},{"location":"corral-vcs-NoOperation/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-NoOperation/#create","text":"[Source] new val create( next': RepoOperation val) : NoOperation val^","title":"create"},{"location":"corral-vcs-NoOperation/#parameters","text":"next': RepoOperation val","title":"Parameters"},{"location":"corral-vcs-NoOperation/#returns","text":"NoOperation val^","title":"Returns"},{"location":"corral-vcs-NoOperation/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-NoOperation/#let-next-repooperation-val","text":"[Source]","title":"let next: RepoOperation val"},{"location":"corral-vcs-NoOperation/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-NoOperation/#apply","text":"[Source] fun val apply( repo: Repo val) : None val","title":"apply"},{"location":"corral-vcs-NoOperation/#parameters_1","text":"repo: Repo val","title":"Parameters"},{"location":"corral-vcs-NoOperation/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-NoOperationRcv/","text":"NoOperationRcv \u00b6 [Source] NoOperationRcv is a no-op RepoOperation that chains to next TagListReceiver. class val NoOperationRcv is RepoOperation val Implements \u00b6 RepoOperation val Constructors \u00b6 create \u00b6 [Source] new val create( next': TagListReceiver val) : NoOperationRcv val^ Parameters \u00b6 next': TagListReceiver val Returns \u00b6 NoOperationRcv val^ Public fields \u00b6 let next: TagListReceiver val \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun box apply( repo: Repo val) : None val Parameters \u00b6 repo: Repo val Returns \u00b6 None val","title":"class NoOperationRcv"},{"location":"corral-vcs-NoOperationRcv/#nooperationrcv","text":"[Source] NoOperationRcv is a no-op RepoOperation that chains to next TagListReceiver. class val NoOperationRcv is RepoOperation val","title":"NoOperationRcv"},{"location":"corral-vcs-NoOperationRcv/#implements","text":"RepoOperation val","title":"Implements"},{"location":"corral-vcs-NoOperationRcv/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-NoOperationRcv/#create","text":"[Source] new val create( next': TagListReceiver val) : NoOperationRcv val^","title":"create"},{"location":"corral-vcs-NoOperationRcv/#parameters","text":"next': TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-NoOperationRcv/#returns","text":"NoOperationRcv val^","title":"Returns"},{"location":"corral-vcs-NoOperationRcv/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-NoOperationRcv/#let-next-taglistreceiver-val","text":"[Source]","title":"let next: TagListReceiver val"},{"location":"corral-vcs-NoOperationRcv/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-NoOperationRcv/#apply","text":"[Source] fun box apply( repo: Repo val) : None val","title":"apply"},{"location":"corral-vcs-NoOperationRcv/#parameters_1","text":"repo: Repo val","title":"Parameters"},{"location":"corral-vcs-NoOperationRcv/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-NoReceiver/","text":"NoReceiver \u00b6 [Source] NoReceiver is a no-op TagListReceiver that chains to next RepoOperation. class val NoReceiver is TagListReceiver val Implements \u00b6 TagListReceiver val Constructors \u00b6 create \u00b6 [Source] new val create( next': RepoOperation val) : NoReceiver val^ Parameters \u00b6 next': RepoOperation val Returns \u00b6 NoReceiver val^ Public fields \u00b6 let next: RepoOperation val \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun box apply( repo: Repo val, tags: Array[String val] val) : None val Parameters \u00b6 repo: Repo val tags: Array [ String val] val Returns \u00b6 None val","title":"class NoReceiver"},{"location":"corral-vcs-NoReceiver/#noreceiver","text":"[Source] NoReceiver is a no-op TagListReceiver that chains to next RepoOperation. class val NoReceiver is TagListReceiver val","title":"NoReceiver"},{"location":"corral-vcs-NoReceiver/#implements","text":"TagListReceiver val","title":"Implements"},{"location":"corral-vcs-NoReceiver/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-NoReceiver/#create","text":"[Source] new val create( next': RepoOperation val) : NoReceiver val^","title":"create"},{"location":"corral-vcs-NoReceiver/#parameters","text":"next': RepoOperation val","title":"Parameters"},{"location":"corral-vcs-NoReceiver/#returns","text":"NoReceiver val^","title":"Returns"},{"location":"corral-vcs-NoReceiver/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-NoReceiver/#let-next-repooperation-val","text":"[Source]","title":"let next: RepoOperation val"},{"location":"corral-vcs-NoReceiver/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-NoReceiver/#apply","text":"[Source] fun box apply( repo: Repo val, tags: Array[String val] val) : None val","title":"apply"},{"location":"corral-vcs-NoReceiver/#parameters_1","text":"repo: Repo val tags: Array [ String val] val","title":"Parameters"},{"location":"corral-vcs-NoReceiver/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-NoneVCS/","text":"NoneVCS \u00b6 [Source] NoneVcs is a no-op VCS that invokes its callbacks without doing any work. primitive val NoneVCS is VCS val Implements \u00b6 VCS val Constructors \u00b6 create \u00b6 [Source] new val create() : NoneVCS val^ Returns \u00b6 NoneVCS val^ Public Functions \u00b6 sync_op \u00b6 [Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val tag_query_op \u00b6 [Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val Returns \u00b6 RepoOperation val checkout_op \u00b6 [Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val eq \u00b6 [Source] fun box eq( that: NoneVCS val) : Bool val Parameters \u00b6 that: NoneVCS val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: NoneVCS val) : Bool val Parameters \u00b6 that: NoneVCS val Returns \u00b6 Bool val","title":"primitive NoneVCS"},{"location":"corral-vcs-NoneVCS/#nonevcs","text":"[Source] NoneVcs is a no-op VCS that invokes its callbacks without doing any work. primitive val NoneVCS is VCS val","title":"NoneVCS"},{"location":"corral-vcs-NoneVCS/#implements","text":"VCS val","title":"Implements"},{"location":"corral-vcs-NoneVCS/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-NoneVCS/#create","text":"[Source] new val create() : NoneVCS val^","title":"create"},{"location":"corral-vcs-NoneVCS/#returns","text":"NoneVCS val^","title":"Returns"},{"location":"corral-vcs-NoneVCS/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-NoneVCS/#sync_op","text":"[Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"sync_op"},{"location":"corral-vcs-NoneVCS/#parameters","text":"resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-NoneVCS/#returns_1","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-NoneVCS/#tag_query_op","text":"[Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val","title":"tag_query_op"},{"location":"corral-vcs-NoneVCS/#parameters_1","text":"resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-NoneVCS/#returns_2","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-NoneVCS/#checkout_op","text":"[Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"checkout_op"},{"location":"corral-vcs-NoneVCS/#parameters_2","text":"rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-NoneVCS/#returns_3","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-NoneVCS/#eq","text":"[Source] fun box eq( that: NoneVCS val) : Bool val","title":"eq"},{"location":"corral-vcs-NoneVCS/#parameters_3","text":"that: NoneVCS val","title":"Parameters"},{"location":"corral-vcs-NoneVCS/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-vcs-NoneVCS/#ne","text":"[Source] fun box ne( that: NoneVCS val) : Bool val","title":"ne"},{"location":"corral-vcs-NoneVCS/#parameters_4","text":"that: NoneVCS val","title":"Parameters"},{"location":"corral-vcs-NoneVCS/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-vcs-Repo/","text":"Repo \u00b6 [Source] Generalized details for any kind of VCS repo. class val Repo Constructors \u00b6 create \u00b6 [Source] new val create( remote': String val, local': FilePath val, workspace': FilePath val) : Repo val^ Parameters \u00b6 remote': String val local': FilePath val workspace': FilePath val Returns \u00b6 Repo val^ Public fields \u00b6 let remote: String val \u00b6 [Source] let local: FilePath val \u00b6 [Source] let workspace: FilePath val \u00b6 [Source] Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val is_remote \u00b6 [Source] fun box is_remote() : Bool val Returns \u00b6 Bool val","title":"class Repo"},{"location":"corral-vcs-Repo/#repo","text":"[Source] Generalized details for any kind of VCS repo. class val Repo","title":"Repo"},{"location":"corral-vcs-Repo/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-Repo/#create","text":"[Source] new val create( remote': String val, local': FilePath val, workspace': FilePath val) : Repo val^","title":"create"},{"location":"corral-vcs-Repo/#parameters","text":"remote': String val local': FilePath val workspace': FilePath val","title":"Parameters"},{"location":"corral-vcs-Repo/#returns","text":"Repo val^","title":"Returns"},{"location":"corral-vcs-Repo/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-Repo/#let-remote-string-val","text":"[Source]","title":"let remote: String val"},{"location":"corral-vcs-Repo/#let-local-filepath-val","text":"[Source]","title":"let local: FilePath val"},{"location":"corral-vcs-Repo/#let-workspace-filepath-val","text":"[Source]","title":"let workspace: FilePath val"},{"location":"corral-vcs-Repo/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-Repo/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"corral-vcs-Repo/#returns_1","text":"String val","title":"Returns"},{"location":"corral-vcs-Repo/#is_remote","text":"[Source] fun box is_remote() : Bool val","title":"is_remote"},{"location":"corral-vcs-Repo/#returns_2","text":"Bool val","title":"Returns"},{"location":"corral-vcs-RepoOperation/","text":"RepoOperation \u00b6 [Source] A RepoOperation encapsualtes a high-level operation on a repo that is comprised of a chain of one or more smaller steps that all operate on a single given Repo and are initiated with apply(). interface val RepoOperation Public Functions \u00b6 apply \u00b6 [Source] fun val apply( repo: Repo val) : None val Parameters \u00b6 repo: Repo val Returns \u00b6 None val","title":"interface RepoOperation"},{"location":"corral-vcs-RepoOperation/#repooperation","text":"[Source] A RepoOperation encapsualtes a high-level operation on a repo that is comprised of a chain of one or more smaller steps that all operate on a single given Repo and are initiated with apply(). interface val RepoOperation","title":"RepoOperation"},{"location":"corral-vcs-RepoOperation/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-RepoOperation/#apply","text":"[Source] fun val apply( repo: Repo val) : None val","title":"apply"},{"location":"corral-vcs-RepoOperation/#parameters","text":"repo: Repo val","title":"Parameters"},{"location":"corral-vcs-RepoOperation/#returns","text":"None val","title":"Returns"},{"location":"corral-vcs-RepoOperationResultReceiver/","text":"RepoOperationResultReceiver \u00b6 [Source] interface tag RepoOperationResultReceiver Public Behaviours \u00b6 reportError \u00b6 [Source] be reportError( repo: Repo val, actionResult: ActionResult val) Parameters \u00b6 repo: Repo val actionResult: ActionResult val","title":"interface RepoOperationResultReceiver"},{"location":"corral-vcs-RepoOperationResultReceiver/#repooperationresultreceiver","text":"[Source] interface tag RepoOperationResultReceiver","title":"RepoOperationResultReceiver"},{"location":"corral-vcs-RepoOperationResultReceiver/#public-behaviours","text":"","title":"Public Behaviours"},{"location":"corral-vcs-RepoOperationResultReceiver/#reporterror","text":"[Source] be reportError( repo: Repo val, actionResult: ActionResult val)","title":"reportError"},{"location":"corral-vcs-RepoOperationResultReceiver/#parameters","text":"repo: Repo val actionResult: ActionResult val","title":"Parameters"},{"location":"corral-vcs-SvnVCS/","text":"SvnVCS \u00b6 [Source] Placeholder for Subversion VCS primitive val SvnVCS is VCS val Implements \u00b6 VCS val Constructors \u00b6 create \u00b6 [Source] new val create() : SvnVCS val^ Returns \u00b6 SvnVCS val^ Public Functions \u00b6 sync_op \u00b6 [Source] fun box sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val tag_query_op \u00b6 [Source] fun box tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val Returns \u00b6 RepoOperation val checkout_op \u00b6 [Source] fun box checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val eq \u00b6 [Source] fun box eq( that: SvnVCS val) : Bool val Parameters \u00b6 that: SvnVCS val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: SvnVCS val) : Bool val Parameters \u00b6 that: SvnVCS val Returns \u00b6 Bool val","title":"primitive SvnVCS"},{"location":"corral-vcs-SvnVCS/#svnvcs","text":"[Source] Placeholder for Subversion VCS primitive val SvnVCS is VCS val","title":"SvnVCS"},{"location":"corral-vcs-SvnVCS/#implements","text":"VCS val","title":"Implements"},{"location":"corral-vcs-SvnVCS/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-SvnVCS/#create","text":"[Source] new val create() : SvnVCS val^","title":"create"},{"location":"corral-vcs-SvnVCS/#returns","text":"SvnVCS val^","title":"Returns"},{"location":"corral-vcs-SvnVCS/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-SvnVCS/#sync_op","text":"[Source] fun box sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"sync_op"},{"location":"corral-vcs-SvnVCS/#parameters","text":"resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-SvnVCS/#returns_1","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-SvnVCS/#tag_query_op","text":"[Source] fun box tag_query_op( resultReceiver: RepoOperationResultReceiver tag, next: TagListReceiver val) : RepoOperation val","title":"tag_query_op"},{"location":"corral-vcs-SvnVCS/#parameters_1","text":"resultReceiver: RepoOperationResultReceiver tag next: TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-SvnVCS/#returns_2","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-SvnVCS/#checkout_op","text":"[Source] fun box checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"checkout_op"},{"location":"corral-vcs-SvnVCS/#parameters_2","text":"rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-SvnVCS/#returns_3","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-SvnVCS/#eq","text":"[Source] fun box eq( that: SvnVCS val) : Bool val","title":"eq"},{"location":"corral-vcs-SvnVCS/#parameters_3","text":"that: SvnVCS val","title":"Parameters"},{"location":"corral-vcs-SvnVCS/#returns_4","text":"Bool val","title":"Returns"},{"location":"corral-vcs-SvnVCS/#ne","text":"[Source] fun box ne( that: SvnVCS val) : Bool val","title":"ne"},{"location":"corral-vcs-SvnVCS/#parameters_4","text":"that: SvnVCS val","title":"Parameters"},{"location":"corral-vcs-SvnVCS/#returns_5","text":"Bool val","title":"Returns"},{"location":"corral-vcs-TagListReceiver/","text":"TagListReceiver \u00b6 [Source] interface val TagListReceiver Public Functions \u00b6 apply \u00b6 [Source] fun box apply( repo: Repo val, tags: Array[String val] val) : None val Parameters \u00b6 repo: Repo val tags: Array [ String val] val Returns \u00b6 None val","title":"interface TagListReceiver"},{"location":"corral-vcs-TagListReceiver/#taglistreceiver","text":"[Source] interface val TagListReceiver","title":"TagListReceiver"},{"location":"corral-vcs-TagListReceiver/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-TagListReceiver/#apply","text":"[Source] fun box apply( repo: Repo val, tags: Array[String val] val) : None val","title":"apply"},{"location":"corral-vcs-TagListReceiver/#parameters","text":"repo: Repo val tags: Array [ String val] val","title":"Parameters"},{"location":"corral-vcs-TagListReceiver/#returns","text":"None val","title":"Returns"},{"location":"corral-vcs-TagQueryPrinter/","text":"TagQueryPrinter \u00b6 [Source] class ref TagQueryPrinter is TagListReceiver val Implements \u00b6 TagListReceiver val Constructors \u00b6 create \u00b6 [Source] new ref create( out': OutStream tag) : TagQueryPrinter ref^ Parameters \u00b6 out': OutStream tag Returns \u00b6 TagQueryPrinter ref^ Public fields \u00b6 let out: OutStream tag \u00b6 [Source] Public Functions \u00b6 apply \u00b6 [Source] fun box apply( repo: Repo val, tags: Array[String val] val) : None val Parameters \u00b6 repo: Repo val tags: Array [ String val] val Returns \u00b6 None val","title":"class TagQueryPrinter"},{"location":"corral-vcs-TagQueryPrinter/#tagqueryprinter","text":"[Source] class ref TagQueryPrinter is TagListReceiver val","title":"TagQueryPrinter"},{"location":"corral-vcs-TagQueryPrinter/#implements","text":"TagListReceiver val","title":"Implements"},{"location":"corral-vcs-TagQueryPrinter/#constructors","text":"","title":"Constructors"},{"location":"corral-vcs-TagQueryPrinter/#create","text":"[Source] new ref create( out': OutStream tag) : TagQueryPrinter ref^","title":"create"},{"location":"corral-vcs-TagQueryPrinter/#parameters","text":"out': OutStream tag","title":"Parameters"},{"location":"corral-vcs-TagQueryPrinter/#returns","text":"TagQueryPrinter ref^","title":"Returns"},{"location":"corral-vcs-TagQueryPrinter/#public-fields","text":"","title":"Public fields"},{"location":"corral-vcs-TagQueryPrinter/#let-out-outstream-tag","text":"[Source]","title":"let out: OutStream tag"},{"location":"corral-vcs-TagQueryPrinter/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-TagQueryPrinter/#apply","text":"[Source] fun box apply( repo: Repo val, tags: Array[String val] val) : None val","title":"apply"},{"location":"corral-vcs-TagQueryPrinter/#parameters_1","text":"repo: Repo val tags: Array [ String val] val","title":"Parameters"},{"location":"corral-vcs-TagQueryPrinter/#returns_1","text":"None val","title":"Returns"},{"location":"corral-vcs-VCS/","text":"VCS \u00b6 [Source] A Vcs provides functions to perform high-level VCS operations that commands use to work with repos. interface val VCS Public Functions \u00b6 sync_op \u00b6 [Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val tag_query_op \u00b6 [Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, receiver: TagListReceiver val) : RepoOperation val Parameters \u00b6 resultReceiver: RepoOperationResultReceiver tag receiver: TagListReceiver val Returns \u00b6 RepoOperation val checkout_op \u00b6 [Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val Parameters \u00b6 rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val Returns \u00b6 RepoOperation val","title":"interface VCS"},{"location":"corral-vcs-VCS/#vcs","text":"[Source] A Vcs provides functions to perform high-level VCS operations that commands use to work with repos. interface val VCS","title":"VCS"},{"location":"corral-vcs-VCS/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-VCS/#sync_op","text":"[Source] fun val sync_op( resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"sync_op"},{"location":"corral-vcs-VCS/#parameters","text":"resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-VCS/#returns","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-VCS/#tag_query_op","text":"[Source] fun val tag_query_op( resultReceiver: RepoOperationResultReceiver tag, receiver: TagListReceiver val) : RepoOperation val","title":"tag_query_op"},{"location":"corral-vcs-VCS/#parameters_1","text":"resultReceiver: RepoOperationResultReceiver tag receiver: TagListReceiver val","title":"Parameters"},{"location":"corral-vcs-VCS/#returns_1","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-VCS/#checkout_op","text":"[Source] fun val checkout_op( rev: String val, resultReceiver: RepoOperationResultReceiver tag, next: RepoOperation val) : RepoOperation val","title":"checkout_op"},{"location":"corral-vcs-VCS/#parameters_2","text":"rev: String val resultReceiver: RepoOperationResultReceiver tag next: RepoOperation val","title":"Parameters"},{"location":"corral-vcs-VCS/#returns_2","text":"RepoOperation val","title":"Returns"},{"location":"corral-vcs-VCSBuilder/","text":"VCSBuilder \u00b6 [Source] interface val VCSBuilder Public Functions \u00b6 apply \u00b6 [Source] fun val apply( kind: String val) : VCS val ? Parameters \u00b6 kind: String val Returns \u00b6 VCS val ?","title":"interface VCSBuilder"},{"location":"corral-vcs-VCSBuilder/#vcsbuilder","text":"[Source] interface val VCSBuilder","title":"VCSBuilder"},{"location":"corral-vcs-VCSBuilder/#public-functions","text":"","title":"Public Functions"},{"location":"corral-vcs-VCSBuilder/#apply","text":"[Source] fun val apply( kind: String val) : VCS val ?","title":"apply"},{"location":"corral-vcs-VCSBuilder/#parameters","text":"kind: String val","title":"Parameters"},{"location":"corral-vcs-VCSBuilder/#returns","text":"VCS val ?","title":"Returns"},{"location":"src/corral/cli/","text":"use \"cli\" primitive CLI fun parse( args: Array[String] box, envs: (Array[String] box | None)) : (Command | (U8, String)) => try match CommandParser(spec()?).parse(args, envs) | let c: Command => c | let h: CommandHelp => (0, h.help_string()) | let e: SyntaxError => (1, e.string()) end else (2, \"Internal error: invalid command spec\") end fun help(): String => try Help.general(spec()?).help_string() else \"\" end fun spec(): CommandSpec ? => CommandSpec.parent( \"corral\", \"\", [ OptionSpec.u64( \"debug\", \"Configure debug output: 0=err, 1=warn, 2=info, 3=fine.\" where short'='g', default' = 0) OptionSpec.bool( \"quiet\", \"Quiet output.\" where short'='q', default' = false) OptionSpec.bool( \"nothing\", \"Don't actually apply changes.\" where short' = 'n', default' = false) OptionSpec.bool( \"verbose\", \"Verbose output.\" where short'='v', default' = false) OptionSpec.string( \"bundle_dir\", \"The directory where the bundle's corral.json and lock.json are located.\" where short' = 'd', default' = \"<cwd>\") ], [ CommandSpec.leaf( \"version\", \"Show the version and exit\")? CommandSpec.leaf( \"init\", \"Initializes the corral.json and lock.json files with\" + \" skeletal information.\" )? CommandSpec.leaf( \"info\", \"Prints all or specific information about the bundle from\" + \" corral.json.\")? CommandSpec.leaf( \"add\", \"Adds a remote VCS, local VCS or local direct dependency.\", [ OptionSpec.string( \"version\", \"Version constraint\" where short' = 'v', default' = \"\") OptionSpec.string( \"revision\", \"Specific revision: tag, branch, commit\" where short' = 'r', default' = \"\") ], [ ArgSpec.string(\"locator\", \"Organization/repository name.\") ])? CommandSpec.leaf( \"remove\", \"Removes one or more deps from the bundle.\", Array[OptionSpec](), [ ArgSpec.string(\"locator\", \"Organization/repository name.\") ])? CommandSpec.leaf( \"list\", \"Lists the deps and packages, including corral details.\")? CommandSpec.leaf( \"clean\", \"Cleans repo cache and working corral. Default is to clean\" + \" only the working corral.\", [ OptionSpec.bool( \"all\", \"Clean both repo cache and working corral.\" where short' = 'a', default' = false) OptionSpec.bool( \"repos\", \"Clean repo cache only.\" where short' = 'r', default' = false) ])? CommandSpec.leaf( \"update\", \"Updates one or more or all of the deps in the corral to their\" + \" best revisions.\")? CommandSpec.leaf( \"fetch\", \"Fetches one or more or all of the deps into the corral.\")? CommandSpec.leaf( \"run\", \"Runs a shell command inside an environment with the corral on\" + \" the PONYPATH.\", Array[OptionSpec](), [ ArgSpec.string_seq(\"args\", \"Arguments to run.\") ])? CommandSpec.leaf( \"pack\", \"Creates a distributable version of a pony library bundle.\", Array[OptionSpec](), [ ArgSpec.string(\"output\", \"Directory to create the packed library bundle in\") ])? ])? .> add_help()?","title":"Cli"},{"location":"src/corral/main/","text":"use \"cli\" use \"cmd\" use \"logger\" use \"util\" actor Main new create(env: Env) => // Parse the CLI args and handle help and errors. let cmd = match recover val CLI.parse(env.args, env.vars) end | let c: Command => c | (let exit_code: U8, let msg: String) => if exit_code == 0 then env.out.print(msg) else StringLogger(Error, env.err, SimpleLogFormatter).log(msg) env.out.print(CLI.help()) env.exitcode(exit_code.i32()) end return end // Setup options and helpers used by commands let debug = cmd.option(\"debug\").u64() let log = StringLogger(DebugLevel(debug), env.err, SimpleLogFormatter) let quiet = cmd.option(\"quiet\").bool() let verbose = cmd.option(\"verbose\").bool() let ulvl = if verbose then Fine else Warn end let ulvl_info = if quiet then Warn else Info end let uout = StringLogger(ulvl, env.out, SimpleLogFormatter) let uout_info = StringLogger(ulvl_info, env.out, SimpleLogFormatter) // Create the specific command object let command: (CmdType, Logger[String]) = match cmd.fullname() | \"corral/add\" => (CmdAdd(cmd), uout) | \"corral/clean\" => (CmdClean(cmd), uout) | \"corral/fetch\" => (CmdUpdate(cmd), uout) | \"corral/info\" => (CmdInfo(cmd), uout_info) | \"corral/init\" => (CmdInit(cmd), uout) | \"corral/list\" => (CmdList(cmd), uout_info) | \"corral/pack\" => (CmdPack(cmd), uout) | \"corral/remove\" => (CmdRemove(cmd), uout) | \"corral/run\" => (CmdRun(cmd), uout) | \"corral/update\" => (CmdUpdate(cmd), uout) | \"corral/version\" => (CmdVersion(cmd), uout_info) else log(Error) and log.log(\"Internal error: unexpected command: \" + cmd.fullname()) env.exitcode(2) return end // Hand off to Executor to resolve required dirs and execute the command Executor.execute( command._1, env, log, command._2, cmd.option(\"nothing\").bool(), cmd.option(\"bundle_dir\").string()) fun @runtime_override_defaults(rto: RuntimeOptions) => rto.ponynoblock = true","title":"Main"}]}