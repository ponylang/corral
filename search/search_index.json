{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"corral--index/","title":"Package","text":"<p>No package doc string provided for corral.</p>"},{"location":"corral--index/#public-types","title":"Public Types","text":"<ul> <li>primitive CLI</li> <li>actor Main</li> </ul>"},{"location":"corral-CLI/","title":"CLI","text":"<p>[Source] <pre><code>primitive val CLI\n</code></pre></p>"},{"location":"corral-CLI/#constructors","title":"Constructors","text":""},{"location":"corral-CLI/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: CLI val^\n</code></pre>"},{"location":"corral-CLI/#returns","title":"Returns","text":"<ul> <li>CLI val^</li> </ul>"},{"location":"corral-CLI/#public-functions","title":"Public Functions","text":""},{"location":"corral-CLI/#parse","title":"parse","text":"<p>[Source]</p> <pre><code>fun box parse(\nargs: Array[String val] box,\nenvs: (Array[String val] box | None val))\n: (Command box | (U8 val , String val))\n</code></pre>"},{"location":"corral-CLI/#parameters","title":"Parameters","text":"<ul> <li>args: Array[String val] box</li> <li>envs: (Array[String val] box | None val)</li> </ul>"},{"location":"corral-CLI/#returns_1","title":"Returns","text":"<ul> <li>(Command box | (U8 val , String val))</li> </ul>"},{"location":"corral-CLI/#help","title":"help","text":"<p>[Source]</p> <pre><code>fun box help()\n: String val\n</code></pre>"},{"location":"corral-CLI/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-CLI/#spec","title":"spec","text":"<p>[Source]</p> <pre><code>fun box spec()\n: CommandSpec ref ?\n</code></pre>"},{"location":"corral-CLI/#returns_3","title":"Returns","text":"<ul> <li>CommandSpec ref ?</li> </ul>"},{"location":"corral-CLI/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: CLI val)\n: Bool val\n</code></pre>"},{"location":"corral-CLI/#parameters_1","title":"Parameters","text":"<ul> <li>that: CLI val</li> </ul>"},{"location":"corral-CLI/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-CLI/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: CLI val)\n: Bool val\n</code></pre>"},{"location":"corral-CLI/#parameters_2","title":"Parameters","text":"<ul> <li>that: CLI val</li> </ul>"},{"location":"corral-CLI/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-Main/","title":"Main","text":"<p>[Source] <pre><code>actor tag Main\n</code></pre></p>"},{"location":"corral-Main/#constructors","title":"Constructors","text":""},{"location":"corral-Main/#create","title":"create","text":"<p>[Source]</p> <pre><code>new tag create(\nenv: Env val)\n: Main tag^\n</code></pre>"},{"location":"corral-Main/#parameters","title":"Parameters","text":"<ul> <li>env: Env val</li> </ul>"},{"location":"corral-Main/#returns","title":"Returns","text":"<ul> <li>Main tag^</li> </ul>"},{"location":"corral-Main/#public-functions","title":"Public Functions","text":""},{"location":"corral-Main/#runtime_override_defaults","title":"runtime_override_defaults","text":"<p>[Source]</p> <pre><code>fun runtime_override_defaults(\nrto: RuntimeOptions ref)\n: None val\n</code></pre>"},{"location":"corral-Main/#parameters_1","title":"Parameters","text":"<ul> <li>rto: RuntimeOptions ref</li> </ul>"},{"location":"corral-Main/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-archive--index/","title":"Package","text":"<p>Corral archive format (version 1)</p> Field Type Description version u8 archive version (currently 1) entries n/a 0 or more archive entries <p>Archive Entry:</p> Field Length Description type u8 1 for file, 2 for package path-size i32_le encodes variable path size (see notes) path ? path to the entry from archive root file-size i32_le encodes variable length file content (see notes) content ? content for a file entry <ul> <li>path-size and file-size are signed and little endian encoded (i32_le)</li> <li>if type is not <code>file</code> then file-size and content are not in the entry</li> </ul>"},{"location":"corral-archive--index/#public-types","title":"Public Types","text":"<ul> <li>primitive ArchiveDecoder</li> <li>class ArchiveEncoder</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/","title":"ArchiveDecoder","text":"<p>[Source] <pre><code>primitive val ArchiveDecoder\n</code></pre></p>"},{"location":"corral-archive-ArchiveDecoder/#constructors","title":"Constructors","text":""},{"location":"corral-archive-ArchiveDecoder/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: ArchiveDecoder val^\n</code></pre>"},{"location":"corral-archive-ArchiveDecoder/#returns","title":"Returns","text":"<ul> <li>ArchiveDecoder val^</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/#public-functions","title":"Public Functions","text":""},{"location":"corral-archive-ArchiveDecoder/#apply","title":"apply","text":"<p>[Source]</p> <p>Decodes corral archive <code>archive</code> into directory <code>to</code></p> <pre><code>fun box apply(\narchive: FilePath val,\nto: Directory ref)\n: None val ?\n</code></pre>"},{"location":"corral-archive-ArchiveDecoder/#parameters","title":"Parameters","text":"<ul> <li>archive: FilePath val</li> <li>to: Directory ref</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/#returns_1","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: ArchiveDecoder val)\n: Bool val\n</code></pre>"},{"location":"corral-archive-ArchiveDecoder/#parameters_1","title":"Parameters","text":"<ul> <li>that: ArchiveDecoder val</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: ArchiveDecoder val)\n: Bool val\n</code></pre>"},{"location":"corral-archive-ArchiveDecoder/#parameters_2","title":"Parameters","text":"<ul> <li>that: ArchiveDecoder val</li> </ul>"},{"location":"corral-archive-ArchiveDecoder/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-archive-ArchiveEncoder/","title":"ArchiveEncoder","text":"<p>[Source] <pre><code>class ref ArchiveEncoder\n</code></pre></p>"},{"location":"corral-archive-ArchiveEncoder/#constructors","title":"Constructors","text":""},{"location":"corral-archive-ArchiveEncoder/#create","title":"create","text":"<p>[Source]</p> <p>Creates a new corral archive with no entries</p> <p><code>root</code> is filesystem path root for all archive entries. If <code>root</code> is set to <code>/home/pony</code> then when adding an entry:   <code>/home/pony/corral.json</code></p> <pre><code>new ref create(\nroot: FilePath val,\nversion: U8 val = 1)\n: ArchiveEncoder ref^ ?\n</code></pre>"},{"location":"corral-archive-ArchiveEncoder/#parameters","title":"Parameters","text":"<ul> <li>root: FilePath val</li> <li>version: U8 val = 1</li> </ul>"},{"location":"corral-archive-ArchiveEncoder/#returns","title":"Returns","text":"<ul> <li>ArchiveEncoder ref^ ?</li> </ul>"},{"location":"corral-archive-ArchiveEncoder/#public-functions","title":"Public Functions","text":""},{"location":"corral-archive-ArchiveEncoder/#add","title":"add","text":"<p>[Source]</p> <p>Adds the contents of <code>from</code> to the Corral archive file <code>to</code>.</p> <ul> <li>Directories are recursively added.</li> <li>Symlinks are ignored</li> </ul> <pre><code>fun ref add(\nfrom: FilePath val)\n: None val ?\n</code></pre>"},{"location":"corral-archive-ArchiveEncoder/#parameters_1","title":"Parameters","text":"<ul> <li>from: FilePath val</li> </ul>"},{"location":"corral-archive-ArchiveEncoder/#returns_1","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-archive-ArchiveEncoder/#write","title":"write","text":"<p>[Source]</p> <p>Creates a new archive file at <code>to</code>. Throws an error if it is unable to create the archive.</p> <ul> <li>Removes any existing file at <code>to</code></li> <li>Resets the archiver after writing</li> </ul> <pre><code>fun ref write(\nto: FilePath val)\n: None val ?\n</code></pre>"},{"location":"corral-archive-ArchiveEncoder/#parameters_2","title":"Parameters","text":"<ul> <li>to: FilePath val</li> </ul>"},{"location":"corral-archive-ArchiveEncoder/#returns_2","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-bundle--index/","title":"Package","text":"<p>No package doc string provided for corral/bundle.</p>"},{"location":"corral-bundle--index/#public-types","title":"Public Types","text":"<ul> <li>class Bundle</li> <li>class BundleData</li> <li>primitive BundleDir</li> <li>class Dep</li> <li>class DepData</li> <li>primitive Files</li> <li>class InfoData</li> <li>primitive Json</li> <li>primitive JsonError</li> <li>class Locator</li> <li>class LockData</li> <li>class LocksData</li> <li>class Project</li> <li>class ScriptCommandData</li> <li>class ScriptsData</li> </ul>"},{"location":"corral-bundle-Bundle/","title":"Bundle","text":"<p>[Source]</p> <p>Encapsulation of a Bundle + Lock file pair, including all file activities for those files.</p> <pre><code>class ref Bundle\n</code></pre>"},{"location":"corral-bundle-Bundle/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-Bundle/#create","title":"create","text":"<p>[Source]</p> <pre><code>new iso create(\ndir': FilePath val,\nlog': Logger[String val] val)\n: Bundle iso^\n</code></pre>"},{"location":"corral-bundle-Bundle/#parameters","title":"Parameters","text":"<ul> <li>dir': FilePath val</li> <li>log': Logger[String val] val</li> </ul>"},{"location":"corral-bundle-Bundle/#returns","title":"Returns","text":"<ul> <li>Bundle iso^</li> </ul>"},{"location":"corral-bundle-Bundle/#load","title":"load","text":"<p>[Source]</p> <pre><code>new iso load(\ndir': FilePath val,\nlog': Logger[String val] val)\n: Bundle iso^ ?\n</code></pre>"},{"location":"corral-bundle-Bundle/#parameters_1","title":"Parameters","text":"<ul> <li>dir': FilePath val</li> <li>log': Logger[String val] val</li> </ul>"},{"location":"corral-bundle-Bundle/#returns_1","title":"Returns","text":"<ul> <li>Bundle iso^ ?</li> </ul>"},{"location":"corral-bundle-Bundle/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-Bundle/#let-dir-filepath-val","title":"let dir: FilePath val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#let-log-loggerstring-val-val","title":"let log: Logger[String val] val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#let-info-infodata-ref","title":"let info: InfoData ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#let-packages-arraystring-val-ref","title":"let packages: Array[String val] ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#let-deps-hashmapstring-val-dep-ref-hasheqstring-val-val-ref","title":"let deps: HashMap[String val, Dep ref, HashEq[String val] val] ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#let-scripts-scriptsdata-ref-none-val","title":"let scripts: (ScriptsData ref | None val)","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#var-modified-bool-val","title":"var modified: Bool val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Bundle/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-Bundle/#name","title":"name","text":"<p>[Source]</p> <pre><code>fun box name()\n: String val\n</code></pre>"},{"location":"corral-bundle-Bundle/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Bundle/#bundle_filepath","title":"bundle_filepath","text":"<p>[Source]</p> <pre><code>fun box bundle_filepath()\n: FilePath val ?\n</code></pre>"},{"location":"corral-bundle-Bundle/#returns_3","title":"Returns","text":"<ul> <li>FilePath val ?</li> </ul>"},{"location":"corral-bundle-Bundle/#lock_filepath","title":"lock_filepath","text":"<p>[Source]</p> <pre><code>fun box lock_filepath()\n: FilePath val ?\n</code></pre>"},{"location":"corral-bundle-Bundle/#returns_4","title":"Returns","text":"<ul> <li>FilePath val ?</li> </ul>"},{"location":"corral-bundle-Bundle/#add_dep","title":"add_dep","text":"<p>[Source]</p> <pre><code>fun ref add_dep(\nlocator: String val,\nversion: String val,\nrevision: String val)\n: Dep ref\n</code></pre>"},{"location":"corral-bundle-Bundle/#parameters_2","title":"Parameters","text":"<ul> <li>locator: String val</li> <li>version: String val</li> <li>revision: String val</li> </ul>"},{"location":"corral-bundle-Bundle/#returns_5","title":"Returns","text":"<ul> <li>Dep ref</li> </ul>"},{"location":"corral-bundle-Bundle/#remove_dep","title":"remove_dep","text":"<p>[Source]</p> <pre><code>fun ref remove_dep(\nlocator: String val)\n: None val ?\n</code></pre>"},{"location":"corral-bundle-Bundle/#parameters_3","title":"Parameters","text":"<ul> <li>locator: String val</li> </ul>"},{"location":"corral-bundle-Bundle/#returns_6","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-bundle-Bundle/#dep_revision","title":"dep_revision","text":"<p>[Source]</p> <p>Returns the revision for a dep from this bundle's lock.</p> <pre><code>fun box dep_revision(\nlocator: String val)\n: String val\n</code></pre>"},{"location":"corral-bundle-Bundle/#parameters_4","title":"Parameters","text":"<ul> <li>locator: String val</li> </ul>"},{"location":"corral-bundle-Bundle/#returns_7","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Bundle/#lock_revision","title":"lock_revision","text":"<p>[Source]</p> <p>Records the revision for a dep into this bundle's lock.</p> <pre><code>fun ref lock_revision(\nlocator: String val,\nrevision: String val)\n: None val\n</code></pre>"},{"location":"corral-bundle-Bundle/#parameters_5","title":"Parameters","text":"<ul> <li>locator: String val</li> <li>revision: String val</li> </ul>"},{"location":"corral-bundle-Bundle/#returns_8","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-bundle-Bundle/#bundle_json","title":"bundle_json","text":"<p>[Source]</p> <pre><code>fun box bundle_json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-Bundle/#returns_9","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-Bundle/#lock_json","title":"lock_json","text":"<p>[Source]</p> <pre><code>fun box lock_json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-Bundle/#returns_10","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-Bundle/#save","title":"save","text":"<p>[Source]</p> <pre><code>fun ref save()\n: None val ?\n</code></pre>"},{"location":"corral-bundle-Bundle/#returns_11","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-bundle-BundleData/","title":"BundleData","text":"<p>[Source] <pre><code>class ref BundleData\n</code></pre></p>"},{"location":"corral-bundle-BundleData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-BundleData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: BundleData ref^\n</code></pre>"},{"location":"corral-bundle-BundleData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-BundleData/#returns","title":"Returns","text":"<ul> <li>BundleData ref^</li> </ul>"},{"location":"corral-bundle-BundleData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-BundleData/#let-info-infodata-ref","title":"let info: InfoData ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-BundleData/#let-packages-arraystring-val-ref","title":"let packages: Array[String val] ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-BundleData/#let-deps-arraydepdata-ref-ref","title":"let deps: Array[DepData ref] ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-BundleData/#let-scripts-scriptsdata-ref-none-val","title":"let scripts: (ScriptsData ref | None val)","text":"<p>[Source]</p>"},{"location":"corral-bundle-BundleDir/","title":"BundleDir","text":"<p>[Source]</p> <p>Locates project bundle directories either by direct resolving of bundle files, or searching up the directory tree until the files are found.</p> <pre><code>primitive val BundleDir\n</code></pre>"},{"location":"corral-bundle-BundleDir/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-BundleDir/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: BundleDir val^\n</code></pre>"},{"location":"corral-bundle-BundleDir/#returns","title":"Returns","text":"<ul> <li>BundleDir val^</li> </ul>"},{"location":"corral-bundle-BundleDir/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-BundleDir/#find","title":"find","text":"<p>[Source]</p> <pre><code>fun box find(\nauth: FileAuth val,\ndir: String val,\nlog: Logger[String val] val)\n: (FilePath val | None val)\n</code></pre>"},{"location":"corral-bundle-BundleDir/#parameters","title":"Parameters","text":"<ul> <li>auth: FileAuth val</li> <li>dir: String val</li> <li>log: Logger[String val] val</li> </ul>"},{"location":"corral-bundle-BundleDir/#returns_1","title":"Returns","text":"<ul> <li>(FilePath val | None val)</li> </ul>"},{"location":"corral-bundle-BundleDir/#resolve","title":"resolve","text":"<p>[Source]</p> <pre><code>fun box resolve(\nauth: FileAuth val,\ndir: String val,\nlog: Logger[String val] val)\n: (FilePath val | None val)\n</code></pre>"},{"location":"corral-bundle-BundleDir/#parameters_1","title":"Parameters","text":"<ul> <li>auth: FileAuth val</li> <li>dir: String val</li> <li>log: Logger[String val] val</li> </ul>"},{"location":"corral-bundle-BundleDir/#returns_2","title":"Returns","text":"<ul> <li>(FilePath val | None val)</li> </ul>"},{"location":"corral-bundle-BundleDir/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: BundleDir val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-BundleDir/#parameters_2","title":"Parameters","text":"<ul> <li>that: BundleDir val</li> </ul>"},{"location":"corral-bundle-BundleDir/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-BundleDir/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: BundleDir val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-BundleDir/#parameters_3","title":"Parameters","text":"<ul> <li>that: BundleDir val</li> </ul>"},{"location":"corral-bundle-BundleDir/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Dep/","title":"Dep","text":"<p>[Source]</p> <p>Encapsulation of a dependency within a Bundle, encompassing both dep and lock data and coordinated operations.</p> <pre><code>class ref Dep\n</code></pre>"},{"location":"corral-bundle-Dep/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-Dep/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nbundle': Bundle box,\ndata': DepData box,\nlock': LockData ref)\n: Dep ref^\n</code></pre>"},{"location":"corral-bundle-Dep/#parameters","title":"Parameters","text":"<ul> <li>bundle': Bundle box</li> <li>data': DepData box</li> <li>lock': LockData ref</li> </ul>"},{"location":"corral-bundle-Dep/#returns","title":"Returns","text":"<ul> <li>Dep ref^</li> </ul>"},{"location":"corral-bundle-Dep/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-Dep/#let-bundle-bundle-box","title":"let bundle: Bundle box","text":"<p>[Source]</p>"},{"location":"corral-bundle-Dep/#let-data-depdata-box","title":"let data: DepData box","text":"<p>[Source]</p>"},{"location":"corral-bundle-Dep/#let-lock-lockdata-ref","title":"let lock: LockData ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-Dep/#let-locator-locator-val","title":"let locator: Locator val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Dep/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-Dep/#name","title":"name","text":"<p>[Source]</p> <pre><code>fun box name()\n: String val\n</code></pre>"},{"location":"corral-bundle-Dep/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Dep/#repo","title":"repo","text":"<p>[Source]</p> <pre><code>fun box repo()\n: String val\n</code></pre>"},{"location":"corral-bundle-Dep/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Dep/#flat_repo","title":"flat_repo","text":"<p>[Source]</p> <pre><code>fun box flat_repo()\n: String val\n</code></pre>"},{"location":"corral-bundle-Dep/#returns_3","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Dep/#version","title":"version","text":"<p>[Source]</p> <pre><code>fun box version()\n: String val\n</code></pre>"},{"location":"corral-bundle-Dep/#returns_4","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Dep/#revision","title":"revision","text":"<p>[Source]</p> <pre><code>fun box revision()\n: String val\n</code></pre>"},{"location":"corral-bundle-Dep/#returns_5","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Dep/#vcs","title":"vcs","text":"<p>[Source]</p> <pre><code>fun box vcs()\n: String val\n</code></pre>"},{"location":"corral-bundle-Dep/#returns_6","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-DepData/","title":"DepData","text":"<p>[Source] <pre><code>class ref DepData\n</code></pre></p>"},{"location":"corral-bundle-DepData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-DepData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: DepData ref^\n</code></pre>"},{"location":"corral-bundle-DepData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-DepData/#returns","title":"Returns","text":"<ul> <li>DepData ref^</li> </ul>"},{"location":"corral-bundle-DepData/#none","title":"none","text":"<p>[Source]</p> <pre><code>new ref none()\n: DepData ref^\n</code></pre>"},{"location":"corral-bundle-DepData/#returns_1","title":"Returns","text":"<ul> <li>DepData ref^</li> </ul>"},{"location":"corral-bundle-DepData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-DepData/#var-locator-string-val","title":"var locator: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-DepData/#var-version-string-val","title":"var version: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-DepData/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-DepData/#json","title":"json","text":"<p>[Source]</p> <pre><code>fun box json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-DepData/#returns_2","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-Files/","title":"Files","text":"<p>[Source] <pre><code>primitive val Files\n</code></pre></p>"},{"location":"corral-bundle-Files/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-Files/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Files val^\n</code></pre>"},{"location":"corral-bundle-Files/#returns","title":"Returns","text":"<ul> <li>Files val^</li> </ul>"},{"location":"corral-bundle-Files/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-Files/#bundle_filename","title":"bundle_filename","text":"<p>[Source]</p> <pre><code>fun tag bundle_filename()\n: String val\n</code></pre>"},{"location":"corral-bundle-Files/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Files/#lock_filename","title":"lock_filename","text":"<p>[Source]</p> <pre><code>fun tag lock_filename()\n: String val\n</code></pre>"},{"location":"corral-bundle-Files/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Files/#corral_dirname","title":"corral_dirname","text":"<p>[Source]</p> <pre><code>fun tag corral_dirname()\n: String val\n</code></pre>"},{"location":"corral-bundle-Files/#returns_3","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Files/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Files val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Files/#parameters","title":"Parameters","text":"<ul> <li>that: Files val</li> </ul>"},{"location":"corral-bundle-Files/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Files/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Files val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Files/#parameters_1","title":"Parameters","text":"<ul> <li>that: Files val</li> </ul>"},{"location":"corral-bundle-Files/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-InfoData/","title":"InfoData","text":"<p>[Source] <pre><code>class ref InfoData\n</code></pre></p>"},{"location":"corral-bundle-InfoData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-InfoData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: InfoData ref^\n</code></pre>"},{"location":"corral-bundle-InfoData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-InfoData/#returns","title":"Returns","text":"<ul> <li>InfoData ref^</li> </ul>"},{"location":"corral-bundle-InfoData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-InfoData/#var-name-string-val","title":"var name: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-InfoData/#var-description-string-val","title":"var description: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-InfoData/#var-homepage-string-val","title":"var homepage: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-InfoData/#var-documentation_url-string-val","title":"var documentation_url: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-InfoData/#var-license-string-val","title":"var license: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-InfoData/#var-version-string-val","title":"var version: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-InfoData/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-InfoData/#json","title":"json","text":"<p>[Source]</p> <pre><code>fun box json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-InfoData/#returns_1","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-Json/","title":"Json","text":"<p>[Source] <pre><code>primitive val Json\n</code></pre></p>"},{"location":"corral-bundle-Json/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-Json/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Json val^\n</code></pre>"},{"location":"corral-bundle-Json/#returns","title":"Returns","text":"<ul> <li>Json val^</li> </ul>"},{"location":"corral-bundle-Json/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-Json/#load_object","title":"load_object","text":"<p>[Source]</p> <pre><code>fun box load_object(\nfile_path: FilePath val,\nlog: Logger[String val] val)\n: (JsonObject ref | FileOK val | FileError val | \nFileEOF val | FileBadFileNumber val | FileExists val | \nFilePermissionDenied val | JsonError val)\n</code></pre>"},{"location":"corral-bundle-Json/#parameters","title":"Parameters","text":"<ul> <li>file_path: FilePath val</li> <li>log: Logger[String val] val</li> </ul>"},{"location":"corral-bundle-Json/#returns_1","title":"Returns","text":"<ul> <li>(JsonObject ref | FileOK val | FileError val |      FileEOF val | FileBadFileNumber val | FileExists val |      FilePermissionDenied val | JsonError val)</li> </ul>"},{"location":"corral-bundle-Json/#write_object","title":"write_object","text":"<p>[Source]</p> <pre><code>fun box write_object(\njo: JsonObject ref,\nfile_path: FilePath val,\nlog: Logger[String val] val)\n: None val\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_1","title":"Parameters","text":"<ul> <li>jo: JsonObject ref</li> <li>file_path: FilePath val</li> <li>log: Logger[String val] val</li> </ul>"},{"location":"corral-bundle-Json/#returns_2","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-bundle-Json/#string","title":"string","text":"<p>[Source]</p> <pre><code>fun box string(\njt: (F64 box | I64 box | Bool box | \nNone box | String box | JsonArray box | \nJsonObject box),\nname: String val)\n: String val\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_2","title":"Parameters","text":"<ul> <li>jt: (F64 box | I64 box | Bool box |      None box | String box | JsonArray box |      JsonObject box)</li> <li>name: String val</li> </ul>"},{"location":"corral-bundle-Json/#returns_3","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Json/#set_string","title":"set_string","text":"<p>[Source]</p> <pre><code>fun box set_string(\njo: JsonObject ref,\nname: String val,\nvalue: String val)\n: None val\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_3","title":"Parameters","text":"<ul> <li>jo: JsonObject ref</li> <li>name: String val</li> <li>value: String val</li> </ul>"},{"location":"corral-bundle-Json/#returns_4","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-bundle-Json/#string_must","title":"string_must","text":"<p>[Source]</p> <pre><code>fun box string_must(\njt: (F64 box | I64 box | Bool box | \nNone box | String box | JsonArray box | \nJsonObject box),\nname: String val)\n: String val ?\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_4","title":"Parameters","text":"<ul> <li>jt: (F64 box | I64 box | Bool box |      None box | String box | JsonArray box |      JsonObject box)</li> <li>name: String val</li> </ul>"},{"location":"corral-bundle-Json/#returns_5","title":"Returns","text":"<ul> <li>String val ?</li> </ul>"},{"location":"corral-bundle-Json/#array","title":"array","text":"<p>[Source]</p> <pre><code>fun box array(\njt: (F64 box | I64 box | Bool box | \nNone box | String box | JsonArray box | \nJsonObject box),\nname: String val)\n: JsonArray box\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_5","title":"Parameters","text":"<ul> <li>jt: (F64 box | I64 box | Bool box |      None box | String box | JsonArray box |      JsonObject box)</li> <li>name: String val</li> </ul>"},{"location":"corral-bundle-Json/#returns_6","title":"Returns","text":"<ul> <li>JsonArray box</li> </ul>"},{"location":"corral-bundle-Json/#objekt","title":"objekt","text":"<p>[Source]</p> <pre><code>fun box objekt(\njt: (F64 box | I64 box | Bool box | \nNone box | String box | JsonArray box | \nJsonObject box),\nname: String val)\n: JsonObject box\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_6","title":"Parameters","text":"<ul> <li>jt: (F64 box | I64 box | Bool box |      None box | String box | JsonArray box |      JsonObject box)</li> <li>name: String val</li> </ul>"},{"location":"corral-bundle-Json/#returns_7","title":"Returns","text":"<ul> <li>JsonObject box</li> </ul>"},{"location":"corral-bundle-Json/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Json val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_7","title":"Parameters","text":"<ul> <li>that: Json val</li> </ul>"},{"location":"corral-bundle-Json/#returns_8","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Json/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Json val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Json/#parameters_8","title":"Parameters","text":"<ul> <li>that: Json val</li> </ul>"},{"location":"corral-bundle-Json/#returns_9","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-JsonError/","title":"JsonError","text":"<p>[Source] <pre><code>primitive val JsonError\n</code></pre></p>"},{"location":"corral-bundle-JsonError/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-JsonError/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: JsonError val^\n</code></pre>"},{"location":"corral-bundle-JsonError/#returns","title":"Returns","text":"<ul> <li>JsonError val^</li> </ul>"},{"location":"corral-bundle-JsonError/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-JsonError/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: JsonError val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-JsonError/#parameters","title":"Parameters","text":"<ul> <li>that: JsonError val</li> </ul>"},{"location":"corral-bundle-JsonError/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-JsonError/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: JsonError val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-JsonError/#parameters_1","title":"Parameters","text":"<ul> <li>that: JsonError val</li> </ul>"},{"location":"corral-bundle-JsonError/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/","title":"Locator","text":"<p>[Source]</p> <p>Encapsulation of the bundle dependency's locator string, parsed into distinct fields.   locator := repo_path[.vcs_suffix][/bundle_path]</p> <pre><code>class val Locator is\nComparableMixin[Locator val] ref,\nHashable ref,\nStringable box\n</code></pre>"},{"location":"corral-bundle-Locator/#implements","title":"Implements","text":"<ul> <li>ComparableMixin[Locator val] ref</li> <li>Hashable ref</li> <li>Stringable box</li> </ul>"},{"location":"corral-bundle-Locator/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-Locator/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nloc: String val)\n: Locator val^\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters","title":"Parameters","text":"<ul> <li>loc: String val</li> </ul>"},{"location":"corral-bundle-Locator/#returns","title":"Returns","text":"<ul> <li>Locator val^</li> </ul>"},{"location":"corral-bundle-Locator/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-Locator/#let-repo_path-string-val","title":"let repo_path: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Locator/#let-vcs_suffix-string-val","title":"let vcs_suffix: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Locator/#let-bundle_path-string-val","title":"let bundle_path: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Locator/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-Locator/#path","title":"path","text":"<p>[Source]</p> <p>Returns a unique name for this locator without the vcs suffix.</p> <pre><code>fun box path()\n: String val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Locator/#flat_name","title":"flat_name","text":"<p>[Source]</p> <pre><code>fun box flat_name()\n: String val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-bundle-Locator/#string","title":"string","text":"<p>[Source]</p> <p>Returns the full string for of this locator.</p> <pre><code>fun box string()\n: String iso^\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_3","title":"Returns","text":"<ul> <li>String iso^</li> </ul>"},{"location":"corral-bundle-Locator/#compare","title":"compare","text":"<p>[Source]</p> <pre><code>fun box compare(\nthat: Locator box)\n: (Less val | Equal val | Greater val)\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_1","title":"Parameters","text":"<ul> <li>that: Locator box</li> </ul>"},{"location":"corral-bundle-Locator/#returns_4","title":"Returns","text":"<ul> <li>(Less val | Equal val | Greater val)</li> </ul>"},{"location":"corral-bundle-Locator/#hash","title":"hash","text":"<p>[Source]</p> <pre><code>fun box hash()\n: USize val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_5","title":"Returns","text":"<ul> <li>USize val</li> </ul>"},{"location":"corral-bundle-Locator/#is_vcs","title":"is_vcs","text":"<p>[Source]</p> <pre><code>fun box is_vcs()\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_6","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#is_local","title":"is_local","text":"<p>[Source]</p> <pre><code>fun box is_local()\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_7","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#is_remote_vcs","title":"is_remote_vcs","text":"<p>[Source]</p> <pre><code>fun box is_remote_vcs()\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_8","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#is_local_vcs","title":"is_local_vcs","text":"<p>[Source]</p> <pre><code>fun box is_local_vcs()\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_9","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#is_local_direct","title":"is_local_direct","text":"<p>[Source]</p> <pre><code>fun box is_local_direct()\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#returns_10","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#lt","title":"lt","text":"<pre><code>fun box lt(\nthat: Locator val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_2","title":"Parameters","text":"<ul> <li>that: Locator val</li> </ul>"},{"location":"corral-bundle-Locator/#returns_11","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#le","title":"le","text":"<pre><code>fun box le(\nthat: Locator val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_3","title":"Parameters","text":"<ul> <li>that: Locator val</li> </ul>"},{"location":"corral-bundle-Locator/#returns_12","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#gt","title":"gt","text":"<pre><code>fun box gt(\nthat: Locator val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_4","title":"Parameters","text":"<ul> <li>that: Locator val</li> </ul>"},{"location":"corral-bundle-Locator/#returns_13","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#ge","title":"ge","text":"<pre><code>fun box ge(\nthat: Locator val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_5","title":"Parameters","text":"<ul> <li>that: Locator val</li> </ul>"},{"location":"corral-bundle-Locator/#returns_14","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#eq","title":"eq","text":"<pre><code>fun box eq(\nthat: Locator val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_6","title":"Parameters","text":"<ul> <li>that: Locator val</li> </ul>"},{"location":"corral-bundle-Locator/#returns_15","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-Locator/#ne","title":"ne","text":"<pre><code>fun box ne(\nthat: Locator val)\n: Bool val\n</code></pre>"},{"location":"corral-bundle-Locator/#parameters_7","title":"Parameters","text":"<ul> <li>that: Locator val</li> </ul>"},{"location":"corral-bundle-Locator/#returns_16","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-bundle-LockData/","title":"LockData","text":"<p>[Source] <pre><code>class ref LockData\n</code></pre></p>"},{"location":"corral-bundle-LockData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-LockData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: LockData ref^\n</code></pre>"},{"location":"corral-bundle-LockData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-LockData/#returns","title":"Returns","text":"<ul> <li>LockData ref^</li> </ul>"},{"location":"corral-bundle-LockData/#none","title":"none","text":"<p>[Source]</p> <pre><code>new ref none()\n: LockData ref^\n</code></pre>"},{"location":"corral-bundle-LockData/#returns_1","title":"Returns","text":"<ul> <li>LockData ref^</li> </ul>"},{"location":"corral-bundle-LockData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-LockData/#var-locator-string-val","title":"var locator: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-LockData/#var-revision-string-val","title":"var revision: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-LockData/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-LockData/#json","title":"json","text":"<p>[Source]</p> <pre><code>fun box json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-LockData/#returns_2","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-LocksData/","title":"LocksData","text":"<p>[Source] <pre><code>class ref LocksData\n</code></pre></p>"},{"location":"corral-bundle-LocksData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-LocksData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: LocksData ref^\n</code></pre>"},{"location":"corral-bundle-LocksData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-LocksData/#returns","title":"Returns","text":"<ul> <li>LocksData ref^</li> </ul>"},{"location":"corral-bundle-LocksData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-LocksData/#let-locks-arraylockdata-ref-ref","title":"let locks: Array[LockData ref] ref","text":"<p>[Source]</p>"},{"location":"corral-bundle-LocksData/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-LocksData/#json","title":"json","text":"<p>[Source]</p> <pre><code>fun box json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-LocksData/#returns_1","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-Project/","title":"Project","text":"<p>[Source]</p> <p>Project assists with the performing operations on bundles and deps of a project.</p> <pre><code>class val Project\n</code></pre>"},{"location":"corral-bundle-Project/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-Project/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nauth': FileAuth val,\nlog': Logger[String val] val,\ndir': FilePath val)\n: Project val^\n</code></pre>"},{"location":"corral-bundle-Project/#parameters","title":"Parameters","text":"<ul> <li>auth': FileAuth val</li> <li>log': Logger[String val] val</li> <li>dir': FilePath val</li> </ul>"},{"location":"corral-bundle-Project/#returns","title":"Returns","text":"<ul> <li>Project val^</li> </ul>"},{"location":"corral-bundle-Project/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-Project/#let-auth-fileauth-val","title":"let auth: FileAuth val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Project/#let-log-loggerstring-val-val","title":"let log: Logger[String val] val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Project/#let-dir-filepath-val","title":"let dir: FilePath val","text":"<p>[Source]</p>"},{"location":"corral-bundle-Project/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-Project/#load_bundle","title":"load_bundle","text":"<p>[Source]</p> <pre><code>fun val load_bundle()\n: (Bundle iso^ | String val)\n</code></pre>"},{"location":"corral-bundle-Project/#returns_1","title":"Returns","text":"<ul> <li>(Bundle iso^ | String val)</li> </ul>"},{"location":"corral-bundle-Project/#create_bundle","title":"create_bundle","text":"<p>[Source]</p> <pre><code>fun box create_bundle()\n: (Bundle iso^ | String val)\n</code></pre>"},{"location":"corral-bundle-Project/#returns_2","title":"Returns","text":"<ul> <li>(Bundle iso^ | String val)</li> </ul>"},{"location":"corral-bundle-Project/#corral_dirpath","title":"corral_dirpath","text":"<p>[Source]</p> <pre><code>fun box corral_dirpath()\n: FilePath val ?\n</code></pre>"},{"location":"corral-bundle-Project/#returns_3","title":"Returns","text":"<ul> <li>FilePath val ?</li> </ul>"},{"location":"corral-bundle-Project/#dep_workspace_root","title":"dep_workspace_root","text":"<p>[Source]</p> <p>Returns the VCS workspace root for a given dep. Not used for local-direct deps.</p> <pre><code>fun box dep_workspace_root(\nlocator: Locator val)\n: FilePath val ?\n</code></pre>"},{"location":"corral-bundle-Project/#parameters_1","title":"Parameters","text":"<ul> <li>locator: Locator val</li> </ul>"},{"location":"corral-bundle-Project/#returns_4","title":"Returns","text":"<ul> <li>FilePath val ?</li> </ul>"},{"location":"corral-bundle-Project/#dep_bundle_root","title":"dep_bundle_root","text":"<p>[Source]</p> <pre><code>fun box dep_bundle_root(\nlocator: Locator val)\n: FilePath val ?\n</code></pre>"},{"location":"corral-bundle-Project/#parameters_2","title":"Parameters","text":"<ul> <li>locator: Locator val</li> </ul>"},{"location":"corral-bundle-Project/#returns_5","title":"Returns","text":"<ul> <li>FilePath val ?</li> </ul>"},{"location":"corral-bundle-Project/#transitive_deps","title":"transitive_deps","text":"<p>[Source]</p> <p>Return all immediate and transitive deps, with no duplicates.</p> <pre><code>fun box transitive_deps(\nbase_bundle: Bundle box)\n: HashMap[Locator val, Dep box, HashEq[Locator val] val] box\n</code></pre>"},{"location":"corral-bundle-Project/#parameters_3","title":"Parameters","text":"<ul> <li>base_bundle: Bundle box</li> </ul>"},{"location":"corral-bundle-Project/#returns_6","title":"Returns","text":"<ul> <li>HashMap[Locator val, Dep box, HashEq[Locator val] val] box</li> </ul>"},{"location":"corral-bundle-ScriptCommandData/","title":"ScriptCommandData","text":"<p>[Source] <pre><code>class ref ScriptCommandData\n</code></pre></p>"},{"location":"corral-bundle-ScriptCommandData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-ScriptCommandData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: ScriptCommandData ref^\n</code></pre>"},{"location":"corral-bundle-ScriptCommandData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-ScriptCommandData/#returns","title":"Returns","text":"<ul> <li>ScriptCommandData ref^</li> </ul>"},{"location":"corral-bundle-ScriptCommandData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-ScriptCommandData/#var-post_fetch_or_update-string-val","title":"var post_fetch_or_update: String val","text":"<p>[Source]</p>"},{"location":"corral-bundle-ScriptCommandData/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-ScriptCommandData/#json","title":"json","text":"<p>[Source]</p> <pre><code>fun box json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-ScriptCommandData/#returns_1","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-bundle-ScriptsData/","title":"ScriptsData","text":"<p>[Source] <pre><code>class ref ScriptsData\n</code></pre></p>"},{"location":"corral-bundle-ScriptsData/#constructors","title":"Constructors","text":""},{"location":"corral-bundle-ScriptsData/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\njo: JsonObject box)\n: ScriptsData ref^\n</code></pre>"},{"location":"corral-bundle-ScriptsData/#parameters","title":"Parameters","text":"<ul> <li>jo: JsonObject box</li> </ul>"},{"location":"corral-bundle-ScriptsData/#returns","title":"Returns","text":"<ul> <li>ScriptsData ref^</li> </ul>"},{"location":"corral-bundle-ScriptsData/#public-fields","title":"Public fields","text":""},{"location":"corral-bundle-ScriptsData/#var-windows-scriptcommanddata-ref-none-val","title":"var windows: (ScriptCommandData ref | None val)","text":"<p>[Source]</p>"},{"location":"corral-bundle-ScriptsData/#var-posix-scriptcommanddata-ref-none-val","title":"var posix: (ScriptCommandData ref | None val)","text":"<p>[Source]</p>"},{"location":"corral-bundle-ScriptsData/#public-functions","title":"Public Functions","text":""},{"location":"corral-bundle-ScriptsData/#json","title":"json","text":"<p>[Source]</p> <pre><code>fun box json()\n: JsonObject ref\n</code></pre>"},{"location":"corral-bundle-ScriptsData/#returns_1","title":"Returns","text":"<ul> <li>JsonObject ref</li> </ul>"},{"location":"corral-cmd--index/","title":"Package","text":"<p>No package doc string provided for corral/cmd.</p>"},{"location":"corral-cmd--index/#public-types","title":"Public Types","text":"<ul> <li>class CmdAdd</li> <li>class CmdClean</li> <li>class CmdInfo</li> <li>class CmdInit</li> <li>class CmdList</li> <li>class CmdPack</li> <li>class CmdRemove</li> <li>interface CmdResultReceiver</li> <li>class CmdRun</li> <li>trait CmdType</li> <li>class CmdUpdate</li> <li>class CmdVersion</li> <li>primitive Constraints</li> <li>class Context</li> <li>primitive Executor</li> <li>actor Main</li> <li>primitive NoOpResultReceiver</li> <li>primitive PostFetchScript</li> <li>primitive RepoForDep</li> </ul>"},{"location":"corral-cmd-CmdAdd/","title":"CmdAdd","text":"<p>[Source] <pre><code>class ref CmdAdd is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdAdd/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdAdd/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdAdd/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdAdd ref^\n</code></pre>"},{"location":"corral-cmd-CmdAdd/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdAdd/#returns","title":"Returns","text":"<ul> <li>CmdAdd ref^</li> </ul>"},{"location":"corral-cmd-CmdAdd/#public-fields","title":"Public fields","text":""},{"location":"corral-cmd-CmdAdd/#let-locator-string-val","title":"let locator: String val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdAdd/#let-version-string-val","title":"let version: String val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdAdd/#let-revision-string-val","title":"let revision: String val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdAdd/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdAdd/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdAdd/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdAdd/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdAdd/#requires_bundle","title":"requires_bundle","text":"<pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdAdd/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdAdd/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdAdd/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdClean/","title":"CmdClean","text":"<p>[Source] <pre><code>class ref CmdClean is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdClean/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdClean/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdClean/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdClean ref^\n</code></pre>"},{"location":"corral-cmd-CmdClean/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdClean/#returns","title":"Returns","text":"<ul> <li>CmdClean ref^</li> </ul>"},{"location":"corral-cmd-CmdClean/#public-fields","title":"Public fields","text":""},{"location":"corral-cmd-CmdClean/#let-clean_repos-bool-val","title":"let clean_repos: Bool val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdClean/#let-clean_corral-bool-val","title":"let clean_corral: Bool val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdClean/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdClean/#requires_bundle","title":"requires_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdClean/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdClean/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdClean/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdClean/#returns_2","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdClean/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdClean/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdInfo/","title":"CmdInfo","text":"<p>[Source] <pre><code>class ref CmdInfo is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdInfo/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdInfo/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdInfo/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdInfo ref^\n</code></pre>"},{"location":"corral-cmd-CmdInfo/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdInfo/#returns","title":"Returns","text":"<ul> <li>CmdInfo ref^</li> </ul>"},{"location":"corral-cmd-CmdInfo/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdInfo/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdInfo/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdInfo/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdInfo/#requires_bundle","title":"requires_bundle","text":"<pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdInfo/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdInfo/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdInfo/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdInit/","title":"CmdInit","text":"<p>[Source] <pre><code>class ref CmdInit is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdInit/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdInit/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdInit/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdInit ref^\n</code></pre>"},{"location":"corral-cmd-CmdInit/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdInit/#returns","title":"Returns","text":"<ul> <li>CmdInit ref^</li> </ul>"},{"location":"corral-cmd-CmdInit/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdInit/#requires_bundle","title":"requires_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdInit/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdInit/#requires_no_bundle","title":"requires_no_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdInit/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdInit/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdInit/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdInit/#returns_3","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdList/","title":"CmdList","text":"<p>[Source] <pre><code>class ref CmdList is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdList/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdList/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdList/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdList ref^\n</code></pre>"},{"location":"corral-cmd-CmdList/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdList/#returns","title":"Returns","text":"<ul> <li>CmdList ref^</li> </ul>"},{"location":"corral-cmd-CmdList/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdList/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdList/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdList/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdList/#requires_bundle","title":"requires_bundle","text":"<pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdList/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdList/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdList/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdPack/","title":"CmdPack","text":"<p>[Source] <pre><code>class ref CmdPack is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdPack/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdPack/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdPack/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdPack ref^\n</code></pre>"},{"location":"corral-cmd-CmdPack/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdPack/#returns","title":"Returns","text":"<ul> <li>CmdPack ref^</li> </ul>"},{"location":"corral-cmd-CmdPack/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdPack/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdPack/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdPack/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdPack/#requires_bundle","title":"requires_bundle","text":"<pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdPack/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdPack/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdPack/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdRemove/","title":"CmdRemove","text":"<p>[Source] <pre><code>class ref CmdRemove is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdRemove/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdRemove/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdRemove/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdRemove ref^\n</code></pre>"},{"location":"corral-cmd-CmdRemove/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdRemove/#returns","title":"Returns","text":"<ul> <li>CmdRemove ref^</li> </ul>"},{"location":"corral-cmd-CmdRemove/#public-fields","title":"Public fields","text":""},{"location":"corral-cmd-CmdRemove/#let-locator-string-val","title":"let locator: String val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdRemove/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdRemove/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdRemove/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdRemove/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdRemove/#requires_bundle","title":"requires_bundle","text":"<pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdRemove/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdRemove/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdRemove/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdResultReceiver/","title":"CmdResultReceiver","text":"<p>[Source] <pre><code>interface tag CmdResultReceiver\n</code></pre></p>"},{"location":"corral-cmd-CmdResultReceiver/#public-behaviours","title":"Public Behaviours","text":""},{"location":"corral-cmd-CmdResultReceiver/#cmd_completed","title":"cmd_completed","text":"<p>[Source]</p> <pre><code>be cmd_completed()\n</code></pre>"},{"location":"corral-cmd-CmdRun/","title":"CmdRun","text":"<p>[Source] <pre><code>class ref CmdRun is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdRun/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdRun/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdRun/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdRun ref^\n</code></pre>"},{"location":"corral-cmd-CmdRun/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdRun/#returns","title":"Returns","text":"<ul> <li>CmdRun ref^</li> </ul>"},{"location":"corral-cmd-CmdRun/#public-fields","title":"Public fields","text":""},{"location":"corral-cmd-CmdRun/#let-args-arraystring-val-val","title":"let args: Array[String val] val","text":"<p>[Source]</p>"},{"location":"corral-cmd-CmdRun/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdRun/#requires_bundle","title":"requires_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdRun/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdRun/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdRun/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdRun/#returns_2","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdRun/#requires_no_bundle","title":"requires_no_bundle","text":"<pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdRun/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdType/","title":"CmdType","text":"<p>[Source] <pre><code>trait ref CmdType\n</code></pre></p>"},{"location":"corral-cmd-CmdType/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdType/#requires_bundle","title":"requires_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdType/#returns","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdType/#requires_no_bundle","title":"requires_no_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdType/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdType/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun ref apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresults_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdType/#parameters","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>results_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdType/#returns_2","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdUpdate/","title":"CmdUpdate","text":"<p>[Source] <pre><code>class ref CmdUpdate is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdUpdate/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdUpdate/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdUpdate/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdUpdate ref^\n</code></pre>"},{"location":"corral-cmd-CmdUpdate/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdUpdate/#returns","title":"Returns","text":"<ul> <li>CmdUpdate ref^</li> </ul>"},{"location":"corral-cmd-CmdUpdate/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdUpdate/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresults_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdUpdate/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>results_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdUpdate/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdUpdate/#requires_bundle","title":"requires_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdUpdate/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdUpdate/#requires_no_bundle","title":"requires_no_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdUpdate/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdVersion/","title":"CmdVersion","text":"<p>[Source] <pre><code>class ref CmdVersion is\nCmdType ref\n</code></pre></p>"},{"location":"corral-cmd-CmdVersion/#implements","title":"Implements","text":"<ul> <li>CmdType ref</li> </ul>"},{"location":"corral-cmd-CmdVersion/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-CmdVersion/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\ncmd: Command box)\n: CmdVersion ref^\n</code></pre>"},{"location":"corral-cmd-CmdVersion/#parameters","title":"Parameters","text":"<ul> <li>cmd: Command box</li> </ul>"},{"location":"corral-cmd-CmdVersion/#returns","title":"Returns","text":"<ul> <li>CmdVersion ref^</li> </ul>"},{"location":"corral-cmd-CmdVersion/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-CmdVersion/#requires_bundle","title":"requires_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdVersion/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-CmdVersion/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project val,\nvcs_builder: VCSBuilder val,\nresult_receiver: CmdResultReceiver tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-CmdVersion/#parameters_1","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project val</li> <li>vcs_builder: VCSBuilder val</li> <li>result_receiver: CmdResultReceiver tag</li> </ul>"},{"location":"corral-cmd-CmdVersion/#returns_2","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-CmdVersion/#requires_no_bundle","title":"requires_no_bundle","text":"<p>[Source]</p> <pre><code>fun box requires_no_bundle()\n: Bool val\n</code></pre>"},{"location":"corral-cmd-CmdVersion/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-Constraints/","title":"Constraints","text":"<p>[Source] <pre><code>primitive val Constraints\n</code></pre></p>"},{"location":"corral-cmd-Constraints/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-Constraints/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Constraints val^\n</code></pre>"},{"location":"corral-cmd-Constraints/#returns","title":"Returns","text":"<ul> <li>Constraints val^</li> </ul>"},{"location":"corral-cmd-Constraints/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-Constraints/#resolve_version","title":"resolve_version","text":"<p>[Source]</p> <p>Returns the best revision given a version string and an array of tag choices. If version is a tag, hash or other non-constraint, then return that.</p> <pre><code>fun box resolve_version(\nversion: String val,\ntags: Array[String val] val,\nlog: Logger[String val] val)\n: String val\n</code></pre>"},{"location":"corral-cmd-Constraints/#parameters","title":"Parameters","text":"<ul> <li>version: String val</li> <li>tags: Array[String val] val</li> <li>log: Logger[String val] val</li> </ul>"},{"location":"corral-cmd-Constraints/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-cmd-Constraints/#best_revision","title":"best_revision","text":"<p>[Source]</p> <p>Returns the best choice of possible: a lock revision, a fallback dep revision, and a version. TODO https://github.com/ponylang/corral/issues/59</p> <pre><code>fun box best_revision(\nlrevision: String val,\ndrevision: String val,\nversion: String val)\n: String val\n</code></pre>"},{"location":"corral-cmd-Constraints/#parameters_1","title":"Parameters","text":"<ul> <li>lrevision: String val</li> <li>drevision: String val</li> <li>version: String val</li> </ul>"},{"location":"corral-cmd-Constraints/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-cmd-Constraints/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Constraints val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-Constraints/#parameters_2","title":"Parameters","text":"<ul> <li>that: Constraints val</li> </ul>"},{"location":"corral-cmd-Constraints/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-Constraints/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Constraints val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-Constraints/#parameters_3","title":"Parameters","text":"<ul> <li>that: Constraints val</li> </ul>"},{"location":"corral-cmd-Constraints/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-Context/","title":"Context","text":"<p>[Source]</p> <p>Context holds options and environment for all commands.</p> <pre><code>class val Context\n</code></pre>"},{"location":"corral-cmd-Context/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-Context/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nenv': Env val,\nlog': Logger[String val] val,\nuout': Logger[String val] val,\nnothing': Bool val,\nrepo_cache': FilePath val)\n: Context val^\n</code></pre>"},{"location":"corral-cmd-Context/#parameters","title":"Parameters","text":"<ul> <li>env': Env val</li> <li>log': Logger[String val] val</li> <li>uout': Logger[String val] val</li> <li>nothing': Bool val</li> <li>repo_cache': FilePath val</li> </ul>"},{"location":"corral-cmd-Context/#returns","title":"Returns","text":"<ul> <li>Context val^</li> </ul>"},{"location":"corral-cmd-Context/#public-fields","title":"Public fields","text":""},{"location":"corral-cmd-Context/#let-env-env-val","title":"let env: Env val","text":"<p>[Source]</p>"},{"location":"corral-cmd-Context/#let-log-loggerstring-val-val","title":"let log: Logger[String val] val","text":"<p>[Source]</p>"},{"location":"corral-cmd-Context/#let-uout-loggerstring-val-val","title":"let uout: Logger[String val] val","text":"<p>[Source]</p>"},{"location":"corral-cmd-Context/#let-nothing-bool-val","title":"let nothing: Bool val","text":"<p>[Source]</p>"},{"location":"corral-cmd-Context/#let-repo_cache-filepath-val","title":"let repo_cache: FilePath val","text":"<p>[Source]</p>"},{"location":"corral-cmd-Executor/","title":"Executor","text":"<p>[Source]</p> <p>Executor handles all the work of setting up the working environment and running commands. It resolves directories, creates the Project and Context objects, and then runs the given command.</p> <pre><code>primitive val Executor\n</code></pre>"},{"location":"corral-cmd-Executor/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-Executor/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Executor val^\n</code></pre>"},{"location":"corral-cmd-Executor/#returns","title":"Returns","text":"<ul> <li>Executor val^</li> </ul>"},{"location":"corral-cmd-Executor/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-Executor/#execute","title":"execute","text":"<p>[Source]</p> <pre><code>fun box execute(\ncommand: CmdType ref,\nenv: Env val,\nlog: Logger[String val] val,\nuout: Logger[String val] val,\nnothing: Bool val,\nbundle_dir_arg: String val)\n: None val\n</code></pre>"},{"location":"corral-cmd-Executor/#parameters","title":"Parameters","text":"<ul> <li>command: CmdType ref</li> <li>env: Env val</li> <li>log: Logger[String val] val</li> <li>uout: Logger[String val] val</li> <li>nothing: Bool val</li> <li>bundle_dir_arg: String val</li> </ul>"},{"location":"corral-cmd-Executor/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-Executor/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Executor val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-Executor/#parameters_1","title":"Parameters","text":"<ul> <li>that: Executor val</li> </ul>"},{"location":"corral-cmd-Executor/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-Executor/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Executor val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-Executor/#parameters_2","title":"Parameters","text":"<ul> <li>that: Executor val</li> </ul>"},{"location":"corral-cmd-Executor/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-Main/","title":"Main","text":"<p>[Source] <pre><code>actor tag Main is\nTestList ref\n</code></pre></p>"},{"location":"corral-cmd-Main/#implements","title":"Implements","text":"<ul> <li>TestList ref</li> </ul>"},{"location":"corral-cmd-Main/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-Main/#create","title":"create","text":"<p>[Source]</p> <pre><code>new tag create(\nenv: Env val)\n: Main tag^\n</code></pre>"},{"location":"corral-cmd-Main/#parameters","title":"Parameters","text":"<ul> <li>env: Env val</li> </ul>"},{"location":"corral-cmd-Main/#returns","title":"Returns","text":"<ul> <li>Main tag^</li> </ul>"},{"location":"corral-cmd-Main/#make","title":"make","text":"<p>[Source]</p> <pre><code>new tag make()\n: Main tag^\n</code></pre>"},{"location":"corral-cmd-Main/#returns_1","title":"Returns","text":"<ul> <li>Main tag^</li> </ul>"},{"location":"corral-cmd-Main/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-Main/#tests","title":"tests","text":"<p>[Source]</p> <pre><code>fun tag tests(\ntest: PonyTest tag)\n: None val\n</code></pre>"},{"location":"corral-cmd-Main/#parameters_1","title":"Parameters","text":"<ul> <li>test: PonyTest tag</li> </ul>"},{"location":"corral-cmd-Main/#returns_2","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-Main/#runtime_override_defaults","title":"runtime_override_defaults","text":"<p>[Source]</p> <pre><code>fun runtime_override_defaults(\nrto: RuntimeOptions ref)\n: None val\n</code></pre>"},{"location":"corral-cmd-Main/#parameters_2","title":"Parameters","text":"<ul> <li>rto: RuntimeOptions ref</li> </ul>"},{"location":"corral-cmd-Main/#returns_3","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-NoOpResultReceiver/","title":"NoOpResultReceiver","text":"<p>[Source] <pre><code>primitive val NoOpResultReceiver\n</code></pre></p>"},{"location":"corral-cmd-NoOpResultReceiver/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-NoOpResultReceiver/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: NoOpResultReceiver val^\n</code></pre>"},{"location":"corral-cmd-NoOpResultReceiver/#returns","title":"Returns","text":"<ul> <li>NoOpResultReceiver val^</li> </ul>"},{"location":"corral-cmd-NoOpResultReceiver/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-NoOpResultReceiver/#cmd_completed","title":"cmd_completed","text":"<p>[Source]</p> <pre><code>fun tag cmd_completed()\n: None val\n</code></pre>"},{"location":"corral-cmd-NoOpResultReceiver/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-NoOpResultReceiver/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: NoOpResultReceiver val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-NoOpResultReceiver/#parameters","title":"Parameters","text":"<ul> <li>that: NoOpResultReceiver val</li> </ul>"},{"location":"corral-cmd-NoOpResultReceiver/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-NoOpResultReceiver/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: NoOpResultReceiver val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-NoOpResultReceiver/#parameters_1","title":"Parameters","text":"<ul> <li>that: NoOpResultReceiver val</li> </ul>"},{"location":"corral-cmd-NoOpResultReceiver/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-PostFetchScript/","title":"PostFetchScript","text":"<p>[Source] <pre><code>primitive val PostFetchScript\n</code></pre></p>"},{"location":"corral-cmd-PostFetchScript/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-PostFetchScript/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: PostFetchScript val^\n</code></pre>"},{"location":"corral-cmd-PostFetchScript/#returns","title":"Returns","text":"<ul> <li>PostFetchScript val^</li> </ul>"},{"location":"corral-cmd-PostFetchScript/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-PostFetchScript/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-cmd-PostFetchScript/#parameters","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>repo: Repo val</li> </ul>"},{"location":"corral-cmd-PostFetchScript/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-cmd-PostFetchScript/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: PostFetchScript val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-PostFetchScript/#parameters_1","title":"Parameters","text":"<ul> <li>that: PostFetchScript val</li> </ul>"},{"location":"corral-cmd-PostFetchScript/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-PostFetchScript/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: PostFetchScript val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-PostFetchScript/#parameters_2","title":"Parameters","text":"<ul> <li>that: PostFetchScript val</li> </ul>"},{"location":"corral-cmd-PostFetchScript/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-RepoForDep/","title":"RepoForDep","text":"<p>[Source] <pre><code>primitive val RepoForDep\n</code></pre></p>"},{"location":"corral-cmd-RepoForDep/#constructors","title":"Constructors","text":""},{"location":"corral-cmd-RepoForDep/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: RepoForDep val^\n</code></pre>"},{"location":"corral-cmd-RepoForDep/#returns","title":"Returns","text":"<ul> <li>RepoForDep val^</li> </ul>"},{"location":"corral-cmd-RepoForDep/#public-functions","title":"Public Functions","text":""},{"location":"corral-cmd-RepoForDep/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nctx: Context val,\nproject: Project box,\ndep: Dep box)\n: Repo val ?\n</code></pre>"},{"location":"corral-cmd-RepoForDep/#parameters","title":"Parameters","text":"<ul> <li>ctx: Context val</li> <li>project: Project box</li> <li>dep: Dep box</li> </ul>"},{"location":"corral-cmd-RepoForDep/#returns_1","title":"Returns","text":"<ul> <li>Repo val ?</li> </ul>"},{"location":"corral-cmd-RepoForDep/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: RepoForDep val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-RepoForDep/#parameters_1","title":"Parameters","text":"<ul> <li>that: RepoForDep val</li> </ul>"},{"location":"corral-cmd-RepoForDep/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-cmd-RepoForDep/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: RepoForDep val)\n: Bool val\n</code></pre>"},{"location":"corral-cmd-RepoForDep/#parameters_2","title":"Parameters","text":"<ul> <li>that: RepoForDep val</li> </ul>"},{"location":"corral-cmd-RepoForDep/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-json--index/","title":"JSON Package","text":"<p>The <code>json</code> package provides the JsonDoc class both as a container for a JSON document and as means of parsing from and writing to String.</p>"},{"location":"corral-json--index/#json-representation","title":"JSON Representation","text":"<p>JSON is represented in Pony as the following types:</p> <ul> <li>object - JsonObject</li> <li>array  - JsonArray</li> <li>string - String</li> <li>integer - I64</li> <li>float   - F64</li> <li>boolean - Bool</li> <li>null    - None</li> </ul> <p>The collection types JsonObject and JsonArray can contain any other JSON structures arbitrarily nested.</p> <p>JsonType is used to subsume all possible JSON types. It can also be used to describe everything that can be serialized using this package.</p>"},{"location":"corral-json--index/#parsing-json","title":"Parsing JSON","text":"<p>For getting JSON from a String into proper Pony data structures, JsonDoc.parse needs to be used. This will populate the public field <code>JsonDoc.data</code>, which is None, if parse has not been called yet.</p> <p>Every call to parse overwrites the <code>data</code> field, so one JsonDoc instance can be used to parse multiple JSON Strings one by one.</p> <pre><code>let doc = JsonDoc\n// parsing\ndoc.parse(\"{\\\"key\\\":\\\"value\\\", \\\"property\\\": true, \\\"array\\\":[1, 2.5, false]}\")?\n// extracting values from a JSON structure\nlet json: JsonObject  = doc.data as JsonObject\nlet key: String       = json.data(\"key\")? as String\nlet property: Bool    = json.data(\"property\")? as Bool\nlet array: JsonArray  = json.data(\"array\")? as JsonArray\nlet first: I64        = array.data(0)? as I64\nlet second: F64       = array.data(1)? as F64\nlet last: Bool        = array.data(2)? as Bool\n</code></pre>"},{"location":"corral-json--index/#sending-json","title":"Sending JSON","text":"<p>JsonDoc has the <code>ref</code> reference capability, which means it is not sendable by default. If you need to send it to another actor you need to recover it to a sendable reference capability (either <code>val</code> or <code>iso</code>). For the sake of simplicity it is recommended to do the parsing already in the recover block:</p> <pre><code>// sending an iso doc\nlet json_string = \"{\\\"array\\\":[1, true, null]}\"\nlet sendable_doc: JsonDoc iso = recover iso JsonDoc.&gt;parse(json_string)? end\nsome_actor.send(consume sendable_doc)\n// sending a val doc\nlet val_doc: JsonDoc val = recover val JsonDoc.&gt;parse(json_string)? end\nsome_actor.send_val(val_doc)\n</code></pre> <p>When sending an <code>iso</code> JsonDoc it is important to recover it to a <code>ref</code> on the receiving side in order to be able to properly access the json structures in <code>data</code>.</p>"},{"location":"corral-json--index/#writing-json","title":"Writing JSON","text":"<p>JSON is written using the JsonDoc.string method. This will serialize the contents of the <code>data</code> field to String.</p> <pre><code>// building up the JSON data structure\nlet doc = JsonDoc\nlet obj = JsonObject\nobj.data(\"key\") = \"value\"\nobj.data(\"property\") = true\nobj.data(\"array\") = JsonArray.from_array([ as JsonType: I64(1); F64(2.5); false])\ndoc.data = obj\n// writing to String\nenv.out.print(\ndoc.string(where indent=\"  \", pretty_print=true)\n)\n</code></pre>"},{"location":"corral-json--index/#public-types","title":"Public Types","text":"<ul> <li>class JsonArray</li> <li>class JsonDoc</li> <li>class JsonObject</li> <li>type JsonType</li> </ul>"},{"location":"corral-json-JsonArray/","title":"JsonArray","text":"<p>[Source] <pre><code>class ref JsonArray\n</code></pre></p>"},{"location":"corral-json-JsonArray/#constructors","title":"Constructors","text":""},{"location":"corral-json-JsonArray/#create","title":"create","text":"<p>[Source]</p> <p>Create an array with zero elements, but space for len elements.</p> <pre><code>new ref create(\nlen: USize val = 0)\n: JsonArray ref^\n</code></pre>"},{"location":"corral-json-JsonArray/#parameters","title":"Parameters","text":"<ul> <li>len: USize val = 0</li> </ul>"},{"location":"corral-json-JsonArray/#returns","title":"Returns","text":"<ul> <li>JsonArray ref^</li> </ul>"},{"location":"corral-json-JsonArray/#from_array","title":"from_array","text":"<p>[Source]</p> <p>Create a Json array from an actual array.</p> <pre><code>new ref from_array(\ndata': Array[(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)] ref)\n: JsonArray ref^\n</code></pre>"},{"location":"corral-json-JsonArray/#parameters_1","title":"Parameters","text":"<ul> <li>data': Array[(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)] ref</li> </ul>"},{"location":"corral-json-JsonArray/#returns_1","title":"Returns","text":"<ul> <li>JsonArray ref^</li> </ul>"},{"location":"corral-json-JsonArray/#public-fields","title":"Public fields","text":""},{"location":"corral-json-JsonArray/#var-data-arrayf64-val-i64-val-bool-val-none-val-string-val-jsonarray-ref-jsonobject-ref-ref","title":"var data: Array[(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)] ref","text":"<p>[Source]</p> <p>The actual array containing JSON structures.</p>"},{"location":"corral-json-JsonArray/#public-functions","title":"Public Functions","text":""},{"location":"corral-json-JsonArray/#string","title":"string","text":"<p>[Source]</p> <p>Generate string representation of this array.</p> <pre><code>fun box string(\nindent: String val = \"\",\npretty_print: Bool val = false)\n: String val\n</code></pre>"},{"location":"corral-json-JsonArray/#parameters_2","title":"Parameters","text":"<ul> <li>indent: String val = \"\"</li> <li>pretty_print: Bool val = false</li> </ul>"},{"location":"corral-json-JsonArray/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-json-JsonDoc/","title":"JsonDoc","text":"<p>[Source]</p> <p>Top level JSON type containing an entire document. A JSON document consists of exactly 1 value.</p> <pre><code>class ref JsonDoc\n</code></pre>"},{"location":"corral-json-JsonDoc/#constructors","title":"Constructors","text":""},{"location":"corral-json-JsonDoc/#create","title":"create","text":"<p>[Source]</p> <p>Default constructor building a document containing a single null.</p> <pre><code>new ref create()\n: JsonDoc ref^\n</code></pre>"},{"location":"corral-json-JsonDoc/#returns","title":"Returns","text":"<ul> <li>JsonDoc ref^</li> </ul>"},{"location":"corral-json-JsonDoc/#public-fields","title":"Public fields","text":""},{"location":"corral-json-JsonDoc/#var-data-f64-val-i64-val-bool-val","title":"var data: (F64 val | I64 val | Bool val |","text":"<pre><code>[None](https://stdlib.ponylang.io/builtin-None/) val | [String](https://stdlib.ponylang.io/builtin-String/) val | [JsonArray](corral-json-JsonArray.md) ref | \n[JsonObject](corral-json-JsonObject.md) ref)\n</code></pre> <p>[Source]</p> <p>The parsed JSON structure.</p> <p>Will be a <code>None</code> if <code>parse(source: String)</code> has not been called yet.</p>"},{"location":"corral-json-JsonDoc/#public-functions","title":"Public Functions","text":""},{"location":"corral-json-JsonDoc/#string","title":"string","text":"<p>[Source]</p> <p>Generate string representation of this document.</p> <pre><code>fun box string(\nindent: String val = \"\",\npretty_print: Bool val = false)\n: String val\n</code></pre>"},{"location":"corral-json-JsonDoc/#parameters","title":"Parameters","text":"<ul> <li>indent: String val = \"\"</li> <li>pretty_print: Bool val = false</li> </ul>"},{"location":"corral-json-JsonDoc/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-json-JsonDoc/#parse","title":"parse","text":"<p>[Source]</p> <p>Parse the given string as a JSON file, building a document. Raise error on invalid JSON in given source.</p> <pre><code>fun ref parse(\nsource: String val)\n: None val ?\n</code></pre>"},{"location":"corral-json-JsonDoc/#parameters_1","title":"Parameters","text":"<ul> <li>source: String val</li> </ul>"},{"location":"corral-json-JsonDoc/#returns_2","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-json-JsonDoc/#parse_report","title":"parse_report","text":"<p>[Source]</p> <p>Give details of the error that occurred last time we attempted to parse. If parse was successful returns (0, \"\").</p> <pre><code>fun box parse_report()\n: (USize val , String val)\n</code></pre>"},{"location":"corral-json-JsonDoc/#returns_3","title":"Returns","text":"<ul> <li>(USize val , String val)</li> </ul>"},{"location":"corral-json-JsonObject/","title":"JsonObject","text":"<p>[Source] <pre><code>class ref JsonObject\n</code></pre></p>"},{"location":"corral-json-JsonObject/#constructors","title":"Constructors","text":""},{"location":"corral-json-JsonObject/#create","title":"create","text":"<p>[Source]</p> <p>Create a map with space for prealloc elements without triggering a resize. Defaults to 6.</p> <pre><code>new ref create(\nprealloc: USize val = 6)\n: JsonObject ref^\n</code></pre>"},{"location":"corral-json-JsonObject/#parameters","title":"Parameters","text":"<ul> <li>prealloc: USize val = 6</li> </ul>"},{"location":"corral-json-JsonObject/#returns","title":"Returns","text":"<ul> <li>JsonObject ref^</li> </ul>"},{"location":"corral-json-JsonObject/#from_map","title":"from_map","text":"<p>[Source]</p> <p>Create a Json object from a map.</p> <pre><code>new ref from_map(\ndata': HashMap[String val, (F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref), HashEq[String val] val] ref)\n: JsonObject ref^\n</code></pre>"},{"location":"corral-json-JsonObject/#parameters_1","title":"Parameters","text":"<ul> <li>data': HashMap[String val, (F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref), HashEq[String val] val] ref</li> </ul>"},{"location":"corral-json-JsonObject/#returns_1","title":"Returns","text":"<ul> <li>JsonObject ref^</li> </ul>"},{"location":"corral-json-JsonObject/#public-fields","title":"Public fields","text":""},{"location":"corral-json-JsonObject/#var-data-hashmapstring-val-f64-val-i64-val-bool-val-none-val-string-val-jsonarray-ref-jsonobject-ref-hasheqstring-val-val-ref","title":"var data: HashMap[String val, (F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref), HashEq[String val] val] ref","text":"<p>[Source]</p> <p>The actual JSON object structure, mapping <code>String</code> keys to other JSON structures.</p>"},{"location":"corral-json-JsonObject/#public-functions","title":"Public Functions","text":""},{"location":"corral-json-JsonObject/#string","title":"string","text":"<p>[Source]</p> <p>Generate string representation of this object.</p> <pre><code>fun box string(\nindent: String val = \"\",\npretty_print: Bool val = false)\n: String val\n</code></pre>"},{"location":"corral-json-JsonObject/#parameters_2","title":"Parameters","text":"<ul> <li>indent: String val = \"\"</li> <li>pretty_print: Bool val = false</li> </ul>"},{"location":"corral-json-JsonObject/#returns_2","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-json-JsonType/","title":"JsonType","text":"<p>[Source]</p> <p>All JSON data types.</p> <pre><code>type JsonType is\n(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)\n</code></pre>"},{"location":"corral-json-JsonType/#type-alias-for","title":"Type Alias For","text":"<ul> <li>(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)</li> </ul>"},{"location":"corral-logger--index/","title":"Logger package","text":"<p>Provides basic logging facilities. For most use cases, the <code>StringLogger</code> class will be used. On construction, it takes 2 parameters and a 3rd optional parameter:</p> <ul> <li>LogLevel below which no output will be logged</li> <li>OutStream to log to</li> <li>Optional LogFormatter</li> </ul> <p>If you need to log arbitrary objects, take a look at <code>ObjectLogger[A]</code> which can log arbitrary objects so long as you provide it a lambda to covert from A to String.</p>"},{"location":"corral-logger--index/#api-philosophy","title":"API Philosophy","text":"<p>The API for using Logger is an attempt to abide by the Pony philosophy of first, be correct and secondly, aim for performance. One of the ways that logging can slow your system down is by having to evaluate expressions to be logged whether they will be logged or not (based on the level of logging). For example:</p> <p><code>logger.log(Warn, name + \": \" + reason)</code></p> <p>will construct a new String regardless of whether we will end up logging the message or not.</p> <p>The Logger API uses boolean short circuiting to avoid this.</p> <p><code>logger(Warn) and logger.log(name + \": \" + reason)</code></p> <p>will not evaluate the expression to be logged unless the log level Warn is at or above the overall log level for our logging. This is as close as we can get to zero cost for items that aren't going to end up being logged.</p>"},{"location":"corral-logger--index/#example-programs","title":"Example programs","text":""},{"location":"corral-logger--index/#string-logger","title":"String Logger","text":"<p>The following program will output 'my warn message' and 'my error message' to STDOUT in the standard default log format.</p> <pre><code>use \"../logger\"\nactor Main\nnew create(env: Env) =&gt;\nlet logger = StringLogger(\nWarn,\nenv.out)\nlogger(Fine) and logger.log(\"my fine message\")\nlogger(Info) and logger.log(\"my info message\")\nlogger(Warn) and logger.log(\"my warn message\")\nlogger(Error) and logger.log(\"my error message\")\n</code></pre>"},{"location":"corral-logger--index/#loggera","title":"Logger[A]","text":"<p>The following program will output '42' to STDOUT in the standard default log format.</p> <pre><code>use \"../logger\"\nactor Main\nnew create(env: Env) =&gt;\nlet logger = Logger[U64](Fine, env.out, {(a) =&gt; a.string() })\nlogger(Error) and logger.log(U64(42))\n</code></pre>"},{"location":"corral-logger--index/#custom-formatting-your-logs","title":"Custom formatting your logs","text":"<p>The Logger package provides an interface for formatting logs. If you wish to override the standard formatting, you can create an object that implements:</p> <pre><code>interface val LogFormatter\nfun apply(\nmsg: String,\nfile_name: String,\nfile_linenum: String,\nfile_linepos: String): String\n</code></pre> <p>This can either be a class or because the interface only has a single apply method, can also be a lambda.</p>"},{"location":"corral-logger--index/#public-types","title":"Public Types","text":"<ul> <li>primitive DefaultLogFormatter</li> <li>primitive Error</li> <li>primitive Fine</li> <li>primitive Info</li> <li>interface LogFormatter</li> <li>type LogLevel</li> <li>class Logger</li> <li>primitive StringLogger</li> <li>primitive Warn</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/","title":"DefaultLogFormatter","text":"<p>[Source] <pre><code>primitive val DefaultLogFormatter is\nLogFormatter val\n</code></pre></p>"},{"location":"corral-logger-DefaultLogFormatter/#implements","title":"Implements","text":"<ul> <li>LogFormatter val</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#constructors","title":"Constructors","text":""},{"location":"corral-logger-DefaultLogFormatter/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: DefaultLogFormatter val^\n</code></pre>"},{"location":"corral-logger-DefaultLogFormatter/#returns","title":"Returns","text":"<ul> <li>DefaultLogFormatter val^</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-DefaultLogFormatter/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nmsg: String val,\nloc: SourceLoc val)\n: String val\n</code></pre>"},{"location":"corral-logger-DefaultLogFormatter/#parameters","title":"Parameters","text":"<ul> <li>msg: String val</li> <li>loc: SourceLoc val</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: DefaultLogFormatter val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-DefaultLogFormatter/#parameters_1","title":"Parameters","text":"<ul> <li>that: DefaultLogFormatter val</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: DefaultLogFormatter val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-DefaultLogFormatter/#parameters_2","title":"Parameters","text":"<ul> <li>that: DefaultLogFormatter val</li> </ul>"},{"location":"corral-logger-DefaultLogFormatter/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Error/","title":"Error","text":"<p>[Source] <pre><code>primitive val Error\n</code></pre></p>"},{"location":"corral-logger-Error/#constructors","title":"Constructors","text":""},{"location":"corral-logger-Error/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Error val^\n</code></pre>"},{"location":"corral-logger-Error/#returns","title":"Returns","text":"<ul> <li>Error val^</li> </ul>"},{"location":"corral-logger-Error/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-Error/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply()\n: U32 val\n</code></pre>"},{"location":"corral-logger-Error/#returns_1","title":"Returns","text":"<ul> <li>U32 val</li> </ul>"},{"location":"corral-logger-Error/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Error val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Error/#parameters","title":"Parameters","text":"<ul> <li>that: Error val</li> </ul>"},{"location":"corral-logger-Error/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Error/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Error val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Error/#parameters_1","title":"Parameters","text":"<ul> <li>that: Error val</li> </ul>"},{"location":"corral-logger-Error/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Fine/","title":"Fine","text":"<p>[Source] <pre><code>primitive val Fine\n</code></pre></p>"},{"location":"corral-logger-Fine/#constructors","title":"Constructors","text":""},{"location":"corral-logger-Fine/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Fine val^\n</code></pre>"},{"location":"corral-logger-Fine/#returns","title":"Returns","text":"<ul> <li>Fine val^</li> </ul>"},{"location":"corral-logger-Fine/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-Fine/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply()\n: U32 val\n</code></pre>"},{"location":"corral-logger-Fine/#returns_1","title":"Returns","text":"<ul> <li>U32 val</li> </ul>"},{"location":"corral-logger-Fine/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Fine val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Fine/#parameters","title":"Parameters","text":"<ul> <li>that: Fine val</li> </ul>"},{"location":"corral-logger-Fine/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Fine/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Fine val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Fine/#parameters_1","title":"Parameters","text":"<ul> <li>that: Fine val</li> </ul>"},{"location":"corral-logger-Fine/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Info/","title":"Info","text":"<p>[Source] <pre><code>primitive val Info\n</code></pre></p>"},{"location":"corral-logger-Info/#constructors","title":"Constructors","text":""},{"location":"corral-logger-Info/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Info val^\n</code></pre>"},{"location":"corral-logger-Info/#returns","title":"Returns","text":"<ul> <li>Info val^</li> </ul>"},{"location":"corral-logger-Info/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-Info/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply()\n: U32 val\n</code></pre>"},{"location":"corral-logger-Info/#returns_1","title":"Returns","text":"<ul> <li>U32 val</li> </ul>"},{"location":"corral-logger-Info/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Info val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Info/#parameters","title":"Parameters","text":"<ul> <li>that: Info val</li> </ul>"},{"location":"corral-logger-Info/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Info/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Info val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Info/#parameters_1","title":"Parameters","text":"<ul> <li>that: Info val</li> </ul>"},{"location":"corral-logger-Info/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-LogFormatter/","title":"LogFormatter","text":"<p>[Source]</p> <p>Interface required to implement custom log formatting.</p> <ul> <li><code>msg</code> is the logged message</li> <li><code>loc</code> is the location log was called from</li> </ul> <p>See <code>DefaultLogFormatter</code> for an example of how to implement a LogFormatter.</p> <pre><code>interface val LogFormatter\n</code></pre>"},{"location":"corral-logger-LogFormatter/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-LogFormatter/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nmsg: String val,\nloc: SourceLoc val)\n: String val\n</code></pre>"},{"location":"corral-logger-LogFormatter/#parameters","title":"Parameters","text":"<ul> <li>msg: String val</li> <li>loc: SourceLoc val</li> </ul>"},{"location":"corral-logger-LogFormatter/#returns","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-logger-LogLevel/","title":"LogLevel","text":"<p>[Source] <pre><code>type LogLevel is\n(Fine val | Info val | Warn val | Error val)\n</code></pre></p>"},{"location":"corral-logger-LogLevel/#type-alias-for","title":"Type Alias For","text":"<ul> <li>(Fine val | Info val | Warn val | Error val)</li> </ul>"},{"location":"corral-logger-Logger/","title":"Logger[A: A]","text":"<p>[Source] <pre><code>class val Logger[A: A]\n</code></pre></p>"},{"location":"corral-logger-Logger/#constructors","title":"Constructors","text":""},{"location":"corral-logger-Logger/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nlevel: (Fine val | Info val | Warn val | \nError val),\nout: OutStream tag,\nf: {(A): String}[A] val,\nformatter: LogFormatter val = reference)\n: Logger[A] val^\n</code></pre>"},{"location":"corral-logger-Logger/#parameters","title":"Parameters","text":"<ul> <li>level: (Fine val | Info val | Warn val |      Error val)</li> <li>out: OutStream tag</li> <li>f: {(A): String}[A] val</li> <li>formatter: LogFormatter val = reference</li> </ul>"},{"location":"corral-logger-Logger/#returns","title":"Returns","text":"<ul> <li>Logger[A] val^</li> </ul>"},{"location":"corral-logger-Logger/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-Logger/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nlevel: (Fine val | Info val | Warn val | \nError val))\n: Bool val\n</code></pre>"},{"location":"corral-logger-Logger/#parameters_1","title":"Parameters","text":"<ul> <li>level: (Fine val | Info val | Warn val |      Error val)</li> </ul>"},{"location":"corral-logger-Logger/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Logger/#log","title":"log","text":"<p>[Source]</p> <pre><code>fun box log(\nvalue: A,\nloc: SourceLoc val = __loc)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Logger/#parameters_2","title":"Parameters","text":"<ul> <li>value: A</li> <li>loc: SourceLoc val = __loc</li> </ul>"},{"location":"corral-logger-Logger/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-StringLogger/","title":"StringLogger","text":"<p>[Source] <pre><code>primitive val StringLogger\n</code></pre></p>"},{"location":"corral-logger-StringLogger/#constructors","title":"Constructors","text":""},{"location":"corral-logger-StringLogger/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: StringLogger val^\n</code></pre>"},{"location":"corral-logger-StringLogger/#returns","title":"Returns","text":"<ul> <li>StringLogger val^</li> </ul>"},{"location":"corral-logger-StringLogger/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-StringLogger/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nlevel: (Fine val | Info val | Warn val | \nError val),\nout: OutStream tag,\nformatter: LogFormatter val = reference)\n: Logger[String val] val\n</code></pre>"},{"location":"corral-logger-StringLogger/#parameters","title":"Parameters","text":"<ul> <li>level: (Fine val | Info val | Warn val |      Error val)</li> <li>out: OutStream tag</li> <li>formatter: LogFormatter val = reference</li> </ul>"},{"location":"corral-logger-StringLogger/#returns_1","title":"Returns","text":"<ul> <li>Logger[String val] val</li> </ul>"},{"location":"corral-logger-StringLogger/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: StringLogger val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-StringLogger/#parameters_1","title":"Parameters","text":"<ul> <li>that: StringLogger val</li> </ul>"},{"location":"corral-logger-StringLogger/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-StringLogger/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: StringLogger val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-StringLogger/#parameters_2","title":"Parameters","text":"<ul> <li>that: StringLogger val</li> </ul>"},{"location":"corral-logger-StringLogger/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Warn/","title":"Warn","text":"<p>[Source] <pre><code>primitive val Warn\n</code></pre></p>"},{"location":"corral-logger-Warn/#constructors","title":"Constructors","text":""},{"location":"corral-logger-Warn/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Warn val^\n</code></pre>"},{"location":"corral-logger-Warn/#returns","title":"Returns","text":"<ul> <li>Warn val^</li> </ul>"},{"location":"corral-logger-Warn/#public-functions","title":"Public Functions","text":""},{"location":"corral-logger-Warn/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply()\n: U32 val\n</code></pre>"},{"location":"corral-logger-Warn/#returns_1","title":"Returns","text":"<ul> <li>U32 val</li> </ul>"},{"location":"corral-logger-Warn/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Warn val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Warn/#parameters","title":"Parameters","text":"<ul> <li>that: Warn val</li> </ul>"},{"location":"corral-logger-Warn/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-logger-Warn/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Warn val)\n: Bool val\n</code></pre>"},{"location":"corral-logger-Warn/#parameters_1","title":"Parameters","text":"<ul> <li>that: Warn val</li> </ul>"},{"location":"corral-logger-Warn/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-mort--index/","title":"Package","text":"<p>No package doc string provided for corral/mort.</p>"},{"location":"corral-mort--index/#public-types","title":"Public Types","text":"<ul> <li>primitive Unreachable</li> </ul>"},{"location":"corral-mort-Unreachable/","title":"Unreachable","text":"<p>[Source]</p> <p>To be used in places that the compiler can't prove is unreachable but we are certain is unreachable and if we reach it, we'd be silently hiding a bug.</p> <pre><code>primitive val Unreachable\n</code></pre>"},{"location":"corral-mort-Unreachable/#constructors","title":"Constructors","text":""},{"location":"corral-mort-Unreachable/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Unreachable val^\n</code></pre>"},{"location":"corral-mort-Unreachable/#returns","title":"Returns","text":"<ul> <li>Unreachable val^</li> </ul>"},{"location":"corral-mort-Unreachable/#public-functions","title":"Public Functions","text":""},{"location":"corral-mort-Unreachable/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nloc: SourceLoc val = __loc)\n: None val\n</code></pre>"},{"location":"corral-mort-Unreachable/#parameters","title":"Parameters","text":"<ul> <li>loc: SourceLoc val = __loc</li> </ul>"},{"location":"corral-mort-Unreachable/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-mort-Unreachable/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Unreachable val)\n: Bool val\n</code></pre>"},{"location":"corral-mort-Unreachable/#parameters_1","title":"Parameters","text":"<ul> <li>that: Unreachable val</li> </ul>"},{"location":"corral-mort-Unreachable/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-mort-Unreachable/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Unreachable val)\n: Bool val\n</code></pre>"},{"location":"corral-mort-Unreachable/#parameters_2","title":"Parameters","text":"<ul> <li>that: Unreachable val</li> </ul>"},{"location":"corral-mort-Unreachable/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range--index/","title":"Package","text":"<p>No package doc string provided for corral/semver/range.</p>"},{"location":"corral-semver-range--index/#public-types","title":"Public Types","text":"<ul> <li>class Range</li> <li>type RangeBound</li> <li>primitive RangeBoundsAreEqual</li> </ul>"},{"location":"corral-semver-range-Range/","title":"Range","text":"<p>[Source] <pre><code>class ref Range is\nEquatable[Range ref] ref,\nStringable box\n</code></pre></p>"},{"location":"corral-semver-range-Range/#implements","title":"Implements","text":"<ul> <li>Equatable[Range ref] ref</li> <li>Stringable box</li> </ul>"},{"location":"corral-semver-range-Range/#constructors","title":"Constructors","text":""},{"location":"corral-semver-range-Range/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nfrom': (Version box | None box),\nto': (Version box | None box),\nfrom_inc': Bool val = true,\nto_inc': Bool val = true)\n: Range ref^\n</code></pre>"},{"location":"corral-semver-range-Range/#parameters","title":"Parameters","text":"<ul> <li>from': (Version box | None box)</li> <li>to': (Version box | None box)</li> <li>from_inc': Bool val = true</li> <li>to_inc': Bool val = true</li> </ul>"},{"location":"corral-semver-range-Range/#returns","title":"Returns","text":"<ul> <li>Range ref^</li> </ul>"},{"location":"corral-semver-range-Range/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-range-Range/#let-from-version-box-none-box","title":"let from: (Version box | None box)","text":"<p>[Source]</p>"},{"location":"corral-semver-range-Range/#let-to-version-box-none-box","title":"let to: (Version box | None box)","text":"<p>[Source]</p>"},{"location":"corral-semver-range-Range/#let-from_inc-bool-val","title":"let from_inc: Bool val","text":"<p>[Source]</p>"},{"location":"corral-semver-range-Range/#let-to_inc-bool-val","title":"let to_inc: Bool val","text":"<p>[Source]</p>"},{"location":"corral-semver-range-Range/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-range-Range/#contains","title":"contains","text":"<p>[Source]</p> <pre><code>fun box contains(\nv: Version ref)\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-Range/#parameters_1","title":"Parameters","text":"<ul> <li>v: Version ref</li> </ul>"},{"location":"corral-semver-range-Range/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range-Range/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Range box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-Range/#parameters_2","title":"Parameters","text":"<ul> <li>that: Range box</li> </ul>"},{"location":"corral-semver-range-Range/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range-Range/#merge","title":"merge","text":"<p>[Source]</p> <pre><code>fun box merge(\nthat: Range ref)\n: Range ref\n</code></pre>"},{"location":"corral-semver-range-Range/#parameters_3","title":"Parameters","text":"<ul> <li>that: Range ref</li> </ul>"},{"location":"corral-semver-range-Range/#returns_3","title":"Returns","text":"<ul> <li>Range ref</li> </ul>"},{"location":"corral-semver-range-Range/#overlaps","title":"overlaps","text":"<p>[Source]</p> <pre><code>fun box overlaps(\nthat: Range ref)\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-Range/#parameters_4","title":"Parameters","text":"<ul> <li>that: Range ref</li> </ul>"},{"location":"corral-semver-range-Range/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range-Range/#string","title":"string","text":"<p>[Source]</p> <pre><code>fun box string()\n: String iso^\n</code></pre>"},{"location":"corral-semver-range-Range/#returns_5","title":"Returns","text":"<ul> <li>String iso^</li> </ul>"},{"location":"corral-semver-range-Range/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Range box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-Range/#parameters_5","title":"Parameters","text":"<ul> <li>that: Range box</li> </ul>"},{"location":"corral-semver-range-Range/#returns_6","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range-RangeBound/","title":"RangeBound","text":"<p>[Source] <pre><code>type RangeBound is\n(Version ref | None val)\n</code></pre></p>"},{"location":"corral-semver-range-RangeBound/#type-alias-for","title":"Type Alias For","text":"<ul> <li>(Version ref | None val)</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/","title":"RangeBoundsAreEqual","text":"<p>[Source] <pre><code>primitive val RangeBoundsAreEqual\n</code></pre></p>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#constructors","title":"Constructors","text":""},{"location":"corral-semver-range-RangeBoundsAreEqual/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: RangeBoundsAreEqual val^\n</code></pre>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns","title":"Returns","text":"<ul> <li>RangeBoundsAreEqual val^</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-range-RangeBoundsAreEqual/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nvrb1: (Version box | None box),\nvrb2: (Version box | None box))\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#parameters","title":"Parameters","text":"<ul> <li>vrb1: (Version box | None box)</li> <li>vrb2: (Version box | None box)</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: RangeBoundsAreEqual val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#parameters_1","title":"Parameters","text":"<ul> <li>that: RangeBoundsAreEqual val</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: RangeBoundsAreEqual val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#parameters_2","title":"Parameters","text":"<ul> <li>that: RangeBoundsAreEqual val</li> </ul>"},{"location":"corral-semver-range-RangeBoundsAreEqual/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver--index/","title":"Package","text":"<p>No package doc string provided for corral/semver/solver.</p>"},{"location":"corral-semver-solver--index/#public-types","title":"Public Types","text":"<ul> <li>class Artifact</li> <li>interface ArtifactSource</li> <li>class Constraint</li> <li>class InMemArtifactSource</li> <li>class Result</li> <li>class Solver</li> </ul>"},{"location":"corral-semver-solver-Artifact/","title":"Artifact","text":"<p>[Source] <pre><code>class ref Artifact is\nComparableMixin[Artifact ref] ref,\nHashable ref,\nStringable box\n</code></pre></p>"},{"location":"corral-semver-solver-Artifact/#implements","title":"Implements","text":"<ul> <li>ComparableMixin[Artifact ref] ref</li> <li>Hashable ref</li> <li>Stringable box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#constructors","title":"Constructors","text":""},{"location":"corral-semver-solver-Artifact/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nname': String val,\nversion': Version ref,\ndepends_on': Array[Constraint ref] ref = qualify)\n: Artifact ref^\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters","title":"Parameters","text":"<ul> <li>name': String val</li> <li>version': Version ref</li> <li>depends_on': Array[Constraint ref] ref = qualify</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns","title":"Returns","text":"<ul> <li>Artifact ref^</li> </ul>"},{"location":"corral-semver-solver-Artifact/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-solver-Artifact/#let-name-string-val","title":"let name: String val","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Artifact/#let-version-version-ref","title":"let version: Version ref","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Artifact/#let-depends_on-arrayconstraint-ref-ref","title":"let depends_on: Array[Constraint ref] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Artifact/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-solver-Artifact/#compare","title":"compare","text":"<p>[Source]</p> <pre><code>fun box compare(\nthat: Artifact box)\n: (Less val | Equal val | Greater val)\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_1","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_1","title":"Returns","text":"<ul> <li>(Less val | Equal val | Greater val)</li> </ul>"},{"location":"corral-semver-solver-Artifact/#hash","title":"hash","text":"<p>[Source]</p> <pre><code>fun box hash()\n: USize val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#returns_2","title":"Returns","text":"<ul> <li>USize val</li> </ul>"},{"location":"corral-semver-solver-Artifact/#string","title":"string","text":"<p>[Source]</p> <pre><code>fun box string()\n: String iso^\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#returns_3","title":"Returns","text":"<ul> <li>String iso^</li> </ul>"},{"location":"corral-semver-solver-Artifact/#lt","title":"lt","text":"<pre><code>fun box lt(\nthat: Artifact box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_2","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-Artifact/#le","title":"le","text":"<pre><code>fun box le(\nthat: Artifact box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_3","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-Artifact/#gt","title":"gt","text":"<pre><code>fun box gt(\nthat: Artifact box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_4","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_6","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-Artifact/#ge","title":"ge","text":"<pre><code>fun box ge(\nthat: Artifact box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_5","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_7","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-Artifact/#eq","title":"eq","text":"<pre><code>fun box eq(\nthat: Artifact box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_6","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_8","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-Artifact/#ne","title":"ne","text":"<pre><code>fun box ne(\nthat: Artifact box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Artifact/#parameters_7","title":"Parameters","text":"<ul> <li>that: Artifact box</li> </ul>"},{"location":"corral-semver-solver-Artifact/#returns_9","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-ArtifactSource/","title":"ArtifactSource","text":"<p>[Source] <pre><code>interface ref ArtifactSource\n</code></pre></p>"},{"location":"corral-semver-solver-ArtifactSource/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-solver-ArtifactSource/#all_versions_of","title":"all_versions_of","text":"<p>[Source]</p> <pre><code>fun ref all_versions_of(\nname: String val)\n: Iterator[Artifact ref] ref\n</code></pre>"},{"location":"corral-semver-solver-ArtifactSource/#parameters","title":"Parameters","text":"<ul> <li>name: String val</li> </ul>"},{"location":"corral-semver-solver-ArtifactSource/#returns","title":"Returns","text":"<ul> <li>Iterator[Artifact ref] ref</li> </ul>"},{"location":"corral-semver-solver-Constraint/","title":"Constraint","text":"<p>[Source] <pre><code>class ref Constraint is\nStringable box\n</code></pre></p>"},{"location":"corral-semver-solver-Constraint/#implements","title":"Implements","text":"<ul> <li>Stringable box</li> </ul>"},{"location":"corral-semver-solver-Constraint/#constructors","title":"Constructors","text":""},{"location":"corral-semver-solver-Constraint/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nartifact_name': String val,\nrange': Range ref)\n: Constraint ref^\n</code></pre>"},{"location":"corral-semver-solver-Constraint/#parameters","title":"Parameters","text":"<ul> <li>artifact_name': String val</li> <li>range': Range ref</li> </ul>"},{"location":"corral-semver-solver-Constraint/#returns","title":"Returns","text":"<ul> <li>Constraint ref^</li> </ul>"},{"location":"corral-semver-solver-Constraint/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-solver-Constraint/#let-artifact_name-string-val","title":"let artifact_name: String val","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Constraint/#let-range-range-ref","title":"let range: Range ref","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Constraint/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-solver-Constraint/#string","title":"string","text":"<p>[Source]</p> <pre><code>fun box string()\n: String iso^\n</code></pre>"},{"location":"corral-semver-solver-Constraint/#returns_1","title":"Returns","text":"<ul> <li>String iso^</li> </ul>"},{"location":"corral-semver-solver-InMemArtifactSource/","title":"InMemArtifactSource","text":"<p>[Source] <pre><code>class ref InMemArtifactSource is\nArtifactSource ref\n</code></pre></p>"},{"location":"corral-semver-solver-InMemArtifactSource/#implements","title":"Implements","text":"<ul> <li>ArtifactSource ref</li> </ul>"},{"location":"corral-semver-solver-InMemArtifactSource/#constructors","title":"Constructors","text":""},{"location":"corral-semver-solver-InMemArtifactSource/#create","title":"create","text":"<p>[Source]</p> <pre><code>new iso create()\n: InMemArtifactSource iso^\n</code></pre>"},{"location":"corral-semver-solver-InMemArtifactSource/#returns","title":"Returns","text":"<ul> <li>InMemArtifactSource iso^</li> </ul>"},{"location":"corral-semver-solver-InMemArtifactSource/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-solver-InMemArtifactSource/#let-artifact_sets_by_name-hashmapstring-val-hashsetartifact-ref-hasheqartifact-ref-val-ref-hasheqstring-val-val-ref","title":"let artifact_sets_by_name: HashMap[String val, HashSet[Artifact ref, HashEq[Artifact ref] val] ref, HashEq[String val] val] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-InMemArtifactSource/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-solver-InMemArtifactSource/#add","title":"add","text":"<p>[Source]</p> <pre><code>fun ref add(\na: Artifact ref)\n: None val\n</code></pre>"},{"location":"corral-semver-solver-InMemArtifactSource/#parameters","title":"Parameters","text":"<ul> <li>a: Artifact ref</li> </ul>"},{"location":"corral-semver-solver-InMemArtifactSource/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-semver-solver-InMemArtifactSource/#all_versions_of","title":"all_versions_of","text":"<p>[Source]</p> <pre><code>fun ref all_versions_of(\nname: String val)\n: Iterator[Artifact ref] ref\n</code></pre>"},{"location":"corral-semver-solver-InMemArtifactSource/#parameters_1","title":"Parameters","text":"<ul> <li>name: String val</li> </ul>"},{"location":"corral-semver-solver-InMemArtifactSource/#returns_2","title":"Returns","text":"<ul> <li>Iterator[Artifact ref] ref</li> </ul>"},{"location":"corral-semver-solver-Result/","title":"Result","text":"<p>[Source] <pre><code>class ref Result\n</code></pre></p>"},{"location":"corral-semver-solver-Result/#constructors","title":"Constructors","text":""},{"location":"corral-semver-solver-Result/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nsolution': Array[Artifact ref] ref = qualify,\nerr': String val = \"\")\n: Result ref^\n</code></pre>"},{"location":"corral-semver-solver-Result/#parameters","title":"Parameters","text":"<ul> <li>solution': Array[Artifact ref] ref = qualify</li> <li>err': String val = \"\"</li> </ul>"},{"location":"corral-semver-solver-Result/#returns","title":"Returns","text":"<ul> <li>Result ref^</li> </ul>"},{"location":"corral-semver-solver-Result/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-solver-Result/#let-solution-arrayartifact-ref-ref","title":"let solution: Array[Artifact ref] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Result/#let-err-string-val","title":"let err: String val","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Result/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-solver-Result/#is_err","title":"is_err","text":"<p>[Source]</p> <pre><code>fun box is_err()\n: Bool val\n</code></pre>"},{"location":"corral-semver-solver-Result/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-solver-Solver/","title":"Solver","text":"<p>[Source] <pre><code>class ref Solver\n</code></pre></p>"},{"location":"corral-semver-solver-Solver/#constructors","title":"Constructors","text":""},{"location":"corral-semver-solver-Solver/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nsource': ArtifactSource ref)\n: Solver ref^\n</code></pre>"},{"location":"corral-semver-solver-Solver/#parameters","title":"Parameters","text":"<ul> <li>source': ArtifactSource ref</li> </ul>"},{"location":"corral-semver-solver-Solver/#returns","title":"Returns","text":"<ul> <li>Solver ref^</li> </ul>"},{"location":"corral-semver-solver-Solver/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-solver-Solver/#let-source-artifactsource-ref","title":"let source: ArtifactSource ref","text":"<p>[Source]</p>"},{"location":"corral-semver-solver-Solver/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-solver-Solver/#solve","title":"solve","text":"<p>[Source]</p> <pre><code>fun ref solve(\nconstraints: Iterator[Constraint ref] ref)\n: Result ref\n</code></pre>"},{"location":"corral-semver-solver-Solver/#parameters_1","title":"Parameters","text":"<ul> <li>constraints: Iterator[Constraint ref] ref</li> </ul>"},{"location":"corral-semver-solver-Solver/#returns_1","title":"Returns","text":"<ul> <li>Result ref</li> </ul>"},{"location":"corral-semver-utils--index/","title":"Package","text":"<p>No package doc string provided for corral/semver/utils.</p>"},{"location":"corral-semver-utils--index/#public-types","title":"Public Types","text":"<ul> <li>interface ComparableMixin</li> <li>class EmptyIterator</li> <li>primitive Strings</li> <li>class ZipIterator</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/","title":"ComparableMixin[A: Comparable[A] #read]","text":"<p>[Source] <pre><code>interface ref ComparableMixin[A: Comparable[A] #read] is\nComparable[A] ref\n</code></pre></p>"},{"location":"corral-semver-utils-ComparableMixin/#implements","title":"Implements","text":"<ul> <li>Comparable[A] ref</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-utils-ComparableMixin/#compare","title":"compare","text":"<p>[Source]</p> <pre><code>fun box compare(\nthat: box-&gt;A)\n: (Less val | Equal val | Greater val)\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns","title":"Returns","text":"<ul> <li>(Less val | Equal val | Greater val)</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#lt","title":"lt","text":"<p>[Source]</p> <pre><code>fun box lt(\nthat: box-&gt;A)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters_1","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#le","title":"le","text":"<p>[Source]</p> <pre><code>fun box le(\nthat: box-&gt;A)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters_2","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#gt","title":"gt","text":"<p>[Source]</p> <pre><code>fun box gt(\nthat: box-&gt;A)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters_3","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#ge","title":"ge","text":"<p>[Source]</p> <pre><code>fun box ge(\nthat: box-&gt;A)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters_4","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: box-&gt;A)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters_5","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: box-&gt;A)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ComparableMixin/#parameters_6","title":"Parameters","text":"<ul> <li>that: box-&gt;A</li> </ul>"},{"location":"corral-semver-utils-ComparableMixin/#returns_6","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-EmptyIterator/","title":"EmptyIterator[A: A]","text":"<p>[Source] <pre><code>class ref EmptyIterator[A: A] is\nIterator[A] ref\n</code></pre></p>"},{"location":"corral-semver-utils-EmptyIterator/#implements","title":"Implements","text":"<ul> <li>Iterator[A] ref</li> </ul>"},{"location":"corral-semver-utils-EmptyIterator/#constructors","title":"Constructors","text":""},{"location":"corral-semver-utils-EmptyIterator/#create","title":"create","text":"<p>[Source]</p> <pre><code>new iso create()\n: EmptyIterator[A] iso^\n</code></pre>"},{"location":"corral-semver-utils-EmptyIterator/#returns","title":"Returns","text":"<ul> <li>EmptyIterator[A] iso^</li> </ul>"},{"location":"corral-semver-utils-EmptyIterator/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-utils-EmptyIterator/#has_next","title":"has_next","text":"<p>[Source]</p> <pre><code>fun ref has_next()\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-EmptyIterator/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-EmptyIterator/#next","title":"next","text":"<p>[Source]</p> <pre><code>fun ref next()\n: A ?\n</code></pre>"},{"location":"corral-semver-utils-EmptyIterator/#returns_2","title":"Returns","text":"<ul> <li>A ?</li> </ul>"},{"location":"corral-semver-utils-Strings/","title":"Strings","text":"<p>[Source] <pre><code>primitive val Strings\n</code></pre></p>"},{"location":"corral-semver-utils-Strings/#constructors","title":"Constructors","text":""},{"location":"corral-semver-utils-Strings/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Strings val^\n</code></pre>"},{"location":"corral-semver-utils-Strings/#returns","title":"Returns","text":"<ul> <li>Strings val^</li> </ul>"},{"location":"corral-semver-utils-Strings/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-utils-Strings/#contains_only","title":"contains_only","text":"<p>[Source]</p> <pre><code>fun box contains_only(\ns: String val,\nbytes: HashSet[U8 val, HashEq[U8 val] val] ref)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-Strings/#parameters","title":"Parameters","text":"<ul> <li>s: String val</li> <li>bytes: HashSet[U8 val, HashEq[U8 val] val] ref</li> </ul>"},{"location":"corral-semver-utils-Strings/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-Strings/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Strings val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-Strings/#parameters_1","title":"Parameters","text":"<ul> <li>that: Strings val</li> </ul>"},{"location":"corral-semver-utils-Strings/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-Strings/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Strings val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-Strings/#parameters_2","title":"Parameters","text":"<ul> <li>that: Strings val</li> </ul>"},{"location":"corral-semver-utils-Strings/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ZipIterator/","title":"ZipIterator[A: A, B: B]","text":"<p>[Source] <pre><code>class ref ZipIterator[A: A, B: B] is\nIterator[(A , B)] ref\n</code></pre></p>"},{"location":"corral-semver-utils-ZipIterator/#implements","title":"Implements","text":"<ul> <li>Iterator[(A , B)] ref</li> </ul>"},{"location":"corral-semver-utils-ZipIterator/#constructors","title":"Constructors","text":""},{"location":"corral-semver-utils-ZipIterator/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nia': Iterator[A] ref,\nib': Iterator[B] ref)\n: ZipIterator[A, B] ref^\n</code></pre>"},{"location":"corral-semver-utils-ZipIterator/#parameters","title":"Parameters","text":"<ul> <li>ia': Iterator[A] ref</li> <li>ib': Iterator[B] ref</li> </ul>"},{"location":"corral-semver-utils-ZipIterator/#returns","title":"Returns","text":"<ul> <li>ZipIterator[A, B] ref^</li> </ul>"},{"location":"corral-semver-utils-ZipIterator/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-utils-ZipIterator/#let-ia-iteratora-ref","title":"let ia: Iterator[A] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-utils-ZipIterator/#let-ib-iteratorb-ref","title":"let ib: Iterator[B] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-utils-ZipIterator/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-utils-ZipIterator/#has_next","title":"has_next","text":"<p>[Source]</p> <pre><code>fun ref has_next()\n: Bool val\n</code></pre>"},{"location":"corral-semver-utils-ZipIterator/#returns_1","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-utils-ZipIterator/#next","title":"next","text":"<p>[Source]</p> <pre><code>fun ref next()\n: (A , B) ?\n</code></pre>"},{"location":"corral-semver-utils-ZipIterator/#returns_2","title":"Returns","text":"<ul> <li>(A , B) ?</li> </ul>"},{"location":"corral-semver-version--index/","title":"Package","text":"<p>No package doc string provided for corral/semver/version.</p>"},{"location":"corral-semver-version--index/#public-types","title":"Public Types","text":"<ul> <li>primitive CompareVersions</li> <li>primitive Consts</li> <li>primitive ParseVersion</li> <li>type PreReleaseField</li> <li>primitive ValidateFields</li> <li>class Version</li> </ul>"},{"location":"corral-semver-version-CompareVersions/","title":"CompareVersions","text":"<p>[Source] <pre><code>primitive val CompareVersions\n</code></pre></p>"},{"location":"corral-semver-version-CompareVersions/#constructors","title":"Constructors","text":""},{"location":"corral-semver-version-CompareVersions/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: CompareVersions val^\n</code></pre>"},{"location":"corral-semver-version-CompareVersions/#returns","title":"Returns","text":"<ul> <li>CompareVersions val^</li> </ul>"},{"location":"corral-semver-version-CompareVersions/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-version-CompareVersions/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nv1: Version box,\nv2: Version box)\n: (Less val | Equal val | Greater val)\n</code></pre>"},{"location":"corral-semver-version-CompareVersions/#parameters","title":"Parameters","text":"<ul> <li>v1: Version box</li> <li>v2: Version box</li> </ul>"},{"location":"corral-semver-version-CompareVersions/#returns_1","title":"Returns","text":"<ul> <li>(Less val | Equal val | Greater val)</li> </ul>"},{"location":"corral-semver-version-CompareVersions/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: CompareVersions val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-CompareVersions/#parameters_1","title":"Parameters","text":"<ul> <li>that: CompareVersions val</li> </ul>"},{"location":"corral-semver-version-CompareVersions/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-CompareVersions/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: CompareVersions val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-CompareVersions/#parameters_2","title":"Parameters","text":"<ul> <li>that: CompareVersions val</li> </ul>"},{"location":"corral-semver-version-CompareVersions/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Consts/","title":"Consts","text":"<p>[Source] <pre><code>primitive val Consts\n</code></pre></p>"},{"location":"corral-semver-version-Consts/#constructors","title":"Constructors","text":""},{"location":"corral-semver-version-Consts/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Consts val^\n</code></pre>"},{"location":"corral-semver-version-Consts/#returns","title":"Returns","text":"<ul> <li>Consts val^</li> </ul>"},{"location":"corral-semver-version-Consts/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-version-Consts/#alphas","title":"alphas","text":"<p>[Source]</p> <pre><code>fun box alphas()\n: HashSet[U8 val, HashEq[U8 val] val] ref\n</code></pre>"},{"location":"corral-semver-version-Consts/#returns_1","title":"Returns","text":"<ul> <li>HashSet[U8 val, HashEq[U8 val] val] ref</li> </ul>"},{"location":"corral-semver-version-Consts/#nums","title":"nums","text":"<p>[Source]</p> <pre><code>fun box nums()\n: HashSet[U8 val, HashEq[U8 val] val] ref\n</code></pre>"},{"location":"corral-semver-version-Consts/#returns_2","title":"Returns","text":"<ul> <li>HashSet[U8 val, HashEq[U8 val] val] ref</li> </ul>"},{"location":"corral-semver-version-Consts/#alphanums","title":"alphanums","text":"<p>[Source]</p> <pre><code>fun box alphanums()\n: HashSet[U8 val, HashEq[U8 val] val] ref\n</code></pre>"},{"location":"corral-semver-version-Consts/#returns_3","title":"Returns","text":"<ul> <li>HashSet[U8 val, HashEq[U8 val] val] ref</li> </ul>"},{"location":"corral-semver-version-Consts/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Consts val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Consts/#parameters","title":"Parameters","text":"<ul> <li>that: Consts val</li> </ul>"},{"location":"corral-semver-version-Consts/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Consts/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Consts val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Consts/#parameters_1","title":"Parameters","text":"<ul> <li>that: Consts val</li> </ul>"},{"location":"corral-semver-version-Consts/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-ParseVersion/","title":"ParseVersion","text":"<p>[Source] <pre><code>primitive val ParseVersion\n</code></pre></p>"},{"location":"corral-semver-version-ParseVersion/#constructors","title":"Constructors","text":""},{"location":"corral-semver-version-ParseVersion/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: ParseVersion val^\n</code></pre>"},{"location":"corral-semver-version-ParseVersion/#returns","title":"Returns","text":"<ul> <li>ParseVersion val^</li> </ul>"},{"location":"corral-semver-version-ParseVersion/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-version-ParseVersion/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\ns: String val)\n: Version ref\n</code></pre>"},{"location":"corral-semver-version-ParseVersion/#parameters","title":"Parameters","text":"<ul> <li>s: String val</li> </ul>"},{"location":"corral-semver-version-ParseVersion/#returns_1","title":"Returns","text":"<ul> <li>Version ref</li> </ul>"},{"location":"corral-semver-version-ParseVersion/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: ParseVersion val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-ParseVersion/#parameters_1","title":"Parameters","text":"<ul> <li>that: ParseVersion val</li> </ul>"},{"location":"corral-semver-version-ParseVersion/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-ParseVersion/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: ParseVersion val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-ParseVersion/#parameters_2","title":"Parameters","text":"<ul> <li>that: ParseVersion val</li> </ul>"},{"location":"corral-semver-version-ParseVersion/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-PreReleaseField/","title":"PreReleaseField","text":"<p>[Source] <pre><code>type PreReleaseField is\n(String val | U64 val)\n</code></pre></p>"},{"location":"corral-semver-version-PreReleaseField/#type-alias-for","title":"Type Alias For","text":"<ul> <li>(String val | U64 val)</li> </ul>"},{"location":"corral-semver-version-ValidateFields/","title":"ValidateFields","text":"<p>[Source] <pre><code>primitive val ValidateFields\n</code></pre></p>"},{"location":"corral-semver-version-ValidateFields/#constructors","title":"Constructors","text":""},{"location":"corral-semver-version-ValidateFields/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: ValidateFields val^\n</code></pre>"},{"location":"corral-semver-version-ValidateFields/#returns","title":"Returns","text":"<ul> <li>ValidateFields val^</li> </ul>"},{"location":"corral-semver-version-ValidateFields/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-version-ValidateFields/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\npr: Array[(String val | U64 val)] ref,\nbuild: Array[String val] ref)\n: Array[String val] ref\n</code></pre>"},{"location":"corral-semver-version-ValidateFields/#parameters","title":"Parameters","text":"<ul> <li>pr: Array[(String val | U64 val)] ref</li> <li>build: Array[String val] ref</li> </ul>"},{"location":"corral-semver-version-ValidateFields/#returns_1","title":"Returns","text":"<ul> <li>Array[String val] ref</li> </ul>"},{"location":"corral-semver-version-ValidateFields/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: ValidateFields val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-ValidateFields/#parameters_1","title":"Parameters","text":"<ul> <li>that: ValidateFields val</li> </ul>"},{"location":"corral-semver-version-ValidateFields/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-ValidateFields/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: ValidateFields val)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-ValidateFields/#parameters_2","title":"Parameters","text":"<ul> <li>that: ValidateFields val</li> </ul>"},{"location":"corral-semver-version-ValidateFields/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/","title":"Version","text":"<p>[Source] <pre><code>class ref Version is\nComparableMixin[Version ref] ref,\nHashable ref,\nStringable box\n</code></pre></p>"},{"location":"corral-semver-version-Version/#implements","title":"Implements","text":"<ul> <li>ComparableMixin[Version ref] ref</li> <li>Hashable ref</li> <li>Stringable box</li> </ul>"},{"location":"corral-semver-version-Version/#constructors","title":"Constructors","text":""},{"location":"corral-semver-version-Version/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nmajor': U64 val,\nminor': U64 val = 0,\npatch': U64 val = 0,\npr_fields': Array[(String val | U64 val)] ref = qualify,\nbuild_fields': Array[String val] ref = qualify)\n: Version ref^\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters","title":"Parameters","text":"<ul> <li>major': U64 val</li> <li>minor': U64 val = 0</li> <li>patch': U64 val = 0</li> <li>pr_fields': Array[(String val | U64 val)] ref = qualify</li> <li>build_fields': Array[String val] ref = qualify</li> </ul>"},{"location":"corral-semver-version-Version/#returns","title":"Returns","text":"<ul> <li>Version ref^</li> </ul>"},{"location":"corral-semver-version-Version/#public-fields","title":"Public fields","text":""},{"location":"corral-semver-version-Version/#var-major-u64-val","title":"var major: U64 val","text":"<p>[Source]</p>"},{"location":"corral-semver-version-Version/#var-minor-u64-val","title":"var minor: U64 val","text":"<p>[Source]</p>"},{"location":"corral-semver-version-Version/#var-patch-u64-val","title":"var patch: U64 val","text":"<p>[Source]</p>"},{"location":"corral-semver-version-Version/#let-pr_fields-arraystring-val-u64-val-ref","title":"let pr_fields: Array[(String val | U64 val)] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-version-Version/#let-build_fields-arraystring-val-ref","title":"let build_fields: Array[String val] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-version-Version/#let-errors-arraystring-val-ref","title":"let errors: Array[String val] ref","text":"<p>[Source]</p>"},{"location":"corral-semver-version-Version/#public-functions","title":"Public Functions","text":""},{"location":"corral-semver-version-Version/#compare","title":"compare","text":"<p>[Source]</p> <pre><code>fun box compare(\nthat: Version box)\n: (Less val | Equal val | Greater val)\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_1","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_1","title":"Returns","text":"<ul> <li>(Less val | Equal val | Greater val)</li> </ul>"},{"location":"corral-semver-version-Version/#hash","title":"hash","text":"<p>[Source]</p> <pre><code>fun box hash()\n: USize val\n</code></pre>"},{"location":"corral-semver-version-Version/#returns_2","title":"Returns","text":"<ul> <li>USize val</li> </ul>"},{"location":"corral-semver-version-Version/#is_valid","title":"is_valid","text":"<p>[Source]</p> <pre><code>fun box is_valid()\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/#string","title":"string","text":"<p>[Source]</p> <pre><code>fun box string()\n: String iso^\n</code></pre>"},{"location":"corral-semver-version-Version/#returns_4","title":"Returns","text":"<ul> <li>String iso^</li> </ul>"},{"location":"corral-semver-version-Version/#major_minor_patch_string","title":"major_minor_patch_string","text":"<p>[Source]</p> <pre><code>fun box major_minor_patch_string()\n: String val\n</code></pre>"},{"location":"corral-semver-version-Version/#returns_5","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-semver-version-Version/#pre_release_string","title":"pre_release_string","text":"<p>[Source]</p> <pre><code>fun box pre_release_string()\n: String val\n</code></pre>"},{"location":"corral-semver-version-Version/#returns_6","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-semver-version-Version/#build_string","title":"build_string","text":"<p>[Source]</p> <pre><code>fun box build_string()\n: String val\n</code></pre>"},{"location":"corral-semver-version-Version/#returns_7","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-semver-version-Version/#lt","title":"lt","text":"<p>[Source]</p> <pre><code>fun box lt(\nthat: Version box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_2","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_8","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/#le","title":"le","text":"<p>[Source]</p> <pre><code>fun box le(\nthat: Version box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_3","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_9","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/#gt","title":"gt","text":"<p>[Source]</p> <pre><code>fun box gt(\nthat: Version box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_4","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_10","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/#ge","title":"ge","text":"<p>[Source]</p> <pre><code>fun box ge(\nthat: Version box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_5","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_11","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Version box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_6","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_12","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-semver-version-Version/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Version box)\n: Bool val\n</code></pre>"},{"location":"corral-semver-version-Version/#parameters_7","title":"Parameters","text":"<ul> <li>that: Version box</li> </ul>"},{"location":"corral-semver-version-Version/#returns_13","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util--index/","title":"Package","text":"<p>No package doc string provided for corral/util.</p>"},{"location":"corral-util--index/#public-types","title":"Public Types","text":"<ul> <li>class Action</li> <li>class ActionResult</li> <li>primitive Copy</li> <li>primitive DebugLevel</li> <li>class Program</li> <li>primitive Runner</li> <li>primitive SimpleLogFormatter</li> </ul>"},{"location":"corral-util-Action/","title":"Action","text":"<p>[Source]</p> <p>An Action encapsulates one specific executable action with a Program, cli args and env vars.</p> <pre><code>class val Action\n</code></pre>"},{"location":"corral-util-Action/#constructors","title":"Constructors","text":""},{"location":"corral-util-Action/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nprog': Program val,\nargs': Array[String val] val,\nvars': Array[String val] val = recover,\ncwd': (FilePath val | None val) = reference)\n: Action val^\n</code></pre>"},{"location":"corral-util-Action/#parameters","title":"Parameters","text":"<ul> <li>prog': Program val</li> <li>args': Array[String val] val</li> <li>vars': Array[String val] val = recover</li> <li>cwd': (FilePath val | None val) = reference</li> </ul>"},{"location":"corral-util-Action/#returns","title":"Returns","text":"<ul> <li>Action val^</li> </ul>"},{"location":"corral-util-Action/#public-fields","title":"Public fields","text":""},{"location":"corral-util-Action/#let-prog-program-val","title":"let prog: Program val","text":"<p>[Source]</p>"},{"location":"corral-util-Action/#let-args-arraystring-val-val","title":"let args: Array[String val] val","text":"<p>[Source]</p>"},{"location":"corral-util-Action/#let-vars-arraystring-val-val","title":"let vars: Array[String val] val","text":"<p>[Source]</p>"},{"location":"corral-util-Action/#let-cwd-filepath-val-none-val","title":"let cwd: (FilePath val | None val)","text":"<p>[Source]</p>"},{"location":"corral-util-ActionResult/","title":"ActionResult","text":"<p>[Source]</p> <p>The results of an Action which includes its exit code, out and err streams as Strings, and and error message if the Action failed.</p> <pre><code>class val ActionResult\n</code></pre>"},{"location":"corral-util-ActionResult/#constructors","title":"Constructors","text":""},{"location":"corral-util-ActionResult/#ok","title":"ok","text":"<p>[Source]</p> <pre><code>new val ok(\nexit_status': (Exited val | Signaled val),\nstdout': String val,\nstderr': String val)\n: ActionResult val^\n</code></pre>"},{"location":"corral-util-ActionResult/#parameters","title":"Parameters","text":"<ul> <li>exit_status': (Exited val | Signaled val)</li> <li>stdout': String val</li> <li>stderr': String val</li> </ul>"},{"location":"corral-util-ActionResult/#returns","title":"Returns","text":"<ul> <li>ActionResult val^</li> </ul>"},{"location":"corral-util-ActionResult/#fail","title":"fail","text":"<p>[Source]</p> <pre><code>new val fail(\nerrmsg': String val,\nexit_status': (Exited val | Signaled val) = call,\nstdout': String val = \"\",\nstderr': String val = \"\")\n: ActionResult val^\n</code></pre>"},{"location":"corral-util-ActionResult/#parameters_1","title":"Parameters","text":"<ul> <li>errmsg': String val</li> <li>exit_status': (Exited val | Signaled val) = call</li> <li>stdout': String val = \"\"</li> <li>stderr': String val = \"\"</li> </ul>"},{"location":"corral-util-ActionResult/#returns_1","title":"Returns","text":"<ul> <li>ActionResult val^</li> </ul>"},{"location":"corral-util-ActionResult/#public-fields","title":"Public fields","text":""},{"location":"corral-util-ActionResult/#let-exit_status-exited-val-signaled-val","title":"let exit_status: (Exited val | Signaled val)","text":"<p>[Source]</p>"},{"location":"corral-util-ActionResult/#let-stdout-string-val","title":"let stdout: String val","text":"<p>[Source]</p>"},{"location":"corral-util-ActionResult/#let-stderr-string-val","title":"let stderr: String val","text":"<p>[Source]</p>"},{"location":"corral-util-ActionResult/#let-errmsg-string-val-none-val","title":"let errmsg: (String val | None val)","text":"<p>[Source]</p>"},{"location":"corral-util-ActionResult/#public-functions","title":"Public Functions","text":""},{"location":"corral-util-ActionResult/#exit_code","title":"exit_code","text":"<p>[Source]</p> <pre><code>fun val exit_code()\n: I32 val\n</code></pre>"},{"location":"corral-util-ActionResult/#returns_2","title":"Returns","text":"<ul> <li>I32 val</li> </ul>"},{"location":"corral-util-ActionResult/#print_to","title":"print_to","text":"<p>[Source]</p> <pre><code>fun val print_to(\nout: OutStream tag)\n: None val\n</code></pre>"},{"location":"corral-util-ActionResult/#parameters_2","title":"Parameters","text":"<ul> <li>out: OutStream tag</li> </ul>"},{"location":"corral-util-ActionResult/#returns_3","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-util-ActionResult/#successful","title":"successful","text":"<p>[Source]</p> <pre><code>fun box successful()\n: Bool val\n</code></pre>"},{"location":"corral-util-ActionResult/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-Copy/","title":"Copy","text":"<p>[Source] <pre><code>primitive val Copy\n</code></pre></p>"},{"location":"corral-util-Copy/#constructors","title":"Constructors","text":""},{"location":"corral-util-Copy/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Copy val^\n</code></pre>"},{"location":"corral-util-Copy/#returns","title":"Returns","text":"<ul> <li>Copy val^</li> </ul>"},{"location":"corral-util-Copy/#public-functions","title":"Public Functions","text":""},{"location":"corral-util-Copy/#tree","title":"tree","text":"<p>[Source]</p> <p>Copy the <code>dir_name</code> tree from <code>from_root</code> to under <code>to_root</code>.</p> <pre><code>fun box tree(\nfrom_root: FilePath val,\nto_root: FilePath val,\ndir_name: String val)\n: None val ?\n</code></pre>"},{"location":"corral-util-Copy/#parameters","title":"Parameters","text":"<ul> <li>from_root: FilePath val</li> <li>to_root: FilePath val</li> <li>dir_name: String val</li> </ul>"},{"location":"corral-util-Copy/#returns_1","title":"Returns","text":"<ul> <li>None val ?</li> </ul>"},{"location":"corral-util-Copy/#file","title":"file","text":"<p>[Source]</p> <pre><code>fun box file(\nfrom_path: FilePath val,\nto_path: FilePath val)\n: (FileOK val | FileError val | FileEOF val | \nFileBadFileNumber val | FileExists val | FilePermissionDenied val)\n</code></pre>"},{"location":"corral-util-Copy/#parameters_1","title":"Parameters","text":"<ul> <li>from_path: FilePath val</li> <li>to_path: FilePath val</li> </ul>"},{"location":"corral-util-Copy/#returns_2","title":"Returns","text":"<ul> <li>(FileOK val | FileError val | FileEOF val |      FileBadFileNumber val | FileExists val | FilePermissionDenied val)</li> </ul>"},{"location":"corral-util-Copy/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Copy val)\n: Bool val\n</code></pre>"},{"location":"corral-util-Copy/#parameters_2","title":"Parameters","text":"<ul> <li>that: Copy val</li> </ul>"},{"location":"corral-util-Copy/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-Copy/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Copy val)\n: Bool val\n</code></pre>"},{"location":"corral-util-Copy/#parameters_3","title":"Parameters","text":"<ul> <li>that: Copy val</li> </ul>"},{"location":"corral-util-Copy/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-DebugLevel/","title":"DebugLevel","text":"<p>[Source] <pre><code>primitive val DebugLevel\n</code></pre></p>"},{"location":"corral-util-DebugLevel/#constructors","title":"Constructors","text":""},{"location":"corral-util-DebugLevel/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: DebugLevel val^\n</code></pre>"},{"location":"corral-util-DebugLevel/#returns","title":"Returns","text":"<ul> <li>DebugLevel val^</li> </ul>"},{"location":"corral-util-DebugLevel/#public-functions","title":"Public Functions","text":""},{"location":"corral-util-DebugLevel/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nlvl: U64 val)\n: (Fine val | Info val | Warn val | \nError val)\n</code></pre>"},{"location":"corral-util-DebugLevel/#parameters","title":"Parameters","text":"<ul> <li>lvl: U64 val</li> </ul>"},{"location":"corral-util-DebugLevel/#returns_1","title":"Returns","text":"<ul> <li>(Fine val | Info val | Warn val |      Error val)</li> </ul>"},{"location":"corral-util-DebugLevel/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: DebugLevel val)\n: Bool val\n</code></pre>"},{"location":"corral-util-DebugLevel/#parameters_1","title":"Parameters","text":"<ul> <li>that: DebugLevel val</li> </ul>"},{"location":"corral-util-DebugLevel/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-DebugLevel/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: DebugLevel val)\n: Bool val\n</code></pre>"},{"location":"corral-util-DebugLevel/#parameters_2","title":"Parameters","text":"<ul> <li>that: DebugLevel val</li> </ul>"},{"location":"corral-util-DebugLevel/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-Program/","title":"Program","text":"<p>[Source]</p> <p>A Program encapsulates an executable program and authority to execute it.</p> <pre><code>class val Program\n</code></pre>"},{"location":"corral-util-Program/#constructors","title":"Constructors","text":""},{"location":"corral-util-Program/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nenv: Env val,\nname: String val)\n: Program val^ ?\n</code></pre>"},{"location":"corral-util-Program/#parameters","title":"Parameters","text":"<ul> <li>env: Env val</li> <li>name: String val</li> </ul>"},{"location":"corral-util-Program/#returns","title":"Returns","text":"<ul> <li>Program val^ ?</li> </ul>"},{"location":"corral-util-Program/#public-fields","title":"Public fields","text":""},{"location":"corral-util-Program/#let-process_auth-startprocessauth-val","title":"let process_auth: StartProcessAuth val","text":"<p>[Source]</p>"},{"location":"corral-util-Program/#let-backpressure_auth-applyreleasebackpressureauth-val","title":"let backpressure_auth: ApplyReleaseBackpressureAuth val","text":"<p>[Source]</p>"},{"location":"corral-util-Program/#let-path-filepath-val","title":"let path: FilePath val","text":"<p>[Source]</p>"},{"location":"corral-util-Program/#public-functions","title":"Public Functions","text":""},{"location":"corral-util-Program/#first_existing","title":"first_existing","text":"<p>[Source]</p> <pre><code>fun tag first_existing(\nauth': FileAuth val,\nbinpath: String val,\nname: String val)\n: FilePath val ?\n</code></pre>"},{"location":"corral-util-Program/#parameters_1","title":"Parameters","text":"<ul> <li>auth': FileAuth val</li> <li>binpath: String val</li> <li>name: String val</li> </ul>"},{"location":"corral-util-Program/#returns_1","title":"Returns","text":"<ul> <li>FilePath val ?</li> </ul>"},{"location":"corral-util-Runner/","title":"Runner","text":"<p>[Source]</p> <p>Run an Action using ProcessMonitor, and pass the resulting ActionResult to a given lambda.</p> <pre><code>primitive val Runner\n</code></pre>"},{"location":"corral-util-Runner/#constructors","title":"Constructors","text":""},{"location":"corral-util-Runner/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: Runner val^\n</code></pre>"},{"location":"corral-util-Runner/#returns","title":"Returns","text":"<ul> <li>Runner val^</li> </ul>"},{"location":"corral-util-Runner/#public-functions","title":"Public Functions","text":""},{"location":"corral-util-Runner/#run","title":"run","text":"<p>[Source]</p> <pre><code>fun box run(\naction: Action val,\nresult: {(ActionResult)} iso)\n: None val\n</code></pre>"},{"location":"corral-util-Runner/#parameters","title":"Parameters","text":"<ul> <li>action: Action val</li> <li>result: {(ActionResult)} iso</li> </ul>"},{"location":"corral-util-Runner/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-util-Runner/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: Runner val)\n: Bool val\n</code></pre>"},{"location":"corral-util-Runner/#parameters_1","title":"Parameters","text":"<ul> <li>that: Runner val</li> </ul>"},{"location":"corral-util-Runner/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-Runner/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: Runner val)\n: Bool val\n</code></pre>"},{"location":"corral-util-Runner/#parameters_2","title":"Parameters","text":"<ul> <li>that: Runner val</li> </ul>"},{"location":"corral-util-Runner/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/","title":"SimpleLogFormatter","text":"<p>[Source] <pre><code>primitive val SimpleLogFormatter is\nLogFormatter val\n</code></pre></p>"},{"location":"corral-util-SimpleLogFormatter/#implements","title":"Implements","text":"<ul> <li>LogFormatter val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#constructors","title":"Constructors","text":""},{"location":"corral-util-SimpleLogFormatter/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: SimpleLogFormatter val^\n</code></pre>"},{"location":"corral-util-SimpleLogFormatter/#returns","title":"Returns","text":"<ul> <li>SimpleLogFormatter val^</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#public-functions","title":"Public Functions","text":""},{"location":"corral-util-SimpleLogFormatter/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nmsg: String val,\nloc: SourceLoc val)\n: String val\n</code></pre>"},{"location":"corral-util-SimpleLogFormatter/#parameters","title":"Parameters","text":"<ul> <li>msg: String val</li> <li>loc: SourceLoc val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: SimpleLogFormatter val)\n: Bool val\n</code></pre>"},{"location":"corral-util-SimpleLogFormatter/#parameters_1","title":"Parameters","text":"<ul> <li>that: SimpleLogFormatter val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: SimpleLogFormatter val)\n: Bool val\n</code></pre>"},{"location":"corral-util-SimpleLogFormatter/#parameters_2","title":"Parameters","text":"<ul> <li>that: SimpleLogFormatter val</li> </ul>"},{"location":"corral-util-SimpleLogFormatter/#returns_3","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs--index/","title":"Package","text":"<p>No package doc string provided for corral/vcs.</p>"},{"location":"corral-vcs--index/#public-types","title":"Public Types","text":"<ul> <li>primitive BzrVCS</li> <li>class CorralVCSBuilder</li> <li>class GitCheckoutRepo</li> <li>class GitQueryTags</li> <li>class GitSyncRepo</li> <li>class GitVCS</li> <li>primitive HgVCS</li> <li>class NoOperation</li> <li>class NoOperationRcv</li> <li>class NoReceiver</li> <li>primitive NoneVCS</li> <li>class Repo</li> <li>interface RepoOperation</li> <li>interface RepoOperationResultReceiver</li> <li>primitive SvnVCS</li> <li>interface TagListReceiver</li> <li>class TagQueryPrinter</li> <li>interface VCS</li> <li>interface VCSBuilder</li> </ul>"},{"location":"corral-vcs-BzrVCS/","title":"BzrVCS","text":"<p>[Source]</p> <p>Placeholder for Bazaar VCS</p> <pre><code>primitive val BzrVCS is\nVCS val\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#implements","title":"Implements","text":"<ul> <li>VCS val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-BzrVCS/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: BzrVCS val^\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#returns","title":"Returns","text":"<ul> <li>BzrVCS val^</li> </ul>"},{"location":"corral-vcs-BzrVCS/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-BzrVCS/#sync_op","title":"sync_op","text":"<p>[Source]</p> <pre><code>fun val sync_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#parameters","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#returns_1","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#tag_query_op","title":"tag_query_op","text":"<p>[Source]</p> <pre><code>fun val tag_query_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: TagListReceiver val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#parameters_1","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: TagListReceiver val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#returns_2","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#checkout_op","title":"checkout_op","text":"<p>[Source]</p> <pre><code>fun val checkout_op(\nrev: String val,\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#parameters_2","title":"Parameters","text":"<ul> <li>rev: String val</li> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#returns_3","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: BzrVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#parameters_3","title":"Parameters","text":"<ul> <li>that: BzrVCS val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: BzrVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-BzrVCS/#parameters_4","title":"Parameters","text":"<ul> <li>that: BzrVCS val</li> </ul>"},{"location":"corral-vcs-BzrVCS/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-CorralVCSBuilder/","title":"CorralVCSBuilder","text":"<p>[Source] <pre><code>class val CorralVCSBuilder\n</code></pre></p>"},{"location":"corral-vcs-CorralVCSBuilder/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-CorralVCSBuilder/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nenv: Env val)\n: CorralVCSBuilder val^\n</code></pre>"},{"location":"corral-vcs-CorralVCSBuilder/#parameters","title":"Parameters","text":"<ul> <li>env: Env val</li> </ul>"},{"location":"corral-vcs-CorralVCSBuilder/#returns","title":"Returns","text":"<ul> <li>CorralVCSBuilder val^</li> </ul>"},{"location":"corral-vcs-CorralVCSBuilder/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-CorralVCSBuilder/#apply","title":"apply","text":"<p>[Source]</p> <p>Returns a VCS instance for any given VCS by name.</p> <pre><code>fun val apply(\nkind: String val)\n: VCS val ?\n</code></pre>"},{"location":"corral-vcs-CorralVCSBuilder/#parameters_1","title":"Parameters","text":"<ul> <li>kind: String val</li> </ul>"},{"location":"corral-vcs-CorralVCSBuilder/#returns_1","title":"Returns","text":"<ul> <li>VCS val ?</li> </ul>"},{"location":"corral-vcs-GitCheckoutRepo/","title":"GitCheckoutRepo","text":"<p>[Source] <pre><code>class val GitCheckoutRepo is\nRepoOperation val\n</code></pre></p>"},{"location":"corral-vcs-GitCheckoutRepo/#implements","title":"Implements","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitCheckoutRepo/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-GitCheckoutRepo/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\ngit': GitVCS val,\nrev': String val,\nresultReceiver': RepoOperationResultReceiver tag,\nnext': RepoOperation val)\n: GitCheckoutRepo val^\n</code></pre>"},{"location":"corral-vcs-GitCheckoutRepo/#parameters","title":"Parameters","text":"<ul> <li>git': GitVCS val</li> <li>rev': String val</li> <li>resultReceiver': RepoOperationResultReceiver tag</li> <li>next': RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitCheckoutRepo/#returns","title":"Returns","text":"<ul> <li>GitCheckoutRepo val^</li> </ul>"},{"location":"corral-vcs-GitCheckoutRepo/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-GitCheckoutRepo/#let-git-gitvcs-val","title":"let git: GitVCS val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitCheckoutRepo/#let-rev-string-val","title":"let rev: String val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitCheckoutRepo/#let-next-repooperation-val","title":"let next: RepoOperation val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitCheckoutRepo/#let-resultreceiver-repooperationresultreceiver-tag","title":"let resultReceiver: RepoOperationResultReceiver tag","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitCheckoutRepo/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-GitCheckoutRepo/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun val apply(\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-vcs-GitCheckoutRepo/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> </ul>"},{"location":"corral-vcs-GitCheckoutRepo/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-GitQueryTags/","title":"GitQueryTags","text":"<p>[Source] <pre><code>class val GitQueryTags is\nRepoOperation val\n</code></pre></p>"},{"location":"corral-vcs-GitQueryTags/#implements","title":"Implements","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitQueryTags/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-GitQueryTags/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\ngit': GitVCS val,\nresultReceiver': RepoOperationResultReceiver tag,\nnext': TagListReceiver val)\n: GitQueryTags val^\n</code></pre>"},{"location":"corral-vcs-GitQueryTags/#parameters","title":"Parameters","text":"<ul> <li>git': GitVCS val</li> <li>resultReceiver': RepoOperationResultReceiver tag</li> <li>next': TagListReceiver val</li> </ul>"},{"location":"corral-vcs-GitQueryTags/#returns","title":"Returns","text":"<ul> <li>GitQueryTags val^</li> </ul>"},{"location":"corral-vcs-GitQueryTags/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-GitQueryTags/#let-git-gitvcs-val","title":"let git: GitVCS val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitQueryTags/#let-next-taglistreceiver-val","title":"let next: TagListReceiver val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitQueryTags/#let-resultreceiver-repooperationresultreceiver-tag","title":"let resultReceiver: RepoOperationResultReceiver tag","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitQueryTags/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-GitQueryTags/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun val apply(\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-vcs-GitQueryTags/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> </ul>"},{"location":"corral-vcs-GitQueryTags/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-GitQueryTags/#parse_tags","title":"parse_tags","text":"<p>[Source]</p> <pre><code>fun val parse_tags(\nstdout: String val)\n: Array[String val] iso^\n</code></pre>"},{"location":"corral-vcs-GitQueryTags/#parameters_2","title":"Parameters","text":"<ul> <li>stdout: String val</li> </ul>"},{"location":"corral-vcs-GitQueryTags/#returns_2","title":"Returns","text":"<ul> <li>Array[String val] iso^</li> </ul>"},{"location":"corral-vcs-GitSyncRepo/","title":"GitSyncRepo","text":"<p>[Source] <pre><code>class val GitSyncRepo is\nRepoOperation val\n</code></pre></p>"},{"location":"corral-vcs-GitSyncRepo/#implements","title":"Implements","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitSyncRepo/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-GitSyncRepo/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\ngit': GitVCS val,\nresultReceiver': RepoOperationResultReceiver tag,\nnext': RepoOperation val)\n: GitSyncRepo val^\n</code></pre>"},{"location":"corral-vcs-GitSyncRepo/#parameters","title":"Parameters","text":"<ul> <li>git': GitVCS val</li> <li>resultReceiver': RepoOperationResultReceiver tag</li> <li>next': RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitSyncRepo/#returns","title":"Returns","text":"<ul> <li>GitSyncRepo val^</li> </ul>"},{"location":"corral-vcs-GitSyncRepo/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-GitSyncRepo/#let-git-gitvcs-val","title":"let git: GitVCS val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitSyncRepo/#let-next-repooperation-val","title":"let next: RepoOperation val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitSyncRepo/#let-resultreceiver-repooperationresultreceiver-tag","title":"let resultReceiver: RepoOperationResultReceiver tag","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitSyncRepo/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-GitSyncRepo/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun val apply(\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-vcs-GitSyncRepo/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> </ul>"},{"location":"corral-vcs-GitSyncRepo/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-GitVCS/","title":"GitVCS","text":"<p>[Source]</p> <p>Git implementation of VCS</p> <pre><code>class val GitVCS is\nVCS val\n</code></pre>"},{"location":"corral-vcs-GitVCS/#implements","title":"Implements","text":"<ul> <li>VCS val</li> </ul>"},{"location":"corral-vcs-GitVCS/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-GitVCS/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nenv': Env val)\n: GitVCS val^ ?\n</code></pre>"},{"location":"corral-vcs-GitVCS/#parameters","title":"Parameters","text":"<ul> <li>env': Env val</li> </ul>"},{"location":"corral-vcs-GitVCS/#returns","title":"Returns","text":"<ul> <li>GitVCS val^ ?</li> </ul>"},{"location":"corral-vcs-GitVCS/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-GitVCS/#let-env-env-val","title":"let env: Env val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitVCS/#let-prog-program-val","title":"let prog: Program val","text":"<p>[Source]</p>"},{"location":"corral-vcs-GitVCS/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-GitVCS/#sync_op","title":"sync_op","text":"<p>[Source]</p> <pre><code>fun val sync_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-GitVCS/#parameters_1","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitVCS/#returns_1","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitVCS/#tag_query_op","title":"tag_query_op","text":"<p>[Source]</p> <pre><code>fun val tag_query_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: TagListReceiver val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-GitVCS/#parameters_2","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: TagListReceiver val</li> </ul>"},{"location":"corral-vcs-GitVCS/#returns_2","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitVCS/#checkout_op","title":"checkout_op","text":"<p>[Source]</p> <pre><code>fun val checkout_op(\nrev: String val,\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-GitVCS/#parameters_3","title":"Parameters","text":"<ul> <li>rev: String val</li> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-GitVCS/#returns_3","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-HgVCS/","title":"HgVCS","text":"<p>[Source]</p> <p>Placeholder for Mercurial VCS</p> <pre><code>primitive val HgVCS is\nVCS val\n</code></pre>"},{"location":"corral-vcs-HgVCS/#implements","title":"Implements","text":"<ul> <li>VCS val</li> </ul>"},{"location":"corral-vcs-HgVCS/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-HgVCS/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: HgVCS val^\n</code></pre>"},{"location":"corral-vcs-HgVCS/#returns","title":"Returns","text":"<ul> <li>HgVCS val^</li> </ul>"},{"location":"corral-vcs-HgVCS/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-HgVCS/#sync_op","title":"sync_op","text":"<p>[Source]</p> <pre><code>fun val sync_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-HgVCS/#parameters","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-HgVCS/#returns_1","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-HgVCS/#tag_query_op","title":"tag_query_op","text":"<p>[Source]</p> <pre><code>fun val tag_query_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: TagListReceiver val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-HgVCS/#parameters_1","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: TagListReceiver val</li> </ul>"},{"location":"corral-vcs-HgVCS/#returns_2","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-HgVCS/#checkout_op","title":"checkout_op","text":"<p>[Source]</p> <pre><code>fun val checkout_op(\nrev: String val,\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-HgVCS/#parameters_2","title":"Parameters","text":"<ul> <li>rev: String val</li> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-HgVCS/#returns_3","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-HgVCS/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: HgVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-HgVCS/#parameters_3","title":"Parameters","text":"<ul> <li>that: HgVCS val</li> </ul>"},{"location":"corral-vcs-HgVCS/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-HgVCS/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: HgVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-HgVCS/#parameters_4","title":"Parameters","text":"<ul> <li>that: HgVCS val</li> </ul>"},{"location":"corral-vcs-HgVCS/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-NoOperation/","title":"NoOperation","text":"<p>[Source]</p> <p>NoOperation is a no-op RepoOperation that chains to next RepoOperation.</p> <pre><code>class val NoOperation is\nRepoOperation val\n</code></pre>"},{"location":"corral-vcs-NoOperation/#implements","title":"Implements","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoOperation/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-NoOperation/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nnext': RepoOperation val)\n: NoOperation val^\n</code></pre>"},{"location":"corral-vcs-NoOperation/#parameters","title":"Parameters","text":"<ul> <li>next': RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoOperation/#returns","title":"Returns","text":"<ul> <li>NoOperation val^</li> </ul>"},{"location":"corral-vcs-NoOperation/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-NoOperation/#let-next-repooperation-val","title":"let next: RepoOperation val","text":"<p>[Source]</p>"},{"location":"corral-vcs-NoOperation/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-NoOperation/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun val apply(\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-vcs-NoOperation/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> </ul>"},{"location":"corral-vcs-NoOperation/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-NoOperationRcv/","title":"NoOperationRcv","text":"<p>[Source]</p> <p>NoOperationRcv is a no-op RepoOperation that chains to next TagListReceiver.</p> <pre><code>class val NoOperationRcv is\nRepoOperation val\n</code></pre>"},{"location":"corral-vcs-NoOperationRcv/#implements","title":"Implements","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoOperationRcv/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-NoOperationRcv/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nnext': TagListReceiver val)\n: NoOperationRcv val^\n</code></pre>"},{"location":"corral-vcs-NoOperationRcv/#parameters","title":"Parameters","text":"<ul> <li>next': TagListReceiver val</li> </ul>"},{"location":"corral-vcs-NoOperationRcv/#returns","title":"Returns","text":"<ul> <li>NoOperationRcv val^</li> </ul>"},{"location":"corral-vcs-NoOperationRcv/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-NoOperationRcv/#let-next-taglistreceiver-val","title":"let next: TagListReceiver val","text":"<p>[Source]</p>"},{"location":"corral-vcs-NoOperationRcv/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-NoOperationRcv/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-vcs-NoOperationRcv/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> </ul>"},{"location":"corral-vcs-NoOperationRcv/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-NoReceiver/","title":"NoReceiver","text":"<p>[Source]</p> <p>NoReceiver is a no-op TagListReceiver that chains to next RepoOperation.</p> <pre><code>class val NoReceiver is\nTagListReceiver val\n</code></pre>"},{"location":"corral-vcs-NoReceiver/#implements","title":"Implements","text":"<ul> <li>TagListReceiver val</li> </ul>"},{"location":"corral-vcs-NoReceiver/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-NoReceiver/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nnext': RepoOperation val)\n: NoReceiver val^\n</code></pre>"},{"location":"corral-vcs-NoReceiver/#parameters","title":"Parameters","text":"<ul> <li>next': RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoReceiver/#returns","title":"Returns","text":"<ul> <li>NoReceiver val^</li> </ul>"},{"location":"corral-vcs-NoReceiver/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-NoReceiver/#let-next-repooperation-val","title":"let next: RepoOperation val","text":"<p>[Source]</p>"},{"location":"corral-vcs-NoReceiver/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-NoReceiver/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nrepo: Repo val,\ntags: Array[String val] val)\n: None val\n</code></pre>"},{"location":"corral-vcs-NoReceiver/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> <li>tags: Array[String val] val</li> </ul>"},{"location":"corral-vcs-NoReceiver/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-NoneVCS/","title":"NoneVCS","text":"<p>[Source]</p> <p>NoneVcs is a no-op VCS that invokes its callbacks without doing any work.</p> <pre><code>primitive val NoneVCS is\nVCS val\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#implements","title":"Implements","text":"<ul> <li>VCS val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-NoneVCS/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: NoneVCS val^\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#returns","title":"Returns","text":"<ul> <li>NoneVCS val^</li> </ul>"},{"location":"corral-vcs-NoneVCS/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-NoneVCS/#sync_op","title":"sync_op","text":"<p>[Source]</p> <pre><code>fun val sync_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#parameters","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#returns_1","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#tag_query_op","title":"tag_query_op","text":"<p>[Source]</p> <pre><code>fun val tag_query_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: TagListReceiver val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#parameters_1","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: TagListReceiver val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#returns_2","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#checkout_op","title":"checkout_op","text":"<p>[Source]</p> <pre><code>fun val checkout_op(\nrev: String val,\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#parameters_2","title":"Parameters","text":"<ul> <li>rev: String val</li> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#returns_3","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: NoneVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#parameters_3","title":"Parameters","text":"<ul> <li>that: NoneVCS val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: NoneVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-NoneVCS/#parameters_4","title":"Parameters","text":"<ul> <li>that: NoneVCS val</li> </ul>"},{"location":"corral-vcs-NoneVCS/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-Repo/","title":"Repo","text":"<p>[Source]</p> <p>Generalized details for any kind of VCS repo.</p> <pre><code>class val Repo\n</code></pre>"},{"location":"corral-vcs-Repo/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-Repo/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create(\nremote': String val,\nlocal': FilePath val,\nworkspace': FilePath val)\n: Repo val^\n</code></pre>"},{"location":"corral-vcs-Repo/#parameters","title":"Parameters","text":"<ul> <li>remote': String val</li> <li>local': FilePath val</li> <li>workspace': FilePath val</li> </ul>"},{"location":"corral-vcs-Repo/#returns","title":"Returns","text":"<ul> <li>Repo val^</li> </ul>"},{"location":"corral-vcs-Repo/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-Repo/#let-remote-string-val","title":"let remote: String val","text":"<p>[Source]</p>"},{"location":"corral-vcs-Repo/#let-local-filepath-val","title":"let local: FilePath val","text":"<p>[Source]</p>"},{"location":"corral-vcs-Repo/#let-workspace-filepath-val","title":"let workspace: FilePath val","text":"<p>[Source]</p>"},{"location":"corral-vcs-Repo/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-Repo/#string","title":"string","text":"<p>[Source]</p> <pre><code>fun box string()\n: String val\n</code></pre>"},{"location":"corral-vcs-Repo/#returns_1","title":"Returns","text":"<ul> <li>String val</li> </ul>"},{"location":"corral-vcs-Repo/#is_remote","title":"is_remote","text":"<p>[Source]</p> <pre><code>fun box is_remote()\n: Bool val\n</code></pre>"},{"location":"corral-vcs-Repo/#returns_2","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-RepoOperation/","title":"RepoOperation","text":"<p>[Source]</p> <p>A RepoOperation encapsualtes a high-level operation on a repo that is comprised of a chain of one or more smaller steps that all operate on a single given Repo and are initiated with apply().</p> <pre><code>interface val RepoOperation\n</code></pre>"},{"location":"corral-vcs-RepoOperation/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-RepoOperation/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun val apply(\nrepo: Repo val)\n: None val\n</code></pre>"},{"location":"corral-vcs-RepoOperation/#parameters","title":"Parameters","text":"<ul> <li>repo: Repo val</li> </ul>"},{"location":"corral-vcs-RepoOperation/#returns","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-RepoOperationResultReceiver/","title":"RepoOperationResultReceiver","text":"<p>[Source] <pre><code>interface tag RepoOperationResultReceiver\n</code></pre></p>"},{"location":"corral-vcs-RepoOperationResultReceiver/#public-behaviours","title":"Public Behaviours","text":""},{"location":"corral-vcs-RepoOperationResultReceiver/#reporterror","title":"reportError","text":"<p>[Source]</p> <pre><code>be reportError(\nrepo: Repo val,\nactionResult: ActionResult val)\n</code></pre>"},{"location":"corral-vcs-RepoOperationResultReceiver/#parameters","title":"Parameters","text":"<ul> <li>repo: Repo val</li> <li>actionResult: ActionResult val</li> </ul>"},{"location":"corral-vcs-SvnVCS/","title":"SvnVCS","text":"<p>[Source]</p> <p>Placeholder for Subversion VCS</p> <pre><code>primitive val SvnVCS is\nVCS val\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#implements","title":"Implements","text":"<ul> <li>VCS val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-SvnVCS/#create","title":"create","text":"<p>[Source]</p> <pre><code>new val create()\n: SvnVCS val^\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#returns","title":"Returns","text":"<ul> <li>SvnVCS val^</li> </ul>"},{"location":"corral-vcs-SvnVCS/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-SvnVCS/#sync_op","title":"sync_op","text":"<p>[Source]</p> <pre><code>fun box sync_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#parameters","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#returns_1","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#tag_query_op","title":"tag_query_op","text":"<p>[Source]</p> <pre><code>fun box tag_query_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: TagListReceiver val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#parameters_1","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: TagListReceiver val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#returns_2","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#checkout_op","title":"checkout_op","text":"<p>[Source]</p> <pre><code>fun box checkout_op(\nrev: String val,\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#parameters_2","title":"Parameters","text":"<ul> <li>rev: String val</li> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#returns_3","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#eq","title":"eq","text":"<p>[Source]</p> <pre><code>fun box eq(\nthat: SvnVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#parameters_3","title":"Parameters","text":"<ul> <li>that: SvnVCS val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#returns_4","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#ne","title":"ne","text":"<p>[Source]</p> <pre><code>fun box ne(\nthat: SvnVCS val)\n: Bool val\n</code></pre>"},{"location":"corral-vcs-SvnVCS/#parameters_4","title":"Parameters","text":"<ul> <li>that: SvnVCS val</li> </ul>"},{"location":"corral-vcs-SvnVCS/#returns_5","title":"Returns","text":"<ul> <li>Bool val</li> </ul>"},{"location":"corral-vcs-TagListReceiver/","title":"TagListReceiver","text":"<p>[Source] <pre><code>interface val TagListReceiver\n</code></pre></p>"},{"location":"corral-vcs-TagListReceiver/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-TagListReceiver/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nrepo: Repo val,\ntags: Array[String val] val)\n: None val\n</code></pre>"},{"location":"corral-vcs-TagListReceiver/#parameters","title":"Parameters","text":"<ul> <li>repo: Repo val</li> <li>tags: Array[String val] val</li> </ul>"},{"location":"corral-vcs-TagListReceiver/#returns","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-TagQueryPrinter/","title":"TagQueryPrinter","text":"<p>[Source] <pre><code>class ref TagQueryPrinter is\nTagListReceiver val\n</code></pre></p>"},{"location":"corral-vcs-TagQueryPrinter/#implements","title":"Implements","text":"<ul> <li>TagListReceiver val</li> </ul>"},{"location":"corral-vcs-TagQueryPrinter/#constructors","title":"Constructors","text":""},{"location":"corral-vcs-TagQueryPrinter/#create","title":"create","text":"<p>[Source]</p> <pre><code>new ref create(\nout': OutStream tag)\n: TagQueryPrinter ref^\n</code></pre>"},{"location":"corral-vcs-TagQueryPrinter/#parameters","title":"Parameters","text":"<ul> <li>out': OutStream tag</li> </ul>"},{"location":"corral-vcs-TagQueryPrinter/#returns","title":"Returns","text":"<ul> <li>TagQueryPrinter ref^</li> </ul>"},{"location":"corral-vcs-TagQueryPrinter/#public-fields","title":"Public fields","text":""},{"location":"corral-vcs-TagQueryPrinter/#let-out-outstream-tag","title":"let out: OutStream tag","text":"<p>[Source]</p>"},{"location":"corral-vcs-TagQueryPrinter/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-TagQueryPrinter/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun box apply(\nrepo: Repo val,\ntags: Array[String val] val)\n: None val\n</code></pre>"},{"location":"corral-vcs-TagQueryPrinter/#parameters_1","title":"Parameters","text":"<ul> <li>repo: Repo val</li> <li>tags: Array[String val] val</li> </ul>"},{"location":"corral-vcs-TagQueryPrinter/#returns_1","title":"Returns","text":"<ul> <li>None val</li> </ul>"},{"location":"corral-vcs-VCS/","title":"VCS","text":"<p>[Source]</p> <p>A Vcs provides functions to perform high-level VCS operations that commands use to work with repos.</p> <pre><code>interface val VCS\n</code></pre>"},{"location":"corral-vcs-VCS/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-VCS/#sync_op","title":"sync_op","text":"<p>[Source]</p> <pre><code>fun val sync_op(\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-VCS/#parameters","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-VCS/#returns","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-VCS/#tag_query_op","title":"tag_query_op","text":"<p>[Source]</p> <pre><code>fun val tag_query_op(\nresultReceiver: RepoOperationResultReceiver tag,\nreceiver: TagListReceiver val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-VCS/#parameters_1","title":"Parameters","text":"<ul> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>receiver: TagListReceiver val</li> </ul>"},{"location":"corral-vcs-VCS/#returns_1","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-VCS/#checkout_op","title":"checkout_op","text":"<p>[Source]</p> <pre><code>fun val checkout_op(\nrev: String val,\nresultReceiver: RepoOperationResultReceiver tag,\nnext: RepoOperation val)\n: RepoOperation val\n</code></pre>"},{"location":"corral-vcs-VCS/#parameters_2","title":"Parameters","text":"<ul> <li>rev: String val</li> <li>resultReceiver: RepoOperationResultReceiver tag</li> <li>next: RepoOperation val</li> </ul>"},{"location":"corral-vcs-VCS/#returns_2","title":"Returns","text":"<ul> <li>RepoOperation val</li> </ul>"},{"location":"corral-vcs-VCSBuilder/","title":"VCSBuilder","text":"<p>[Source] <pre><code>interface val VCSBuilder\n</code></pre></p>"},{"location":"corral-vcs-VCSBuilder/#public-functions","title":"Public Functions","text":""},{"location":"corral-vcs-VCSBuilder/#apply","title":"apply","text":"<p>[Source]</p> <pre><code>fun val apply(\nkind: String val)\n: VCS val ?\n</code></pre>"},{"location":"corral-vcs-VCSBuilder/#parameters","title":"Parameters","text":"<ul> <li>kind: String val</li> </ul>"},{"location":"corral-vcs-VCSBuilder/#returns","title":"Returns","text":"<ul> <li>VCS val ?</li> </ul>"}]}